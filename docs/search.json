[{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"binomial-mixture-distributions","dir":"Articles","previous_headings":"","what":"Binomial Mixture Distributions","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Binomial Mixture Distributions developed purpose fitting dispersed Binomial outcome data. Binomial Distribution conditions violated Binomial Mixture Distributions play crucial role fitting data. , using plotting Probability Mass Function values understand much variation can probabilities Binomial Mixture Distributions. distributions theoretically developed mixing Unit Bounded distributions Binomial Distribution. functions can produce Pmf values Binomial Mixture distributions dUniBin - producing Pmf values primarily Uniform Binomial Distribution. dTriBin - producing Pmf values primarily Triangular Binomial Distribution. dBetaBin - producing Pmf values primarily Beta-Binomial Distribution. dKumBin - producing Pmf values primarily Kumaraswamy Binomial Distribution. dGHGBB - producing Pmf values primarily Gaussian Hyper-geometric Generalized Beta-Binomial Distribution. dMcGBB - producing Pmf values primarily McDonald Generalized Beta-Binomial Distribution. dGammaBin - producing Pmf values primarily Gamma Binomial Distribution. dGrassiaIIBin - producing Pmf values primarily Grassia II Binomial Distribution. shape parameters increase plotting variation pmf values difficult therefore special Pmf plot functions developed. namely dBetaBinplot - plot function Beta-Binomial Distribution. dKumBinplot - plot function Kumaraswamy Binomial Distribution. dGHGBBplot - plot function Gaussian Hyper-geometric Generalized Beta-Binomial Distribution. dMcGBBplot - plot function McDonald Generalized Beta-Binomial Distribution. dGammaBinplot - plot function Gamma Binomial Distribution. dGrassiaIIBinplot - plot function Grassia II Binomial Distribution.","code":""},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-uniform-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Uniform Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Uniform Binomial distribution earliest development least amount dispersed Binomial Random variables. shape parameter make distribution limited. pmf values","code":"brv <- 0:10 pmfv <- dUniBin(brv,max(brv))$pdf data <- data.frame(brv,pmfv) ggplot(data,aes(x=brv,y=pmfv))+   geom_point()+geom_line()+   xlab(\"Binomial Random Variables\")+   ylab(\"Probability Mass Function values\")+   ggtitle(\"Pmf values changing\")+   theme_light()+   scale_x_continuous(breaks=seq(0,10,by=1))"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-triangular-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Triangular Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Triangular Binomial Distribution one parameter immense effect pmf values. mode parameter domain region zero one. According changes made mode parameter pmf values react plotted ","code":"brv <- seq(0,15,by=1) mode <- seq(0.02,0.98,by=0.02) #length(mode) #variables output <- matrix(ncol =length(mode) ,nrow=length(brv)) for (i in 1:length(mode))    {    output[,i]<-dTriBin(brv,max(brv),mode[i])$pdf   } data <- data.frame(brv,output) data <- melt(data,id.vars =\"brv\" ) ggplot(data,aes(brv,value,col=variable))+   geom_line()+guides(color=\"none\")+   xlab(\"Binomial Random Variable\")+   ylab(\"Probability Mass values\")+   theme_light()+scale_color_viridis_d()+   ggtitle(\"Triangular Binomial Distribution using dTriBin function\")+   scale_x_continuous(breaks=seq(0,15,by=1))"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-beta-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Beta-Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Beta-Binomial Distribution two shape parameters influence pmf values. namely b. two parameters inherited Beta distribution mixing Binomial Distribution. Pmf values plotted according b values change ,b domain region zero.","code":"b10 <- dBetaBinplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T)  b50 <- dBetaBinplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq= T) b100 <- dBetaBinplot(a=seq(1,100,by=1),b=100,plot_title=\"and when b=100\",a_seq= T) b200 <- dBetaBinplot(a=seq(1,100,by=1),b=200,plot_title=\"and when b=200\",a_seq= T)  grid.arrange(b10,b50,b100,b200,nrow=2,top=\"Pmf values changing when a=seq(1,100,by=1)\") a10 <- dBetaBinplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F)  a50 <- dBetaBinplot(b=seq(1,100,by=1),a=50,plot_title=\"and when a=50\",a_seq= F) a100 <- dBetaBinplot(b=seq(1,100,by=1),a=100,plot_title=\"and when a=100\",a_seq= F) a200 <- dBetaBinplot(b=seq(1,100,by=1),a=200,plot_title=\"and when a=200\",a_seq= F)  grid.arrange(a10,a50,a100,a200,nrow=2,top=\"Pmf values changing when b=seq(1,100,by=1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-kumaraswamy-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Kumaraswamy Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Kumaraswamy Binomial distribution similar Beta-Binomial distribution two shape parameters. Mixing Kumaraswamy distribution Binomial distribution results Kumaraswamy Binomial Distribution. two shape parameters b. plots describing pmf values change respective b shape parameters. ,b domain region zero. iteration parameter replacing infinity value summation part.","code":"b5 <- dKumBinplot(a=seq(1,50,by=1),b=5,plot_title=\"and when b=5\",a_seq=T) b10 <- dKumBinplot(a=seq(1,50,by=1),b=10,plot_title=\"and when b=10\",a_seq=T) b20 <- dKumBinplot(a=seq(1,50,by=1),b=20,plot_title=\"and when b=20\",a_seq=T) b25 <- dKumBinplot(a=seq(1,50,by=1),b=25,plot_title=\"and when b=25\",a_seq=T)  grid.arrange(b5,b10,b20,b25,nrow=2,top=\"Pmf values changing when a=seq(1,50,by=1)\") a5 <- dKumBinplot(b=seq(1,30,by=1),a=5,plot_title=\"and when a=5\",a_seq=F) a10 <- dKumBinplot(b=seq(1,30,by=1),a=10,plot_title=\"and when a=10\",a_seq=F) a20 <- dKumBinplot(b=seq(1,30,by=1),a=20,plot_title=\"and when a=20\",a_seq=F) a25 <- dKumBinplot(b=seq(1,30,by=1),a=25,plot_title=\"and when a=25\",a_seq=F)  grid.arrange(a5,a10,a20,a25,nrow=2,top=\"Pmf values changing when b=seq(1,30,by=1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-gaussian-hyper-geometric-generalized-beta-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Gaussian Hyper-geometric Generalized Beta-Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Gaussian Hyper-geometric Generalized Beta-Binomial GHGBB distribution three shape parameters influence pmf values. ,b c. Gaussian hyper-geometric function plays huge role producing pmf values. study function refer package hypergeo. three parameters makes plotting pmf values difficult still provide variation. plot pmf values respective change shape parameters. ,b,c domain region zero.","code":"b10c5 <- dGHGBBplot(a=seq(.1,100,by=.1),b=10,c=5,                   plot_title=\"and when b=10, c=5\",a_seq=T,b_seq=F)  b50c5 <- dGHGBBplot(a=seq(.1,100,by=.1),b=50,c=5,                   plot_title=\"and when b=50, c=5\",a_seq=T,b_seq=F) b100c5 <- dGHGBBplot(a=seq(.1,100,by=.1),b=100,c=5,                    plot_title=\"and when b=100, c=5\",a_seq=T,b_seq=F) b200c5 <- dGHGBBplot(a=seq(.1,100,by=.1),b=150,c=5,                    plot_title=\"and when b=200, c=5\",a_seq=T,b_seq=F)  grid.arrange(b10c5,b50c5,b100c5,b200c5,nrow=2,              top=\"Pmf values changing when a=seq(0.1,100,by=0.1)\") b20c10 <- dGHGBBplot(a=seq(.1,100,by=.1),b=20,c=10,                    plot_title=\"and when b=20, c=10\",a_seq=T,b_seq=F)  b50c10 <- dGHGBBplot(a=seq(.1,100,by=.1),b=50,c=10,                    plot_title=\"and when b=50, c=10\",a_seq=T,b_seq=F) b100c10 <- dGHGBBplot(a=seq(.1,100,by=.1),b=100,c=10,                     plot_title=\"and when b=100, c=10\",a_seq=T,b_seq=F) b200c10 <- dGHGBBplot(a=seq(.1,100,by=.1),b=200,c=10,                     plot_title=\"and when b=200, c=10\",a_seq=T,b_seq=F)  grid.arrange(b20c10,b50c10,b100c10,b200c10,nrow=2,              top=\"Pmf values changing when a=seq(0.1,100,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-mcdonald-generalized-beta-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for McDonald Generalized Beta-Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"McDonald Generalized Beta-Binomial Distribution quite similar GHGBB distribution use Gaussian hyper-geometric function. Still includes three shape parameters ,b c. necessary small twists shape parameters possible produce vivid pmf values. plots explaining scenarios. ,b,c domain region zero.","code":"b1c5 <- dMcGBBplot(a=seq(.5,10,by=.1),b=1,c=5,                  plot_title=\"and when b=1, c=5\",a_seq=T,b_seq=F) b1.2c5 <- dMcGBBplot(a=seq(.5,10,by=.1),b=1.2,c=5,                    plot_title=\"and when b=1.2, c=5\",a_seq=T,b_seq=F)   b3c5 <- dMcGBBplot(a=seq(.5,10,by=.1),b=3,c=5,                  plot_title=\"and when b=3, c=5\",a_seq=T,b_seq=F) b3.2c5 <- dMcGBBplot(a=seq(.5,10,by=.1),b=3.2,c=5,                    plot_title=\"and when b=3.2 c=5\",a_seq=T,b_seq=F)  grid.arrange(b1c5,b1.2c5,b3c5,b3.2c5,nrow=2,              top=\"Pmf values changing when a=seq(0.5,10,by=0.1)\") b1c1 <- dMcGBBplot(a=seq(.5,100,by=.1),b=1,c=1,                  plot_title=\"and when b=1, c=1\",a_seq=T,b_seq=F) b1c1.5 <- dMcGBBplot(a=seq(.5,100,by=.1),b=1,c=1.5,                    plot_title=\"and when b=1, c=1.5\",a_seq=T,b_seq=F)   b1c2 <- dMcGBBplot(a=seq(.5,100,by=.1),b=1,c=2,                  plot_title=\"and when b=1, c=2\",a_seq=T,b_seq=F) b1c2.5 <- dMcGBBplot(a=seq(.5,100,by=.1),b=1,c=2.5,                    plot_title=\"and when b=1, c=2.5\",a_seq=T,b_seq=F)  grid.arrange(b1c1,b1c1.5,b1c2,b1c2.5,nrow=2,              top=\"Pmf values changing when a=seq(0.5,100,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-gamma-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Gamma Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Gamma Binomial Distribution two shape parameters influence pmf values. namely b. two parameters inherited Gamma distribution mixing Binomial Distribution. Pmf values plotted according b values change ,b domain region zero.","code":"b10 <- dGammaBinplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T)  b50 <- dGammaBinplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq= T) b100 <- dGammaBinplot(a=seq(1,100,by=1),b=100,plot_title=\"and when b=100\",a_seq= T) b200 <- dGammaBinplot(a=seq(1,100,by=1),b=200,plot_title=\"and when b=200\",a_seq= T)  grid.arrange(b10,b50,b100,b200,nrow=2,top=\"Pmf values changing when a=seq(1,100,by=1)\") a10 <- dGammaBinplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F)  a50 <- dGammaBinplot(b=seq(1,100,by=1),a=50,plot_title=\"and when a=50\",a_seq= F) a100 <- dGammaBinplot(b=seq(1,100,by=1),a=100,plot_title=\"and when a=100\",a_seq= F) a200 <- dGammaBinplot(b=seq(1,100,by=1),a=200,plot_title=\"and when a=200\",a_seq= F)  grid.arrange(a10,a50,a100,a200,nrow=2,top=\"Pmf values changing when b=seq(1,100,by=1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-grassia-ii-binomial-distribution","dir":"Articles","previous_headings":"Binomial Mixture Distributions","what":"Probability Mass Function values for Grassia II Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Grassia Binomial Distribution two shape parameters influence pmf values. namely b. Pmf values plotted according b values change ,b domain region zero.","code":"b1 <- dGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.1,plot_title=\"and when b=0.1\",a_seq= T) b25 <- dGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.25,plot_title=\"and when b=0.25\",a_seq= T) b35 <- dGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.35,plot_title=\"and when b=0.35\",a_seq= T) b40 <- dGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.4,plot_title=\"and when b=0.4\",a_seq= T)  grid.arrange(b1,b25,b35,b40,nrow=2,top=\"Pmf values changing when a=seq(0.1,10,by=0.1)\") a1 <- dGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=0.1,plot_title=\"and when a=0.1\",a_seq= F) a25 <- dGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=0.25,plot_title=\"and when a=0.25\",a_seq= F)  a5 <- dGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=0.5,plot_title=\"and when a=0.5\",a_seq= F) a10 <- dGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=1,plot_title=\"and when a=1\",a_seq= F)  grid.arrange(a1,a25,a5,a10,nrow=2,top=\"Pmf values changing when b=seq(0.1,10,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"alternate-binomial-distributions","dir":"Articles","previous_headings":"","what":"Alternate Binomial Distributions","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Alternate Binomial Distributions developed purpose replacing Binomial Distribution. distributions similar Binomial distribution special parameters try explain dispersion. Using pmf values possible understand much variation can achieve probability values generated. functions can develop pmf values Alternate Binomial Distributions dAddBin - producing pmf values primarily Additive Binomial Distribution. dBetaCorrBin - producing pmf values primarily Beta-Correlated Binomial Distribution. dCOMPBin - producing pmf values primarily COM Poisson Binomial Distribution. dCorrBin - producing pmf values primarily Correlated Binomial Distribution. dMultiBin - producing pmf values primarily Multiplicative Binomial Distribution. dLMBin - producing pmf values primarily Lovinson Multiplicative Binomial Distribution. Specific functions created purpose making plot construction easy two parameters involved. functions namely dAddBinplot - plot function Additive Binomial Distribution. dBetaCorrBinplot - plot function Beta Correlated Binomial Distribution. dCOMPBinplot - plot function COM Poisson Binomial Distribution. dCorrBinplot - plot function Correlated Binomial Distribution. dMultiBinplot - plot function Multiplicative Binomial Distribution. dLMBinplot - producing pmf values primarily Lovinson Multiplicative Binomial Distribution.","code":""},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-additive-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Probability Mass Function values for Additive Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Additive Binomial distribution one special parameter , alpha value. included probability value. replace Binomial Distribution. plot generated understand pmf values change. p value -zero one. alpha value -negative one positive one.","code":"alpha.005 <- dAddBinplot(p=seq(0.35,0.65,by=0.01),alpha=-0.005,                        plot_title=\"and when alpha=-0.005\",p_seq= T)  alpha.001 <- dAddBinplot(p=seq(0.35,0.65,by=0.01),alpha=-0.001,                        plot_title=\"and when alpha=-0.001\",p_seq= T) alpha0.001 <- dAddBinplot(p=seq(0.35,0.65,by=0.01),alpha=0.001,                         plot_title=\"and when alpha=0.001\",p_seq= T) alpha0.005 <- dAddBinplot(p=seq(0.35,0.65,by=0.01),alpha=0.005,                         plot_title=\"and when alpha=0.005\",p_seq= T)  grid.arrange(alpha.005,alpha.001,alpha0.001,alpha0.005,nrow=2,              top=\"Pmf values changing when p=seq(0.35,0.65,by=0.01)\") p.10 <- dAddBinplot(alpha=seq(.01,.1,by=0.001),p=0.1,                   plot_title=\"and when p=0.10\",p_seq= F) p.30 <- dAddBinplot(alpha=seq(.01,.1,by=0.001),p=0.3,                   plot_title=\"and when p=0.30\",p_seq= F) p.50 <- dAddBinplot(alpha=seq(.01,.1,by=0.001),p=0.5,                   plot_title=\"and when p=0.50\",p_seq= F) p.85 <- dAddBinplot(alpha=seq(.01,.1,by=0.001),p=0.85,                   plot_title=\"and when p=0.85\",p_seq= F)  grid.arrange(p.10,p.30,p.50,p.85,nrow=2,              top=\"Pmf values changing when alpha=seq(0.01,0.1,by=0.001)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-beta-correlated-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Probability Mass Function values for Beta-Correlated Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Beta-Correlated Binomial distribution three parameters concern, cov covariance Correlated distribution ,b Beta Distribution. Mixing Binomial, Beta Correlated distributions can develop Beta-Correlated Binomial distribution. plot explaining Pmf values change respective cov, b parameters. cov covariance value negative infinity positive infinity. , b domain region zero.","code":"b16cov5 <- dBetaCorrBinplot(a=seq(10,100,by=0.1),b=16,cov=0.0005,                  plot_title=\"and when b=16, cov=0.0005\",a_seq=T,b_seq=F)  b46cov5 <- dBetaCorrBinplot(a=seq(10,100,by=0.1),b=46,cov=0.0005,                    plot_title=\"and when b=46, cov=0.0005\",a_seq=T,b_seq=F)  b76cov5 <- dBetaCorrBinplot(a=seq(10,100,by=0.1),b=76,cov=0.0005,                  plot_title=\"and when b=76, cov=0.0005\",a_seq=T,b_seq=F) b106cov5 <- dBetaCorrBinplot(a=seq(10,100,by=0.1),b=106,cov=0.0005,                    plot_title=\"and when b=106 cov=0.0005\",a_seq=T,b_seq=F)  grid.arrange(b16cov5,b46cov5,b76cov5,b106cov5,nrow=2,              top=\"Pmf values changing when a=seq(10,100,by=0.1)\") b10cov1 <- dBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.001,                  plot_title=\"and when b=10, cov=0.001\",a_seq=T,b_seq=F) b10cov3 <- dBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.003,                    plot_title=\"and when b=10, cov=0.003\",a_seq=T,b_seq=F) b10cov7 <- dBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.007,                  plot_title=\"and when b=10, cov=0.007\",a_seq=T,b_seq=F) b10cov9 <- dBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.009,                    plot_title=\"and when b=10, cov=0.009\",a_seq=T,b_seq=F)  grid.arrange(b10cov1,b10cov3,b10cov7,b10cov9,nrow=2,              top=\"Pmf values changing when a=seq(15,100,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-com-poisson-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Probability Mass Function values for COM Poisson Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"COM Poisson Binomial distribution includes probability value p covariance value v. helpful fitting -dispersed Binomial Outcome data. Given plot Pmf changes relative p v. p probability value zero one. v covariance value negative infinity positive infinity.","code":"v.1 <- dCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=-0.1,                   plot_title=\"and when v=-0.1\",p_seq= T) v.01 <- dCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=-0.01,                    plot_title=\"and when v=-0.01\",p_seq= T)  v01 <- dCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=1,                   plot_title=\"and when v=1\",p_seq= T)  v05 <- dCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=5,                   plot_title=\"and when v=5\",p_seq= T)  grid.arrange(v.1,v.01,v01,v05,nrow=2,              top=\"Pmf values changing when p=seq(0.25,0.75,by=0.01)\") p0.25 <- dCOMPBinplot(v=seq(-0.5,0.5,by=.01),p=0.25,                    plot_title=\"and when p=0.25\",p_seq= F) p0.45 <- dCOMPBinplot(v=seq(-0.5,0.5,by=.01),p=0.45,                     plot_title=\"and when p=0.45\",p_seq= F) p0.50 <- dCOMPBinplot(v=seq(-0.5,0.5,by=.01),p=0.50,                     plot_title=\"and when p=0.50\",p_seq= F) p0.65 <- dCOMPBinplot(v=seq(-0.5,0.5,by=.01),p=0.65,                     plot_title=\"and when p=0.65\",p_seq= F)  grid.arrange(p0.25,p0.45,p0.50,p0.65,nrow=2,              top=\"Pmf values changing when v=seq(-0.5,0.5,by=0.01)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-correlated-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Probability Mass Function values for Correlated Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Pmf values Correlated Binomial distribution influenced covariance value cov probability value p. provide nuance Pmf values cov p changes. given plot explains situation Pmf values change regarding cov p. p probability value zero one. cov covariance value negative infinity positive infinity.","code":"cov.0001 <- dCorrBinplot(p=seq(0.35,0.75,by=0.001),cov=-0.0005,                        plot_title=\"and when cov=-0.0005\",p_seq= T) cov.0005 <- dCorrBinplot(p=seq(0.35,0.75,by=0.001),cov=-0.0001,                        plot_title=\"and when cov=-0.0001\",p_seq= T)  cov0.01 <- dCorrBinplot(p=seq(0.35,0.75,by=0.001),cov=0.01,                         plot_title=\"and when cov=0.01\",p_seq= T)  cov0.05 <- dCorrBinplot(p=seq(0.35,0.75,by=0.001),cov=0.02,                         plot_title=\"and when cov=0.02\",p_seq= T)  grid.arrange(cov.0001,cov.0005,cov0.01,cov0.05,nrow=2,              top=\"Pmf values changing when p=seq(0.35,0.75,by=0.001)\") p0.075 <- dCorrBinplot(cov=seq(0.002,0.004,by=.0001),p=0.075,                     plot_title=\"and when p=0.075\",p_seq= F) p0.175 <- dCorrBinplot(cov=seq(0.002,0.004,by=.0001),p=0.175,                     plot_title=\"and when p=0.175\",p_seq= F) p0.275 <- dCorrBinplot(cov=seq(0.002,0.004,by=.0001),p=0.275,                     plot_title=\"and when p=0.275\",p_seq= F) p0.375 <- dCorrBinplot(cov=seq(0.002,0.004,by=.0001),p=0.375,                     plot_title=\"and when p=0.375\",p_seq= F)  grid.arrange(p0.075,p0.175,p0.275,p0.375,nrow=2,              top=\"Pmf values changing when cov=seq(0.002,0.004,by=0.0001)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-multiplicative-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Probability Mass Function values for Multiplicative Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Similar COM Poisson Binomial Correlated Binomial distributions distribution also influenced probability value. Although influence can happen theta parameter well. Therefore changing values theta parameter p value can clearly see Pmf values change. Given plots . p probability value zero one. theta parameter domain region zero.","code":"theta1 <- dMultiBinplot(p=seq(0.01,0.99,by=0.01),theta=1,                        plot_title=\"and when theta=1\",p_seq= T)  theta5 <- dMultiBinplot(p=seq(0.01,0.99,by=0.01),theta=5,                        plot_title=\"and when theta=5\",p_seq= T) theta10 <- dMultiBinplot(p=seq(0.01,0.99,by=0.01),theta=10,                       plot_title=\"and when theta=10\",p_seq= T) theta50 <- dMultiBinplot(p=seq(0.01,0.99,by=0.01),theta=50,                       plot_title=\"and when theta=50\",p_seq= T)  grid.arrange(theta1,theta5,theta10,theta50,nrow=2,              top=\"Pmf values changing when p=seq(0.01,0.99,by=0.01)\") p0.10 <- dMultiBinplot(theta=seq(1,20,by=0.01),p=0.01,                      plot_title=\"and when p=0.010\",p_seq= F) p0.25 <- dMultiBinplot(theta=seq(1,20,by=0.01),p=0.015,                      plot_title=\"and when p=0.015\",p_seq= F) p0.50 <- dMultiBinplot(theta=seq(1,20,by=0.01),p=0.90,                      plot_title=\"and when p=0.900\",p_seq= F) p0.75 <- dMultiBinplot(theta=seq(1,20,by=0.01),p=0.925,                      plot_title=\"and when p=0.925\",p_seq= F)  grid.arrange(p0.10,p0.25,p0.50,p0.75,nrow=2,              top=\"Pmf values changing when theta=seq(1,20,by=0.01)\")"},{"path":"/articles/BMDs_and_ABDs_dxxxBin.html","id":"probability-mass-function-values-for-lovinson-multiplicative-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Probability Mass Function values for Lovinson Multiplicative Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions PMF values","text":"Similar Multiplicative Binomial distribution. changing values phi parameter p value can clearly see Pmf values change. Given plots . p probability value zero one. phi parameter domain region zero.","code":"phi1 <- dLMBinplot(p=seq(0.01,0.99,by=0.01),phi=1,                       plot_title=\"and when phi=1\",p_seq= T)  phi5 <- dLMBinplot(p=seq(0.01,0.99,by=0.01),phi=5,                       plot_title=\"and when phi=5\",p_seq= T) phi10 <- dLMBinplot(p=seq(0.01,0.99,by=0.01),phi=10,                        plot_title=\"and when phi=10\",p_seq= T) phi50 <- dLMBinplot(p=seq(0.01,0.99,by=0.01),phi=50,                        plot_title=\"and when phi=50\",p_seq= T)  grid.arrange(phi1,phi5,phi10,phi50,nrow=2,              top=\"Pmf values changing when p=seq(0.01,0.99,by=0.01)\") p0.10 <- dLMBinplot(phi=seq(1,20,by=0.01),p=0.01,                      plot_title=\"and when p=0.010\",p_seq= F) p0.25 <- dLMBinplot(phi=seq(1,20,by=0.01),p=0.015,                      plot_title=\"and when p=0.015\",p_seq= F) p0.50 <- dLMBinplot(phi=seq(1,20,by=0.01),p=0.90,                      plot_title=\"and when p=0.900\",p_seq= F) p0.75 <- dLMBinplot(phi=seq(1,20,by=0.01),p=0.925,                      plot_title=\"and when p=0.925\",p_seq= F)  grid.arrange(p0.10,p0.25,p0.50,p0.75,nrow=2,              top=\"Pmf values changing when phi=seq(1,20,by=0.01)\")"},{"path":"/articles/BMDs_and_ABDs_EstMGFxxxBin.html","id":"estimating-the-parameters-using-moment-generating-function","dir":"Articles","previous_headings":"","what":"Estimating the parameters using Moment Generating Function","title":"Moment Generating Function method for BMD and ABD","text":"eleven Binomial Mixture Alternate Binomial Distributions Beta-Binomial Distribution related technique. Moment Generating function exists Beta-Binomial Distribution. Let \\(Y=[Y_1,Y_2,...,Y_N]^T\\) random sample size \\(N\\) Beta-Binomial distribution probability mass function. \\(n\\) fixed clusters. Therefore, shape parameters \\(\\alpha\\)() \\(\\beta\\)(b) estimated using equations \\(\\hat{\\alpha}\\) \\(\\hat{\\beta}\\). \\[\\hat{\\alpha}= \\frac{(n*m_1 -m_2)m_1}{n(m_2-m_1-{m_1}^2)+{m_1}^2} \\] \\[\\hat{\\beta}= \\frac{(n*m_1-m_2)(n-m_1)}{n(m_2-m_1-{m_1}^2)+{m_1}^2} \\] \\(m_1=\\sum_{=1}^{N} \\frac{y_i}{N}\\) \\(m_2= \\sum_{=1}^{N} \\frac{{Y_i}^2}{N}\\) first two sample moments. equations produce unique values \\(\\alpha\\) () \\(\\beta\\) (b). code estimating shape parameters using technique function used EstMGFBetaBin.","code":""},{"path":"/articles/BMDs_and_ABDs_EstMGFxxxBin.html","id":"using-the-chromosome-data-provided-in-the-package-","dir":"Articles","previous_headings":"Estimating the parameters using Moment Generating Function","what":"Using the Chromosome data provided in the package.","title":"Moment Generating Function method for BMD and ABD","text":"EstMGFBetaBin function output class mgf, outputs include estimated ,b parameters, minimized Negative Log Likelihood value min, Akaike Information Criterion (AIC) function call input arguments.","code":"|>   No.of.Asso fre |> 1          0  32 |> 2          1 103 |> 3          2 122 |> 4          3  80 |> Estimated alpha parameter for Chromosome data = 6.167982 |> Estimated beta parameter for Chromosome data = 4.455237"},{"path":"/articles/BMDs_and_ABDs_EstMGFxxxBin.html","id":"using-the-male-children-data-provided-in-the-package","dir":"Articles","previous_headings":"Estimating the parameters using Moment Generating Function","what":"Using the Male Children data provided in the package","title":"Moment Generating Function method for BMD and ABD","text":", can use estimated parameters fitBetaBin function check good Beta-Binomial Distribution fitted given Binomial outcome data.","code":"|>    No_of_Males freq |> 1            0    3 |> 2            1   24 |> 3            2  104 |> 4            3  286 |> 5            4  670 |> 6            5 1033 |> 7            6 1343 |> 8            7 1112 |> 9            8  829 |> 10           9  478 |> 11          10  181 |> 12          11   45 |> 13          12    7 |> Estimated alpha parameter Male_children data= 34.13502 |> Estimated beta parameter Male_children data= 31.60849"},{"path":"/articles/BMDs_and_ABDs_EstMLExxxBin.html","id":"negative-log-likelihood-estimation-or-maximum-likelihood-estimation-technique","dir":"Articles","previous_headings":"","what":"Negative Log Likelihood Estimation or Maximum Likelihood Estimation Technique","title":"Minimizing the Negative Log Likelihood for BMD and ABD","text":"Binomial Mixture Alternate Binomial distributions package use technique. simple, using probability mass function can develop Likelihood function maximize develop Negative Log Likelihood function minimize . Maximizing minimizing means finding appropriate values parameters question provide maximum Likelihood value least minimum Negative Log Likelihood value. one parameter estimate possible use brute force technique. number parameters need estimated increases time consuming. Similarly, parameter estimation broad domain also difficult. situations difficulty can use functions optim,mle, mle2, nlm, nlminb. fitODBODis using mle2 function bbmle package. situations user defined functions without help mle2.","code":""},{"path":"/articles/BMDs_and_ABDs_EstMLExxxBin.html","id":"functions-which-does-not-need-bbmle-package","dir":"Articles","previous_headings":"Negative Log Likelihood Estimation or Maximum Likelihood Estimation Technique","what":"Functions which does not need bbmle package","title":"Minimizing the Negative Log Likelihood for BMD and ABD","text":"situations occurring less comparing number distributions fitODBOD. genuinely occur parameter need estimation closed domain domain small. small indicating scenario -zero one greater zero. distributions relation Alternate Binomial Distribution - Additive Binomial Distribution two parameters estimate, p alpha. parameters unique values, therefore estimating enough. Time related estimation dependent data. outputs class mlAB ml, outputs can extracted methods print, summary, coef AIC. Binomial Mixture Distribution - Triangular Binomial Distribution one parameter needs estimated, mode c. -zero one. outputs class mlTB ml, outputs can extracted methods print, summary, coef AIC.","code":"# estimating parameter for p and alpha using Additive Binomial Distribution of Chromosome data Chromosome_data |>   No.of.Asso fre |> 1          0  32 |> 2          1 103 |> 3          2 122 |> 4          3  80 |> Estimated parameter p for Chromosome data= 0.580941 |> Estimated parameter alpha for Chromosome data= 0.088305 |> Estimated parameter mode or c for Chromosome data= 0.707276"},{"path":"/articles/BMDs_and_ABDs_EstMLExxxBin.html","id":"functions-which-does-need-bbmle-package","dir":"Articles","previous_headings":"Negative Log Likelihood Estimation or Maximum Likelihood Estimation Technique","what":"Functions which does need bbmle package","title":"Minimizing the Negative Log Likelihood for BMD and ABD","text":"Using vignette file manual pdf file can get know bbmle package works. Specifically looking mle2 function necessary also class mle2. Notable points related point form coef min nobs minuslogl method preferable try understand functions capability process. can achieve proper results looking inputs mentioned, specific format follow. instances using mle2 function. distributions relation ","code":""},{"path":"/articles/BMDs_and_ABDs_EstMLExxxBin.html","id":"from-alternate-binomial-distributions","dir":"Articles","previous_headings":"Negative Log Likelihood Estimation or Maximum Likelihood Estimation Technique > Functions which does need bbmle package","what":"from Alternate Binomial distributions","title":"Minimizing the Negative Log Likelihood for BMD and ABD","text":"Beta-Correlated Binomial distribution three parameters estimated cov, b. mentioned cov unique value alpha beta can take specific combinations. cov domain region -infinity +infinity. , b domain region greater zero. Correlated Binomial distribution Two parameters needs estimated cov p. unique values distribution. cov domain region -infinity +infinity. p domain region zero one. COM Poisson Binomial distribution Two parameters needs estimated p cov. unique values distribution. cov domain region -infinity +infinity. p domain region zero one. Multiplicative Binomial distribution Two parameters needs estimated p theta. p value unique. p domain region zero one. theta domain region greater zero. Lovinson Multiplicative Binomial distribution Two parameters needs estimated p phi. p value unique. p domain region zero one. phi domain region greater zero.","code":"|> Estimated parameter covariance for Chromosome data= 0.01106996 |> Estimated parameter a for Chromosome data= 12.9595 |> Estimated parameter b for Chromosome data= 9.350303 |> Estimated parameter p for Chromosome data= 0.5809409 |> Estimated parameter covariance for Chromosome data= 0.02149907 |> Estimated parameter p for Chromosome data= 0.5687794 |> Estimated parameter covariance for Chromosome data= 0.7025567 |> Estimated parameter p for Chromosome data= 0.5687846 |> Estimated parameter theta for Chromosome data= 0.8493023 |> Estimated parameter p for Chromosome data= 0.5687846 |> Estimated parameter phi for Chromosome data= 0.8493023"},{"path":"/articles/BMDs_and_ABDs_EstMLExxxBin.html","id":"from-binomial-mixture-distributions","dir":"Articles","previous_headings":"Negative Log Likelihood Estimation or Maximum Likelihood Estimation Technique > Functions which does need bbmle package","what":"from Binomial Mixture distributions","title":"Minimizing the Negative Log Likelihood for BMD and ABD","text":"Beta-Binomial distribution Two parameters estimated b. Together represent unique combination. ,b domain region greater zero. Kumaraswamy Binomial distribution Two parameters estimated b. Together represent unique combination. ,b domain region greater zero. value iteration value variable replacing infinity summation. number iterations estimated well, time consuming. therefore haven’t estimated . GHGBB distribution Three parameters estimated ,b c. represent unique combination whole. ,b,c domain region greater zero. McGBB distribution Three parameters estimated ,b c. represent unique combination whole. ,b,c domain region greater zero. Gamma Binomial distribution Two parameters estimated b. Together represent unique combination. c,l domain region greater zero. Grassia II Binomial distribution Two parameters estimated b. Together represent unique combination. ,b domain region greater zero.","code":"|> Estimated parameter a for Chromosome data= 6.131277 |> Estimated parameter b for Chromosome data= 4.426927 |> Estimated parameter a for Chromosome data= 4.220499 |> Estimated parameter b for Chromosome data= 6.008058 |> Estimated parameter iteration for Chromosome data= 7500 |> Estimated parameter a for Chromosome data= 2.774708 |> Estimated parameter b for Chromosome data= 23.16726 |> Estimated parameter c for Chromosome data= 8.626376 |> Estimated parameter a for Chromosome data= 0.3865119 |> Estimated parameter b for Chromosome data= 16.20521 |> Estimated parameter c for Chromosome data= 9.362786 |> Estimated parameter c for Chromosome data= 7.470102 |> Estimated parameter l for Chromosome data= 4.326182 |> Estimated parameter a for Chromosome data= 13.88833 |> Estimated parameter b for Chromosome data= 0.06473275"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"fitting-alternate-binomial-distributions","dir":"Articles","previous_headings":"","what":"Fitting Alternate Binomial Distributions","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"six Alternate Binomial distributions fitted Alcohol data week 2 expected frequencies plotted actual frequency values. plot can used identify distribution suits best Alcohol data week 2.","code":"Alcohol_data |>   Days week1 week2 |> 1    0    47    42 |> 2    1    54    47 |> 3    2    43    54 |> 4    3    40    40 |> 5    4    40    49 |> 6    5    41    40 |> 7    6    39    43 |> 8    7    95    84 BinRanVar <- Alcohol_data$Days ActFreq <- Alcohol_data$week2  # Fitting Binomial Distribution BinFreq <- fitBin(BinRanVar,ActFreq) |> Chi-squared approximation may be doubtful because expected frequency is less than 5 # printing the results of fitting Binomial distribution print(BinFreq) |> Call:  |> fitBin(x = BinRanVar, obs.freq = ActFreq) |>  |> Chi-squared test for Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  1.66 13.79 49.19 97.48 115.89 82.67 32.76 5.56  |>   |>       estimated probability value : 0.5431436  |>   |>       X-squared : 2265.111   ,df : 6   ,p-value : 0"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"additive-binomial-distribution","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"Additive Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Additive Binomial distribution Para_AddBin <- EstMLEAddBin(BinRanVar,ActFreq)  # printing the coefficients and using them coef(Para_AddBin) |>       p       alpha   |>  0.5466 0.216612 AddBin_p <- Para_AddBin$p AddBin_alpha <- Para_AddBin$alpha  # Fitting Additive Binomial Distribution AddBinFreq <- fitAddBin(BinRanVar, ActFreq, AddBin_p, AddBin_alpha)  # printing the results of fitting Additive Binomial Distribution print(AddBinFreq) |> Call:  |> fitAddBin(x = BinRanVar, obs.freq = ActFreq, p = AddBin_p, alpha = AddBin_alpha) |>  |> Chi-squared test for Additive Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  10.19 47.98 77.94 48.82 30.46 74.95 80.9 27.76  |>   |>       estimated p value : 0.5466  ,estimated alpha parameter : 0.216612  |>   |>       X-squared : 267.5441   ,df : 5   ,p-value : 0"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"beta-correlated-binomial-distribution","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"Beta-Correlated Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Beta Correlated Binoial Distribution Para_BetaCorrBin <- EstMLEBetaCorrBin(x=BinRanVar, freq=ActFreq,                                     cov=0.001,a=10,b=10)  # printing the coefficients and using them coef(Para_BetaCorrBin) |>        cov          a          b  |> 0.06116679 3.30332560 2.70293758 BetaCorrBin_cov <- coef(Para_BetaCorrBin)[1] BetaCorrBin_a <- coef(Para_BetaCorrBin)[2] BetaCorrBin_b <- coef(Para_BetaCorrBin)[3]  # Fitting Beta-Correlated Binomial Distribution BetaCorrBinFreq <- fitBetaCorrBin(BinRanVar,ActFreq,BetaCorrBin_cov,                                 BetaCorrBin_a,BetaCorrBin_b)  # printing the results of fitting Beta-Correlated Binomial Distribution print(BetaCorrBinFreq) |> Call:  |> fitBetaCorrBin(x = BinRanVar, obs.freq = ActFreq, cov = BetaCorrBin_cov,  |>     a = BetaCorrBin_a, b = BetaCorrBin_b) |>  |> Chi-squared test for Beta-Correlated Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  42.37 45.97 47.05 46.75 44.47 41.68 45.46 85.24  |>   |>       estimated covariance value: 0.06116679  |>   |>       estimated a parameter : 3.303326  , estimated b parameter : 2.702938  |>   |>       X-squared : 2.7079   ,df : 4   ,p-value : 0.6078"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"com-poisson-binomial-distribution","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"COM-Poisson Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting COM Poisson Binomial Distribution Para_COMPBin <- EstMLECOMPBin(x=BinRanVar, freq=ActFreq,                             v=12.1,p=0.9)  # printing the coefficients and using them coef(Para_COMPBin) |>           p           v  |>  0.51295510 -0.09267367 COMPBin_p <- coef(Para_COMPBin)[1] COMPBin_v <- coef(Para_COMPBin)[2]  # Fitting COM-Poisson Binomial Distribution COMPBinFreq <- fitCOMPBin(BinRanVar, ActFreq,COMPBin_p,COMPBin_v)  # printing the results of fitting COM-Poisson Binomial Distribution print(COMPBinFreq) |> Call:  |> fitCOMPBin(x = BinRanVar, obs.freq = ActFreq, p = COMPBin_p,  |>     v = COMPBin_v) |>  |> Chi-squared test for COM Poisson Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  49.9 43.89 41.75 41.93 44.16 48.77 56.87 71.73  |>   |>       estimated p value : 0.5129551  ,estimated v parameter : -0.09267367  |>   |>       X-squared : 12.7434   ,df : 5   ,p-value : 0.0259"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"correlated-binomial-distribution","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"Correlated Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Correlated Binomial Distribution Para_CorrBin <- EstMLECorrBin(x=BinRanVar, freq=ActFreq,                             cov=0.0021,p=0.19)  # printing the coefficients and using them coef(Para_CorrBin) |>         p       cov  |> 0.5466030 0.0536791 CorrBin_p <- coef(Para_CorrBin)[1] CorrBin_cov <- coef(Para_CorrBin)[2]  # Fitting Correlated Binomial Distribution CorrBinFreq <- fitCorrBin(BinRanVar, ActFreq,CorrBin_p,CorrBin_cov)  # printing the results of fitting Correlated Binomial Distribution print(CorrBinFreq) |> Call:  |> fitCorrBin(x = BinRanVar, obs.freq = ActFreq, p = CorrBin_p,  |>     cov = CorrBin_cov) |>  |> Chi-squared test for Correlated Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  10.19 47.97 77.94 48.82 30.46 74.95 80.9 27.76  |>   |>       estimated p value : 0.546603  ,estimated cov value : 0.0536791  |>   |>       X-squared : 267.5437   ,df : 5   ,p-value : 0"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"multiplicative-binomial-distribution","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"Multiplicative Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Multiplicative Binomial Distribution Para_MultiBin <- EstMLEMultiBin(x=BinRanVar, freq=ActFreq,                               theta=21,p=0.19)  # printing the coefficients and using them coef(Para_MultiBin) |>         p     theta  |> 0.5129813 0.7220349 MultiBin_p <- coef(Para_MultiBin)[1] MultiBin_theta <- coef(Para_MultiBin)[2]  # Fitting Multiplicative Binomial Distribution MultiBinFreq <- fitMultiBin(BinRanVar, ActFreq,MultiBin_p,MultiBin_theta)  # printing the results of fitting Multiplicative Binomial Distribution print(MultiBinFreq) |> Call:  |> fitMultiBin(x = BinRanVar, obs.freq = ActFreq, p = MultiBin_p,  |>     theta = MultiBin_theta) |>  |> Chi-squared test for Multiplicative Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  47.11 49.22 42.27 38.69 40.75 49.4 63.81 67.76  |>   |>       estimated p value : 0.5129813  ,estimated theta parameter : 0.7220349  |>   |>       X-squared : 18.0917   ,df : 5   ,p-value : 0.0028"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"lovinson-multiplicative-binomial-distribution","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"Lovinson Multiplicative Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Lovinson Multiplicative Binomial Distribution Para_LMBin <- EstMLELMBin(x=BinRanVar, freq=ActFreq,                         phi=21,p=0.19)  # printing the coefficients and using them coef(Para_LMBin) |>         p       phi  |> 0.5129813 0.7220349 LMBin_p <- coef(Para_LMBin)[1] LMBin_phi <- coef(Para_LMBin)[2]  # Fitting Lovinson Multiplicative Binomial Distribution LMBinFreq <- fitLMBin(BinRanVar, ActFreq,LMBin_p,LMBin_phi)  # printing the results of fitting Multiplicative Binomial Distribution print(LMBinFreq) |> Call:  |> fitLMBin(x = BinRanVar, obs.freq = ActFreq, p = LMBin_p, phi = LMBin_phi) |>  |> Chi-squared test for Lovinson Multiplicative Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  47.11 49.22 42.27 38.69 40.75 49.4 63.81 67.76  |>   |>       estimated p value : 0.5129813  ,estimated phi parameter : 0.7220349  |>   |>       X-squared : 18.0917   ,df : 5   ,p-value : 0.0028"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"conclusion","dir":"Articles","previous_headings":"Fitting Alternate Binomial Distributions","what":"Conclusion","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"Binomial Random Variable Observed Frequencies Binomial Distribution Additive Binomial Distribution Beta-Correlated Binomial Distribution Composite Binomial Distribution Correlated Binomial Distribution Multiplicative Binomial Distribution Lovinson Multiplicative Binomial Distribution 0 42 1.66 10.19 42.37 49.9 10.19 47.11 47.11 1 47 13.79 47.98 45.97 43.89 47.97 49.22 49.22 2 54 49.19 77.94 47.05 41.75 77.94 42.27 42.27 3 40 97.48 48.82 46.75 41.93 48.82 38.69 38.69 4 49 115.89 30.46 44.47 44.16 30.46 40.75 40.75 5 40 82.67 74.95 41.68 48.77 74.95 49.4 49.4 6 43 32.76 80.9 45.46 56.87 80.9 63.81 63.81 7 84 5.56 27.76 85.24 71.73 27.76 67.76 67.76 Total 399 399 399 398.99 399 398.99 399.01 399.01 Count difference Values 8 1 1 6 3 1 2 2 Variance 5.7873 1.6945 3.9904 5.8091 5.7977 3.9904 5.803 5.803 p-value - 0 0 0.6078 0.0259 0 0.0028 0.0028 Negative Log Likelihood Value - - 911.2517 817.8709 822.9197 911.2517 825.7617 825.7617 AIC - - 1826.5033 1641.7418 1649.8393 1826.5033 1655.5233 1655.5233 clearly visible Additive Correlated Binomial distributions behave similarly, generate frequency values. Although close actual frequencies. Comparing Binomial distribution generated expected frequencies actual frequencies lead see much difference Binomial distribution suit Alcohol data week 2. Multiplicative COM Poisson Binomial distributions show close values actual frequencies. Multiplicative Lovinson Multiplicative distributions behaving similarly pair. Finally, distribution left Beta Correlated Binomial distribution shows closeness actual frequencies. Therefore clear suitable distribution alcohol data week 2 Beta Correlated Binomial distribution, second choice Multiplicative COM Poisson Binomial distributions final choice Correlated Additive Binomial distributions.","code":"ABD_Total<-colSums(ABD_Data[,-1]) ABD_Variance<-c(var(rep(BinFreq$bin.ran.var,times=BinFreq$obs.freq)),                 var(rep(BinFreq$bin.ran.var,times=BinFreq$exp.freq)),                 var(rep(AddBinFreq$bin.ran.var,times=AddBinFreq$exp.freq)),                 var(rep(BetaCorrBinFreq$bin.ran.var,times=BetaCorrBinFreq$exp.freq)),                 var(rep(COMPBinFreq$bin.ran.var,times=COMPBinFreq$exp.freq)),                 var(rep(CorrBinFreq$bin.ran.var,times=CorrBinFreq$exp.freq)),                 var(rep(MultiBinFreq$bin.ran.var,times=MultiBinFreq$exp.freq)),                 var(rep(LMBinFreq$bin.ran.var,times=LMBinFreq$exp.freq))                 ) ABD_Variance<-round(ABD_Variance,4)  ABD_p_value<-c(BinFreq$p.value,                AddBinFreq$p.value,                BetaCorrBinFreq$p.value,                COMPBinFreq$p.value,                CorrBinFreq$p.value,                MultiBinFreq$p.value,                LMBinFreq$p.value)  ABD_NegLL<-c(AddBinFreq$NegLL,              BetaCorrBinFreq$NegLL,              COMPBinFreq$NegLL,              CorrBinFreq$NegLL,              MultiBinFreq$NegLL,              LMBinFreq$NegLL) ABD_NegLL<-round(ABD_NegLL,4)  ABD_AIC<-c(AIC(AddBinFreq),            AIC(BetaCorrBinFreq),            AIC(COMPBinFreq),            AIC(CorrBinFreq),            AIC(MultiBinFreq),            AIC(LMBinFreq)            ) ABD_AIC<-round(ABD_AIC,4)  C_of_diff_Values<-c(length(ABD_Data$Actual_Freq),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_BinD) <= 5),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_AddBinD) <= 5),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_BetaCorrBinD) <= 5),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_COMPBinD) <= 5),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_CorrBinD) <= 5),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_MultiBinD) <= 5),                     sum(abs(ABD_Data$Actual_Freq-ABD_Data$EstFreq_LMBinD) <= 5))   rbind(ABD_Data,       c(\"Total\",ABD_Total),       c(\"Count of difference Values\",C_of_diff_Values),       c(\"Variance\",ABD_Variance),       c(\"p-value\",\"-\",ABD_p_value),       c(\"Negative Log Likelihood Value\",\"-\",\"-\",ABD_NegLL),       c(\"AIC\",\"-\",\"-\",ABD_AIC))->ABD_flexed_Data  flextable(data=ABD_flexed_Data,           col_keys = c(\"Bin_RV\",\"Actual_Freq\",\"EstFreq_BinD\",                        \"EstFreq_AddBinD\",\"EstFreq_BetaCorrBinD\",                        \"EstFreq_COMPBinD\",\"EstFreq_CorrBinD\",                        \"EstFreq_MultiBinD\",\"EstFreq_LMBinD\")) %>%   theme_box() %>% autofit()%>%   bold(i=1,part = \"header\") %>%   bold(i=c(9:14),j=1,part = \"body\") %>%   align(i=c(1:14),j=c(1:9),align = \"center\") %>%   set_header_labels(values = c(Bin_RV=\"Binomial Random Variable\",                                Actual_Freq=\"Observed Frequencies\",                                EstFreq_BinD=\"Binomial Distribution\",                                EstFreq_AddBinD=\"Additive Binomial Distribution\",                                EstFreq_BetaCorrBinD=\"Beta-Correlated Binomial Distribution\",                                EstFreq_COMPBinD=\"Composite Binomial Distribution\",                                EstFreq_CorrBinD=\"Correlated Binomial Distribution\",                                EstFreq_MultiBinD=\"Multiplicative Binomial Distribution\",                                EstFreq_LMBinD=\"Lovinson Multiplicative Binomial Distribution\")) %>%   align(i=1,part = \"header\",align = \"center\")"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"fitting-binomial-mixture-distributions","dir":"Articles","previous_headings":"","what":"Fitting Binomial Mixture Distributions","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"eight BMD distributions except Uniform Binomial distribution others can used fitting Alcohol data week 2. also plot generated compare estimated frequencies actual frequency.","code":""},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"triangular-binomial-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"Triangular Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Triangular Binomial distribution Para_TriBin <- EstMLETriBin(BinRanVar,ActFreq)  # printing the coefficients and using them coef(Para_TriBin) |>  mode  |>  0.944444 TriBin_c <- Para_TriBin$mode  # Fitting Triangular Binomial Distribution TriBinFreq <- fitTriBin(BinRanVar, ActFreq, TriBin_c)  # printing the results of fitting Triangular Binomial Distribution print(TriBinFreq) |> Call:  |> fitTriBin(x = BinRanVar, obs.freq = ActFreq, mode = TriBin_c) |>  |> Chi-squared test for Triangular Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  11.74 23.47 35.21 46.94 58.66 70.2 79.57 73.21  |>   |>       estimated Mode value: 0.944444  |>   |>       X-squared : 145.6196   ,df : 6   ,p-value : 0  |>   |>       over dispersion : 0.2308269"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"beta-binomial-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"Beta-Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Beta Correlated Binoial Distribution Para_BetaBin <- EstMLEBetaBin(x=BinRanVar, freq=ActFreq,                             a=10,b=10) # printing the coefficients and using them coef(Para_BetaBin) |>         a         b  |> 0.8575339 0.7007620 BetaBin_a <- coef(Para_BetaBin)[1] BetaBin_b <- coef(Para_BetaBin)[2]  # Fitting Beta-Binomial Distribution BetaBinFreq <- fitBetaBin(BinRanVar, ActFreq,BetaBin_a,BetaBin_b)  # printing the results of fitting Beta-Binomial Distribution print(BetaBinFreq) |> Call:  |> fitBetaBin(x = BinRanVar, obs.freq = ActFreq, a = BetaBin_a,  |>     b = BetaBin_b) |>  |> Chi-squared test for Beta-Binomial Distribution  |>   |>           Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>           expected Frequency :  47.91 42.92 41.95 42.5 44.3 47.81 54.89 76.73  |>   |>           estimated a parameter : 0.8575339   ,estimated b parameter : 0.700762  |>   |>           X-squared : 9.7641   ,df : 5   ,p-value : 0.0822  |>   |>           over dispersion : 0.3908852"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"kumaraswamy-binomial-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"Kumaraswamy Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Kumaraswamy Binomial Distribution Para_KumBin <- EstMLEKumBin(x=BinRanVar, freq=ActFreq,                           a=12.1,b=0.9,it=10000)  # printing the coefficients and using them coef(Para_KumBin) |>            a            b           it  |> 8.641598e-01 7.173736e-01 1.000001e+04 KumBin_a <- coef(Para_KumBin)[1] KumBin_b <- coef(Para_KumBin)[2] KumBin_it <- coef(Para_KumBin)[3]  # Fitting Kumaraswamy Binomial Distribution KumBinFreq <- fitKumBin(BinRanVar, ActFreq,KumBin_a,KumBin_b,KumBin_it*10)  # printing the results of fitting Kumaraswamy Binomial Distribution print(KumBinFreq) |> Call:  |> fitKumBin(x = BinRanVar, obs.freq = ActFreq, a = KumBin_a, b = KumBin_b,  |>     it = KumBin_it * 10) |>  |> Chi-squared test for Kumaraswamy Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  47.34 42.94 42.23 42.92 44.78 48.25 55.07 75.44  |>   |>       estimated a parameter : 0.8641598   ,estimated b parameter : 0.7173736 , |>   |>       estimated it value : 100000.1  |>   |>       X-squared : 9.8904   ,df : 5   ,p-value : 0.0784  |>   |>       over dispersion : 0.3864332"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"ghgbb-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"GHGBB Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting GHGBB Distribution Para_GHGBB <- EstMLEGHGBB(x=BinRanVar, freq=ActFreq,                         a=0.0021,b=0.19,c=0.3)  # printing the coefficients and using them coef(Para_GHGBB) |>         a         b         c  |> 1.6310680 0.3913700 0.6782968 GHGBB_a <- coef(Para_GHGBB)[1] GHGBB_b <- coef(Para_GHGBB)[2] GHGBB_c <- coef(Para_GHGBB)[3]  # Fitting GHGBB Distribution GHGBBFreq <- fitGHGBB(BinRanVar, ActFreq,GHGBB_a,GHGBB_b,GHGBB_c)  # printing the results of fitting GHGBB Distribution print(GHGBBFreq) |> Call:  |> fitGHGBB(x = BinRanVar, obs.freq = ActFreq, a = GHGBB_a, b = GHGBB_b,  |>     c = GHGBB_c) |>  |> Chi-squared test for Gaussian Hypergeometric Generalized Beta-Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  41.18 49.9 49.55 46.32 42.91 41.12 44.31 83.71  |>   |>       estimated a parameter : 1.631068   ,estimated b parameter : 0.39137 , |>   |>       estimated c parameter : 0.6782968  |>   |>       X-squared : 2.3814   ,df : 4   ,p-value : 0.666  |>   |>       over dispersion : 0.3885284"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"mcgbb-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"McGBB Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting McGBB Distribution Para_McGBB <- EstMLEMcGBB(x=BinRanVar, freq=ActFreq,                         a=21,b=0.19,c=0.1)  # printing the coefficients and using them coef(Para_McGBB) |>           a           b           c  |> 36.38181977  0.71809165  0.02127586 McGBB_a <- coef(Para_McGBB)[1] McGBB_b <- coef(Para_McGBB)[2] McGBB_c <- coef(Para_McGBB)[3]  # Fitting McGBB Distribution McGBBFreq <- fitMcGBB(BinRanVar, ActFreq,McGBB_a,McGBB_b,McGBB_c)  # printing the results of fitting McGBB Distribution print(McGBBFreq) |> Call:  |> fitMcGBB(x = BinRanVar, obs.freq = ActFreq, a = McGBB_a, b = McGBB_b,  |>     c = McGBB_c) |>  |> Chi-squared test for Mc-Donald Generalized Beta-Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  47.83 42.57 41.85 42.64 44.64 48.26 55.27 75.94  |>   |>       estimated a parameter : 36.38182   ,estimated b parameter : 0.7180916 , |>   |>       estimated c parameter : 0.02127586  |>   |>       X-squared : 10.2815   ,df : 4   ,p-value : 0.0359  |>   |>       over dispersion : 0.3885724"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"gamma-binomial-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"Gamma Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Gamma Binoial Distribution Para_GammaBin <- EstMLEGammaBin(x=BinRanVar, freq=ActFreq,                               c=10,l=10)  # printing the coefficients and using them coef(Para_GammaBin) |>         c         l  |> 0.7701314 0.7177471 GammaBin_c <- coef(Para_GammaBin)[1] GammaBin_l <- coef(Para_GammaBin)[2]  # Fitting Gamma Binomial Distribution GammaBinFreq <- fitGammaBin(BinRanVar, ActFreq,GammaBin_c,GammaBin_l)  # printing the results of fitting Beta-Binomial Distribution print(GammaBinFreq) |> Call:  |> fitGammaBin(x = BinRanVar, obs.freq = ActFreq, c = GammaBin_c,  |>     l = GammaBin_l) |>  |> Chi-squared test for Gamma Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  47.89 42.59 41.85 42.63 44.62 48.24 55.25 75.94  |>   |>       estimated c parameter : 0.7701314   ,estimated l parameter : 0.7177471   |>   |>       X-squared : 10.2797   ,df : 5   ,p-value : 0.0677  |>   |>       over dispersion : 0.3887571"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"grassia-ii-binomial-distribution","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"Grassia II Binomial Distribution","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"","code":"# Estimating and fitting Grassia II Binoial Distribution Para_GrassiaIIBin <- EstMLEGrassiaIIBin(x=BinRanVar, freq=ActFreq,                                       a=10,b=10) # printing the coefficients and using them coef(Para_GrassiaIIBin) |>         a         b  |> 0.8562267 1.5388073 GrassiaIIBin_a <- coef(Para_GrassiaIIBin)[1] GrassiaIIBin_b <- coef(Para_GrassiaIIBin)[2]  # Fitting Grassia II Binomial Distribution GrassiaIIBinFreq <- fitGrassiaIIBin(BinRanVar, ActFreq,GrassiaIIBin_a,GrassiaIIBin_b)  # printing the results of fitting Grassia II Binomial Distribution print(GrassiaIIBinFreq) |> Call:  |> fitGrassiaIIBin(x = BinRanVar, obs.freq = ActFreq, a = GrassiaIIBin_a,  |>     b = GrassiaIIBin_b) |>  |> Chi-squared test for Grassia II Binomial Distribution  |>   |>       Observed Frequency :  42 47 54 40 49 40 43 84  |>   |>       expected Frequency :  48.32 43.1 41.99 42.4 44.06 47.42 54.42 77.29  |>   |>       estimated a parameter : 0.8562267   ,estimated b parameter : 1.538807   |>   |>       X-squared : 9.4444   ,df : 5   ,p-value : 0.0926  |>   |>       over dispersion : 0.2901217"},{"path":"/articles/BMDs_and_ABDs_fitxxxBin.html","id":"conclusion-1","dir":"Articles","previous_headings":"Fitting Binomial Mixture Distributions","what":"Conclusion","title":"Modelling Binomial Outcome Data using ABDs and BMDs","text":"Binomial Random Variable Observed Frequencies Binomial Distribution Triangular Binomial Distribution Beta Binomial Distribution Kumaraswamy Binomial Distribution Gaussian Hypergeometric Generalized Beta Binomial Distribution McDonald Generalized Beta Binomial Distribution Gamma Binomial Distribution Grassia II Binomial Distribution 0 42 1.66 11.74 47.91 47.34 41.18 47.83 47.89 48.32 1 47 13.79 23.47 42.92 42.94 49.9 42.57 42.59 43.1 2 54 49.19 35.21 41.95 42.23 49.55 41.85 41.85 41.99 3 40 97.48 46.94 42.5 42.92 46.32 42.64 42.63 42.4 4 49 115.89 58.66 44.3 44.78 42.91 44.64 44.62 44.06 5 40 82.67 70.2 47.81 48.25 41.12 48.26 48.24 47.42 6 43 32.76 79.57 54.89 55.07 44.31 55.27 55.25 54.42 7 84 5.56 73.21 76.73 75.44 83.71 75.94 75.94 77.29 Total 399 399 399 399.01 398.97 399 399 399.01 399 Count difference Values 8 1 0 3 3 6 3 3 3 Variance 5.7873 1.6945 3.786 5.8043 5.7735 5.8071 5.7794 5.7794 5.8436 p-value - 0 0 0.0822 0.0784 0.666 0.0359 0.0677 0.0926 Negative Log Likelihood Value - - 873.1721 821.3922 821.5028 817.7109 821.6589 821.659 821.2268 AIC - - 1748.3441 1646.7845 1647.0056 1641.4217 1649.3178 1647.318 1646.4535 Estimated frequencies Triangular distribution far better estimated frequencies Binomial distribution. clear Beta-Binomial, Kumaraswamy Binomial, Gamma Binomial Grassia II Binomial distributions behave identically alcohol data week 2. Also McDonald Generalized Beta-Binomial distribution behave equally alcohol data week 2. Finally, Gaussian Hyper-geometric Generalized Beta-Binomial distribution best suited generates accurate frequencies. Therefore, first choice GHGBB distribution second choice McGBB distribution.","code":"BMD_Total<-colSums(BMD_Data[,-1]) BMD_Variance<-c(var(rep(BinFreq$bin.ran.var,times=BinFreq$obs.freq)),                 var(rep(BinFreq$bin.ran.var,times=BinFreq$exp.freq)),                 var(rep(TriBinFreq$bin.ran.var,times=TriBinFreq$exp.freq)),                 var(rep(BetaBinFreq$bin.ran.var,times=BetaBinFreq$exp.freq)),                 var(rep(KumBinFreq$bin.ran.var,times=KumBinFreq$exp.freq)),                 var(rep(GHGBBFreq$bin.ran.var,times=GHGBBFreq$exp.freq)),                 var(rep(McGBBFreq$bin.ran.var,times=McGBBFreq$exp.freq)),                 var(rep(GammaBinFreq$bin.ran.var,times=GammaBinFreq$exp.freq)),                 var(rep(GrassiaIIBinFreq$bin.ran.var,times=GrassiaIIBinFreq$exp.freq))                 ) BMD_Variance<-round(BMD_Variance,4)  BMD_p_value<-c(BinFreq$p.value,                TriBinFreq$p.value,                BetaBinFreq$p.value,                KumBinFreq$p.value,                GHGBBFreq$p.value,                McGBBFreq$p.value,                GammaBinFreq$p.value,                GrassiaIIBinFreq$p.value)  BMD_NegLL<-c(TriBinFreq$NegLL,              BetaBinFreq$NegLL,              KumBinFreq$NegLL,              GHGBBFreq$NegLL,              McGBBFreq$NegLL,              GammaBinFreq$NegLL,              GrassiaIIBinFreq$NegLL)  BMD_NegLL<-round(BMD_NegLL,4)  BMD_AIC<-c(AIC(TriBinFreq),            AIC(BetaBinFreq),            AIC(KumBinFreq),            AIC(GHGBBFreq),            AIC(McGBBFreq),            AIC(GammaBinFreq),            AIC(GrassiaIIBinFreq))  BMD_AIC<-round(BMD_AIC,4)  C_of_diff_Values<-c(length(BMD_Data$Actual_Freq),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_BinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_TriBinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_BetaBinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_KumBinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_GHGBBD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_McGBBD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_GammaBinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_GrassiaIIBinD) <= 5))   Overdispersion_BMD<-c(Overdispersion(TriBinFreq),                       Overdispersion(BetaBinFreq),                       Overdispersion(KumBinFreq),                       Overdispersion(GHGBBFreq),                       Overdispersion(McGBBFreq),                       Overdispersion(GammaBinFreq),                       Overdispersion(GrassiaIIBinFreq))  rbind(BMD_Data,       c(\"Total\",BMD_Total),       c(\"Count of difference Values\",C_of_diff_Values),       c(\"Variance\",BMD_Variance),       c(\"p-value\",\"-\",BMD_p_value),       c(\"Negative Log Likelihood Value\",\"-\",\"-\",BMD_NegLL),       c(\"AIC\",\"-\",\"-\",BMD_AIC))->BMD_flexed_Data  flextable(data=BMD_flexed_Data,           col_keys = c(\"Bin_RV\",\"Actual_Freq\",\"EstFreq_BinD\",                        \"EstFreq_TriBinD\",\"EstFreq_BetaBinD\",                        \"EstFreq_KumBinD\",\"EstFreq_GHGBBD\",                        \"EstFreq_McGBBD\",\"EstFreq_GammaBinD\",                        \"EstFreq_GrassiaIIBinD\")) %>%   theme_box() %>% autofit()%>%   bold(i=1,part = \"header\") %>%   bold(i=c(9:14),j=1,part = \"body\") %>%   align(i=c(1:14),j=c(1:10),align = \"center\") %>%   set_header_labels(values = c(Bin_RV=\"Binomial Random Variable\",                                Actual_Freq=\"Observed Frequencies\",                                EstFreq_BinD=\"Binomial Distribution\",                                EstFreq_TriBinD=\"Triangular Binomial Distribution\",                                EstFreq_BetaBinD=\"Beta Binomial Distribution\",                                EstFreq_KumBinD=\"Kumaraswamy Binomial Distribution\",                                EstFreq_GHGBBD=\"Gaussian Hypergeometric Generalized Beta Binomial Distribution\",                                EstFreq_McGBBD=\"McDonald Generalized Beta Binomial Distribution\",                                EstFreq_GammaBinD=\"Gamma Binomial Distribution\",                                EstFreq_GrassiaIIBinD=\"Grassia II Binomial Distribution\")) %>%   align(i=1,part = \"header\",align = \"center\")"},{"path":"/articles/BMDs_and_ABDs_NegLLxxxBin.html","id":"calculating-negative-log-likelihood-values","dir":"Articles","previous_headings":"","what":"Calculating Negative Log Likelihood values","title":"Negative Log Likelihood values of BMD and ABD","text":"Binomial Mixture distributions Alternate Binomial distributions Negative Log Likelihood functions. Negative Log Likelihood value equations converted functions. Using Negative Log Likelihood values can find AIC(Akaike Information criteria), useful compare fitted distributions data-set. noted Negative Log Likelihood function Uniform Binomial distribution considered, provides less variety shape Binomial Outcome data. functions given Alternate Binomial Distribution NegLLAddBin NegLLBetaCorrBin NegLLCOMPBin NegLLCorrBin NegLLMultiBin NegLLLMBin Binomial Mixture Distribution NegLLTriBin NegLLBetaBin NegLLKumBin NegLLGHGBB NegLLMcGBB NegLLGammaBin NegLLGrassiaIIBin example finding Negative Log Likelihood value Beta-Binomial distribution Male_children data. , going estimate parameters minimize Negative Log Likelihood value.","code":"|> Minimized Negative Log Likelihood value for Male_children data = 12492.87"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-uniform-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Uniform Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Uniform Binomial distribution provide wide variety Cpmf values distributions. Still plot Cpmf values related binomial random variable given ","code":"brv <- 0:10 cpmfv <- pUniBin(brv,max(brv)) data <- data.frame(brv,cpmfv) ggplot(data,aes(x=brv,y=cpmfv))+   geom_line()+   xlab(\"Binomial Random Variable\")+   ylab(\"Cumulative Probability Mass Function values\")+   ggtitle(\"Cpmf values changing\")+   theme_light()+   scale_x_continuous(breaks=seq(0,10,by=1))"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-triangular-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Triangular Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"one parameter, mode value Triangular Binomial Distribution -zero one. limited amount Cpmf values change mode parameter. Plot Cpmf values relative binomial random variable given ","code":"brv <- seq(0,15,by=1) mode <- seq(0.02,0.98,by=0.01) output <- matrix(ncol =length(mode) ,nrow=length(brv)) for (i in 1:length(mode))    {    output[,i]<-pTriBin(brv,max(brv),mode[i])   } data <- data.frame(brv,output) data <- melt(data,id.vars =\"brv\" ) ggplot(data,aes(brv,value,col=variable))+   geom_line()+guides(fill=FALSE,color=FALSE)+   xlab(\"Binomial Random Variable\")+   ylab(\"Cumulative Probability Mass values\")+   theme_light()+scale_color_viridis_d()+   ggtitle(\"Cpmf values changing for c=seq(0.02,0.98,by=0.01)\") ## Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as ## of ggplot2 3.3.4. scale_x_continuous(breaks=seq(0,15,by=1)) ## <ScaleContinuousPosition> ##  Range:   ##  Limits:    0 --    1"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-beta-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Beta-Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Beta-Binomial two shape parameters b vivid Cpmf value patterns Triangular Binomial distribution. can clearly seen given plot . ,b domain region zero.","code":"b10 <- pBetaBinplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T)  b50 <- pBetaBinplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq= T) b100 <- pBetaBinplot(a=seq(1,100,by=1),b=100,plot_title=\"and when b=100\",a_seq= T) b200 <- pBetaBinplot(a=seq(1,100,by=1),b=200,plot_title=\"and when b=200\",a_seq= T)  grid.arrange(b10,b50,b100,b200,nrow=2,top=\"Cpmf values changing when a=seq(1,100,by=1)\") a10 <- pBetaBinplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F)  a50 <- pBetaBinplot(b=seq(1,100,by=1),a=50,plot_title=\"and when a=50\",a_seq= F) a100 <- pBetaBinplot(b=seq(1,100,by=1),a=100,plot_title=\"and when a=100\",a_seq= F) a200 <- pBetaBinplot(b=seq(1,100,by=1),a=200,plot_title=\"and when a=200\",a_seq= F)  grid.arrange(a10,a50,a100,a200,nrow=2,top=\"Cpmf values changing when b=seq(1,100,by=1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-kumaraswamy-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Kumaraswamy Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Similarly parameters Beta-Binomial distribution yet holding Cpmf values clear advantage mentioned towards Kumaraswamy Binomial distribution. also parameters b. small demonstration using plots show Cpmf values change ,b domain region zero.","code":"b5 <- pKumBinplot(a=seq(1,50,by=1),b=5,plot_title=\"and when b=5\",a_seq=T) b10 <- pKumBinplot(a=seq(1,50,by=1),b=10,plot_title=\"and when b=10\",a_seq=T) b20 <- pKumBinplot(a=seq(1,50,by=1),b=20,plot_title=\"and when b=20\",a_seq=T) b25 <- pKumBinplot(a=seq(1,50,by=1),b=25,plot_title=\"and when b=25\",a_seq=T)  grid.arrange(b5,b10,b10,b25,nrow=2,top=\"Cpmf values changing when a=seq(1,50,by=1)\") a5 <- pKumBinplot(b=seq(1,30,by=1),a=5,plot_title=\"and when a=5\",a_seq=F) a10 <- pKumBinplot(b=seq(1,30,by=1),a=10,plot_title=\"and when a=10\",a_seq=F) a20 <- pKumBinplot(b=seq(1,30,by=1),a=20,plot_title=\"and when a=20\",a_seq=F) a25 <- pKumBinplot(b=seq(1,30,by=1),a=25,plot_title=\"and when a=25\",a_seq=F)  grid.arrange(a5,a10,a20,a25,nrow=2,top=\"Cpmf values changing when b=seq(1,30,by=1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-gaussian-hyper-geometric-generalized-beta-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Gaussian Hyper-geometric Generalized Beta-Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Gaussian Hyper-geometric series function plays massive role generating Cpmf values . three parameters use distribution ,b c. series Cpmf values plotted respective shape parameters ,b,c domain region zero.","code":"b10c5 <- pGHGBBplot(a=seq(.1,100,by=.1),b=10,c=5,                   plot_title=\"and when b=10, c=5\",a_seq=T,b_seq=F)  b50c5 <- pGHGBBplot(a=seq(.1,100,by=.1),b=50,c=5,                   plot_title=\"and when b=50, c=5\",a_seq=T,b_seq=F) b100c5 <- pGHGBBplot(a=seq(.1,100,by=.1),b=100,c=5,                    plot_title=\"and when b=100, c=5\",a_seq=T,b_seq=F) b150c5 <- pGHGBBplot(a=seq(.1,100,by=.1),b=150,c=5,                    plot_title=\"and when b=150, c=5\",a_seq=T,b_seq=F)  grid.arrange(b10c5,b50c5,b100c5,b150c5,nrow=2,              top=\"Cpmf values changing when a=seq(0.1,100,by=0.1)\") b10c10 <- pGHGBBplot(a=seq(.1,100,by=.1),b=10,c=10,                    plot_title=\"and when b=10, c=10\",a_seq=T,b_seq=F)  b50c10 <- pGHGBBplot(a=seq(.1,100,by=.1),b=50,c=10,                    plot_title=\"and when b=50, c=10\",a_seq=T,b_seq=F) b100c10 <- pGHGBBplot(a=seq(.1,100,by=.1),b=100,c=10,                     plot_title=\"and when b=100, c=10\",a_seq=T,b_seq=F) b200c10 <- pGHGBBplot(a=seq(.1,100,by=.1),b=200,c=10,                     plot_title=\"and when b=200, c=10\",a_seq=T,b_seq=F)  grid.arrange(b10c10,b50c10,b100c10,b200c10,nrow=2,              top=\"Cpmf values changing when a=seq(0.1,100,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-mcdonald-generalized-beta-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for McDonald Generalized Beta-Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Similar GHGBB distribution also three shape parameters, ,b c. useful generating vivid Cpmf values. given plots describes ,b,c domain region zero.","code":"b1c5 <- pMcGBBplot(a=seq(.5,10,by=.1),b=1,c=5,                    plot_title=\"and when b=1, c=5\",a_seq=T,b_seq=F) b1.2c5 <- pMcGBBplot(a=seq(.5,10,by=.1),b=1.2,c=5,                    plot_title=\"and when b=1.2, c=5\",a_seq=T,b_seq=F)   b3c5 <- pMcGBBplot(a=seq(.5,10,by=.1),b=3,c=5,                    plot_title=\"and when b=3, c=5\",a_seq=T,b_seq=F) b3.2c5 <- pMcGBBplot(a=seq(.5,10,by=.1),b=3.2,c=5,                    plot_title=\"and when b=3.2, c=5\",a_seq=T,b_seq=F)  grid.arrange(b1c5,b1.2c5,b3c5,b3.2c5,nrow=2,              top=\"Cpmf values changing when a=seq(0.5,10,by=0.1)\") b1c1 <- pMcGBBplot(a=seq(.5,100,by=.1),b=1,c=1,                    plot_title=\"and when b=1, c=1\",a_seq=T,b_seq=F) b1c1.5 <- pMcGBBplot(a=seq(.5,100,by=.1),b=1,c=1.5,                    plot_title=\"and when b=1, c=1.5\",a_seq=T,b_seq=F)   b1c2 <- pMcGBBplot(a=seq(.5,100,by=.1),b=1,c=2,                    plot_title=\"and when b=1, c=2\",a_seq=T,b_seq=F) b1c2.5 <- pMcGBBplot(a=seq(.5,100,by=.1),b=1,c=2.5,                    plot_title=\"and when b=1, c=2.5\",a_seq=T,b_seq=F)  grid.arrange(b1c1,b1c1.5,b1c2,b1c2.5,nrow=2,              top=\"Cpmf values changing when a=seq(0.5,100,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-gamma-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Gamma Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Gamma Binomial two shape parameters b vivid Cpmf value patterns Triangular Binomial distribution. can clearly seen given plot . ,b domain region zero.","code":"b10 <- pGammaBinplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T)  b50 <- pGammaBinplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq= T) b100 <- pGammaBinplot(a=seq(1,100,by=1),b=100,plot_title=\"and when b=100\",a_seq= T) b200 <- pGammaBinplot(a=seq(1,100,by=1),b=200,plot_title=\"and when b=200\",a_seq= T)  grid.arrange(b10,b50,b100,b200,nrow=2,top=\"Cpmf values changing when a=seq(1,100,by=1)\") a10 <- pGammaBinplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F)  a50 <- pGammaBinplot(b=seq(1,100,by=1),a=50,plot_title=\"and when a=50\",a_seq= F) a100 <- pGammaBinplot(b=seq(1,100,by=1),a=100,plot_title=\"and when a=100\",a_seq= F) a200 <- pGammaBinplot(b=seq(1,100,by=1),a=200,plot_title=\"and when a=200\",a_seq= F)  grid.arrange(a10,a50,a100,a200,nrow=2,top=\"Cpmf values changing when b=seq(1,100,by=1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-grassia-ii-binomial-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Mass Function values for Grassia II Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Grassia II Binomial two shape parameters b vivid Cpmf value patterns Triangular Binomial distribution. can clearly seen given plot . ,b domain region zero.","code":"b1 <- pGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.1,plot_title=\"and when b=0.1\",a_seq= T) b25 <- pGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.25,plot_title=\"and when b=0.25\",a_seq= T) b35 <- pGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.35,plot_title=\"and when b=0.35\",a_seq= T) b40 <- pGrassiaIIBinplot(a=seq(0.1,10,by=0.1),b=0.4,plot_title=\"and when b=0.4\",a_seq= T)  grid.arrange(b1,b25,b35,b40,nrow=2,top=\"Cpmf values changing when a=seq(0.1,10,by=0.1)\") a1 <- pGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=0.1,plot_title=\"and when a=0.1\",a_seq= F) a25 <- pGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=0.25,plot_title=\"and when a=0.25\",a_seq= F)  a5 <- pGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=0.5,plot_title=\"and when a=0.5\",a_seq= F) a10 <- pGrassiaIIBinplot(b=seq(0.1,10,by=0.1),a=1,plot_title=\"and when a=1\",a_seq= F)  grid.arrange(a1,a25,a5,a10,nrow=2,top=\"Cpmf values changing when b=seq(0.1,10,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"alternate-binomial-distributions","dir":"Articles","previous_headings":"","what":"Alternate Binomial Distributions","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"help Pmf values Cpmf values generated. situations useful replacing Binomial distributions. can understood looking Cpmf values variety. functions can produce Cpmf values pAddBin - producing Cpmf values Additive Binomial Distribution. pBetaCorrBin - producing Cpmf values Beta-Correlated Binomial Distribution. pCOMPBin - producing Cpmf Values COM Poisson Binomial Distribution. pCorrBin - producing Cpmf values Correlated Binomial Distribution. pMultiBin - producing Cpmf values Multiplicative Binomial Distribution. pLMBin - producing Cpmf values Lovinson Multiplicative Binomial Distribution. one changing parameter distribution, needs specific functions plot Cpmf values. given functions ability pAddBinplot - plot function Additive Binomial Distribution. pBetaCorrBinplot - plot function Beta Correlated Binomial Distribution. pCOMPBinplot - plot function COM Poisson Binomial Distribution. pCorrBinplot - plot function Correlated Binomial Distribution. pMultiBinplot - plot function Multiplicative Binomial Distribution. pLMBinplot - plot function Lovinson Multiplicative Binomial Distribution.","code":""},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-additive-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Cumulative Probability Mass Function values for Additive Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Probability value alpha parameter unique values involved distribution. Slight changes alpha probability value can interest wide changes towards Cpmf values generated. plot explains situations. p value -zero one. alpha value -negative one positive one.","code":"alpha.001 <- pAddBinplot(p=seq(0.35,0.65,by=0.0001),alpha=-0.001,                        plot_title=\"and when alpha=-0.001\",p_seq= T)  alpha.003 <- pAddBinplot(p=seq(0.35,0.65,by=0.0001),alpha=-0.003,                        plot_title=\"and when alpha=-0.003\",p_seq= T) alpha0.005 <- pAddBinplot(p=seq(0.35,0.65,by=0.0001),alpha=0.005,                         plot_title=\"and when alpha=0.005\",p_seq= T) alpha0.008 <- pAddBinplot(p=seq(0.35,0.65,by=0.0001),alpha=0.008,                         plot_title=\"and when alpha=0.008\",p_seq= T)  grid.arrange(alpha.001,alpha.003,alpha0.005,alpha0.008,nrow=2,              top=\"Cpmf values changing when p=seq(0.35,0.65,by=0.0001)\") p.015 <- pAddBinplot(alpha=seq(0.0001,0.05,by=0.0001),p=0.015,                   plot_title=\"and when p=0.0.15\",p_seq= F) p.115 <- pAddBinplot(alpha=seq(0.0001,0.05,by=0.0001),p=0.115,                   plot_title=\"and when p=0.115\",p_seq= F) p.215 <- pAddBinplot(alpha=seq(0.0001,0.05,by=0.0001),p=0.215,                   plot_title=\"and when p=0.215\",p_seq= F) p.315 <- pAddBinplot(alpha=seq(0.0001,0.05,by=0.0001),p=0.315,                   plot_title=\"and when p=0.315\",p_seq= F)  grid.arrange(p.015,p.115,p.215,p.315,nrow=2,              top=\"Cpmf values changing when alpha=seq(0.0001,0.05,by=0.0001)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-beta-correlated-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Cumulative Probability Mass Function values for Beta-Correlated Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Three parameters involved producing Cpmf values Beta-Correlated Binomial distribution. namely cov representing covariance value Correlated distribution ,b shape parameters Beta distribution. plot describing Cpmf values related cov, b parameters. cov covariance value negative infinity positive infinity. , b domain region zero.","code":"b16cov5 <- pBetaCorrBinplot(a=seq(10,100,by=0.1),b=16,cov=0.0005,                  plot_title=\"and when b=16, cov=0.0005\",a_seq=T,b_seq=F)  b46cov5 <- pBetaCorrBinplot(a=seq(10,100,by=0.1),b=46,cov=0.0005,                    plot_title=\"and when b=46, cov=0.0005\",a_seq=T,b_seq=F)  b76cov5 <- pBetaCorrBinplot(a=seq(10,100,by=0.1),b=76,cov=0.0005,                  plot_title=\"and when b=76, cov=0.0005\",a_seq=T,b_seq=F) b106cov5 <- pBetaCorrBinplot(a=seq(10,100,by=0.1),b=106,cov=0.0005,                    plot_title=\"and when b=106 cov=0.0005\",a_seq=T,b_seq=F)  grid.arrange(b16cov5,b46cov5,b76cov5,b106cov5,nrow=2,              top=\"Cpmf values changing when a=seq(10,100,by=0.1)\") b10cov1 <- pBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.001,                  plot_title=\"and when b=10, cov=0.001\",a_seq=T,b_seq=F) b10cov3 <- pBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.003,                    plot_title=\"and when b=10, cov=0.003\",a_seq=T,b_seq=F) b10cov7 <- pBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.007,                  plot_title=\"and when b=10, cov=0.007\",a_seq=T,b_seq=F) b10cov9 <- pBetaCorrBinplot(a=seq(15,100,by=0.1),b=10,cov=0.009,                    plot_title=\"and when b=10, cov=0.009\",a_seq=T,b_seq=F)  grid.arrange(b10cov1,b10cov3,b10cov7,b10cov9,nrow=2,              top=\"Cpmf values changing when a=seq(15,100,by=0.1)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-com-poisson-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Cumulative Probability Mass Function values for COM Poisson Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"COM Poisson Binomial distribution two parameters concern probability value covariance value. Considering covariance special useful can explain -dispersion. plot explaining situation p probability value zero one. v covariance value negative infinity positive infinity.","code":"v.5 <- pCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=0.5,                    plot_title=\"and when v=0.5\",p_seq= T)  v1 <- pCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=1,                    plot_title=\"and when v=1\",p_seq= T)  v3 <- pCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=3,                    plot_title=\"and when v=3\",p_seq= T)  v5 <- pCOMPBinplot(p=seq(0.25,0.75,by=0.001),v=5,                    plot_title=\"and when v=5\",p_seq= T)  grid.arrange(v.5,v1,v3,v5,nrow=2,              top=\"Cpmf values changing when p=seq(0.25,0.75,by=0.001)\") p0.40 <- pCOMPBinplot(v=seq(-0.5,5.5,by=.01),p=0.40,                     plot_title=\"and when p=0.35\",p_seq= F) p0.45 <- pCOMPBinplot(v=seq(-0.5,5.5,by=.01),p=0.45,                     plot_title=\"and when p=0.45\",p_seq= F) p0.50 <- pCOMPBinplot(v=seq(-0.5,5.5,by=.01),p=0.50,                     plot_title=\"and when p=0.55\",p_seq= F) p0.55 <- pCOMPBinplot(v=seq(-0.5,5.5,by=.01),p=0.55,                     plot_title=\"and when p=0.65\",p_seq= F)  grid.arrange(p0.40,p0.45,p0.50,p0.55,nrow=2,              top=\"Cpmf values changing when v=seq(-0.5,5.5,by=0.01)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-correlated-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Cumulative Probability Mass Function values for Correlated Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Correlated Binomial distribution simply considers correlation among binary trials, can result -dispersion. Rather probability value also part distribution. ever covariance probability value change Cpmf values also change. simple plot elaborating . p probability value zero one. cov covariance value negative infinity positive infinity.","code":"cov0.001 <- pCorrBinplot(p=seq(0.15,0.75,by=0.01),cov=0.001,                         plot_title=\"and when cov=0.001\",p_seq= T)  cov0.004 <- pCorrBinplot(p=seq(0.15,0.75,by=0.01),cov=0.004,                         plot_title=\"and when cov=0.004\",p_seq= T)  cov0.005 <- pCorrBinplot(p=seq(0.15,0.75,by=0.01),cov=0.005,                         plot_title=\"and when cov=0.005\",p_seq= T)   cov0.01 <- pCorrBinplot(p=seq(0.15,0.75,by=0.01),cov=0.01,                         plot_title=\"and when cov=0.01\",p_seq= T)  grid.arrange(cov0.001,cov0.004,cov0.005,cov0.01,nrow=2,              top=\"Cpmf values changing when p=seq(0.15,0.75,by=0.01)\") p0.15 <- pCorrBinplot(cov=seq(0.002,0.009,by=.0001),p=0.15,                     plot_title=\"and when p=0.15\",p_seq= F) p0.25 <- pCorrBinplot(cov=seq(0.002,0.009,by=.0001),p=0.25,                     plot_title=\"and when p=0.25\",p_seq= F) p0.50 <- pCorrBinplot(cov=seq(0.002,0.009,by=.0001),p=0.50,                     plot_title=\"and when p=0.50\",p_seq= F) p0.75 <- pCorrBinplot(cov=seq(0.002,0.009,by=.0001),p=0.75,                     plot_title=\"and when p=0.75\",p_seq= F)  grid.arrange(p0.15,p0.25,p0.50,p0.75,nrow=2,              top=\"Cpmf values changing when cov=seq(0.002,0.009,by=0.0001)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-multiplicative-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Cumulative Probability Mass Function values for Multiplicative Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Multiplicative Binomial Distribution also two important parameters probability value p theta parameter. Given plots describing Cpmf values change respective p theta. p probability value zero one. theta parameter domain region zero.","code":"theta1 <- pMultiBinplot(p=seq(0.01,0.99,by=0.005),theta=1,                        plot_title=\"and when theta=1\",p_seq= T) theta1.25 <- pMultiBinplot(p=seq(0.01,0.99,by=0.005),theta=1.25,                        plot_title=\"and when theta=1.25\",p_seq= T) theta1.75 <- pMultiBinplot(p=seq(0.01,0.99,by=0.005),theta=1.75,                       plot_title=\"and when theta=1.75\",p_seq= T)    theta2 <- pMultiBinplot(p=seq(0.01,0.99,by=0.005),theta=2,                       plot_title=\"and when theta=2\",p_seq= T)  grid.arrange(theta1,theta1.25,theta1.75,theta2,nrow=2,              top=\"Cpmf values changing when p=seq(0.01,0.99,by=0.005)\") p0.35 <- pMultiBinplot(theta=seq(1.001,5,by=0.001),p=0.35,                      plot_title=\"and when p=0.35\",p_seq= F) p0.45 <- pMultiBinplot(theta=seq(1.001,5,by=0.001),p=0.45,                      plot_title=\"and when p=0.45\",p_seq= F) p0.55 <- pMultiBinplot(theta=seq(1.001,5,by=0.001),p=0.55,                      plot_title=\"and when p=0.55\",p_seq= F) p0.65 <- pMultiBinplot(theta=seq(1.001,5,by=0.001),p=0.65,                      plot_title=\"and when p=0.65\",p_seq= F)  grid.arrange(p0.35,p0.45,p0.55,p0.65,nrow=2,              top=\"Cpmf values changing when theta=seq(1.001,5,by=0.001)\")"},{"path":"/articles/BMDs_and_ABDs_pxxxBin.html","id":"cumulative-probability-mass-function-values-for-lovinson-multiplicative-binomial-distribution","dir":"Articles","previous_headings":"Alternate Binomial Distributions","what":"Cumulative Probability Mass Function values for Lovinson Multiplicative Binomial Distribution","title":"Binomial Mixture and Alternate Binomial Distributions CPMF values","text":"Lovinson Multiplicative Binomial Distribution also two important parameters probability value p phi parameter. Given plots describing Cpmf values change respective p phi. p probability value zero one. phi parameter domain region zero.","code":"phi1 <- pLMBinplot(p=seq(0.01,0.99,by=0.001),phi=1,                       plot_title=\"and when phi=1\",p_seq= T) phi1.25 <- pLMBinplot(p=seq(0.01,0.99,by=0.001),phi=1.25,                          plot_title=\"and when phi=1.25\",p_seq= T) phi1.75 <- pLMBinplot(p=seq(0.01,0.99,by=0.001),phi=1.75,                          plot_title=\"and when phi=1.75\",p_seq= T)    phi2 <- pLMBinplot(p=seq(0.01,0.99,by=0.001),phi=2,                       plot_title=\"and when phi=2\",p_seq= T)  grid.arrange(phi1,phi1.25,phi1.75,phi2,nrow=2,              top=\"Cpmf values changing when p=seq(0.01,0.99,by=0.001)\") p0.35 <- pLMBinplot(phi=seq(1.001,5,by=0.001),p=0.35,                      plot_title=\"and when p=0.35\",p_seq= F) p0.45 <- pLMBinplot(phi=seq(1.001,5,by=0.001),p=0.45,                      plot_title=\"and when p=0.45\",p_seq= F) p0.55 <- pLMBinplot(phi=seq(1.001,5,by=0.001),p=0.55,                      plot_title=\"and when p=0.55\",p_seq= F) p0.65 <- pLMBinplot(phi=seq(1.001,5,by=0.001),p=0.65,                      plot_title=\"and when p=0.65\",p_seq= F)  grid.arrange(p0.35,p0.45,p0.55,p0.65,nrow=2,              top=\"Cpmf values changing when phi=seq(1.001,5,by=0.001)\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-uniform-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Uniform Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"Uniform distribution involve shape parameter parameter . Therefore significant fluctuation Pdf values. Yet plotted ","code":"prob <- seq(0.01,0.99,by=0.01) pdfv <- dUNI(prob)$pdf data <- data.frame(prob,pdfv) ggplot(data)+   geom_line(aes(x=prob,y=pdfv))+   xlab(\"Vector of Probabilities\")+   ylab(\"Probability density values\")+   theme_light()+   ggtitle(\"Pdf values changing\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-triangular-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Triangular Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"Triangular distribution includes one parameter, mode value -zero one. plot explaining pdf values change mode changes","code":"prob <- seq(0.01,0.99,by=0.01) mode <- seq(0.01,0.99,by=0.01) output <- matrix(ncol =length(mode) ,nrow=length(prob)) for (i in 1:length(mode))    {    output[,i]<-dTRI(prob,mode[i])$pdf   } data <- data.frame(prob,output) data <- melt(data,id.vars =\"prob\" ) ggplot(data,aes(prob,value,col=variable))+   geom_line()+guides(color=\"none\")+   scale_color_viridis_d()+   xlab(\"Vector of Probabilities\")+   ylab(\"Probability density values\")+theme_light()+   ggtitle(\"Pdf values changing when c=seq(0.01,0.99,by=0.01)\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-beta-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Beta Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"Beta Distribution two shape parameters, b. give opportunity acquire variety pdf values combination b. brief explanation occurs. ,b domain region zero.","code":"b10 <- dBETAplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T)  b50 <- dBETAplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq= T) b100 <- dBETAplot(a=seq(1,100,by=1),b=100,plot_title=\"and when b=100\",a_seq= T) b200 <- dBETAplot(a=seq(1,100,by=1),b=200,plot_title=\"and when b=200\",a_seq= T)  grid.arrange(b10,b50,b100,b200,nrow=2,top=\"Pdf values changing when a=seq(1:100,by=1)\") a10 <- dBETAplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F)  a50 <- dBETAplot(b=seq(1,100,by=1),a=50,plot_title=\"and when a=50\",a_seq= F) a100 <- dBETAplot(b=seq(1,100,by=1),a=100,plot_title=\"and when a=100\",a_seq= F) a200 <- dBETAplot(b=seq(1,100,by=1),a=200,plot_title=\"and when a=200\",a_seq= F)  grid.arrange(a10,a50,a100,a200,nrow=2,top=\"Pdf values changing when b=seq(1:100,by=1)\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-kumaraswamy-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Kumaraswamy Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"Two shape parameters included Kumaraswamy distribution, similar Beta distribution. Yet, widely believed distribution covers pdf value variations Beta distribution produce. plots understand shape parameters affect pdf values. ,b domain region zero.","code":"b10 <- dKUMplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq=T)  b50 <- dKUMplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq=T) b100 <- dKUMplot(a=seq(1,100,by=1),b=100,plot_title=\"and when b=100\",a_seq=T) b200 <- dKUMplot(a=seq(1,100,by=1),b=200,plot_title=\"and when b=200\",a_seq=T)  grid.arrange(b10,b50,b100,b200,nrow=2,top=\"Pdf values changing when a=seq(1:100,by=1)\") a3 <- dKUMplot(b=seq(1,100,by=1),a=3,plot_title=\"and when a=3\",a_seq=F)  a5 <- dKUMplot(b=seq(1,100,by=1),a=5,plot_title=\"and when a=5\",a_seq=F) a10 <- dKUMplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq=F) a15 <- dKUMplot(b=seq(1,100,by=1),a=15,plot_title=\"and when a=15\",a_seq=F)  grid.arrange(a3,a5,a10,a15,nrow=2,top=\"Pdf values changing when b=seq(1:100,by=1)\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-gaussian-hyper-geometric-generalized-beta-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Gaussian Hyper-geometric Generalized Beta Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"distribution completely different others, contains binomial trial value n. n occurs reverse engineered using Gaussian Hyper-geometric Generalized Beta Binomial distribution. three shape parameters ,b c. plots describing pdf values change respective shape parameters. ,b,c domain region zero. n natural number take values 0,1,2,… .","code":"b10c.5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=10,c=.5,                      plot_title=\"and when b=10, c=0.5\",a_seq=T,b_seq=F)  b50c.5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=50,c=.5,                      plot_title=\"and when b=50, c=0.5\",a_seq=T,b_seq=F) b100c.5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=100,c=.5,                       plot_title=\"and when b=100, c=0.5\",a_seq=T,b_seq=F) b200c.5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=130,c=.5,                       plot_title=\"and when b=130, c=0.5\",a_seq=T,b_seq=F)  grid.arrange(b10c.5,b50c.5,b100c.5,b200c.5,nrow=2,              top=\"Pdf values changing when a=seq(0.1,100,by=0.1)\") b10c1 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=10,c=1,                     plot_title=\"and when b=10, c=1\",a_seq=T,b_seq=F)  b50c1 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=50,c=1,                     plot_title=\"and when b=50, c=1\",a_seq=T,b_seq=F) b100c1 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=100,c=1,                      plot_title=\"and when b=100, c=1\",a_seq=T,b_seq=F) b200c1 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=130,c=1,                      plot_title=\"and when b=200, c=1\",a_seq=T,b_seq=F)  grid.arrange(b10c1,b50c1,b100c1,b200c1,nrow=2,              top=\"Pdf values changing when a=seq(0.1,100,by=0.1)\") b10c5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=10,c=5,                     plot_title=\"and when b=10, c=5\",a_seq=T,b_seq=F)  b50c5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=50,c=5,                     plot_title=\"and when b=50, c=5\",a_seq=T,b_seq=F) b100c5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=100,c=5,                      plot_title=\"and when b=100, c=5\",a_seq=T,b_seq=F) b200c5 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=150,c=5,                      plot_title=\"and when b=150, c=5\",a_seq=T,b_seq=F)  grid.arrange(b10c5,b50c5,b100c5,b200c5,nrow=2,              top=\"Pdf values changing when a=a=seq(0.1,100,by=0.1)\") b10c10 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=10,c=10,                      plot_title=\"and when b=10, c=10\",a_seq=T,b_seq=F)  b50c10 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=50,c=10,                      plot_title=\"and when b=50, c=10\",a_seq=T,b_seq=F) b100c10 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=100,c=10,                       plot_title=\"and when b=100, c=10\",a_seq=T,b_seq=F) b200c10 <- dGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=200,c=10,                       plot_title=\"and when b=200, c=10\",a_seq=T,b_seq=F)  grid.arrange(b10c10,b50c10,b100c10,b200c10,nrow=2,              top=\"Pdf values changing when a=seq(0.1,100,by=0.1)\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-generalized-beta-type1-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Generalized Beta Type1 Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"Generalized Beta Type 1 distribution three shape parameters ,b c. proper values ,b,c can behave similarly Beta Kumaraswamy Distribution. Plots generated ,b,c values change pdf values . ,b,c domain region zero.","code":"b10c.5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=10,c=.5,                     plot_title=\"and when b=10, c=0.5\",a_seq=T,b_seq=F)  b50c.5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=50,c=.5,                     plot_title=\"and when b=50, c=0.5\",a_seq=T,b_seq=F) b100c.5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=100,c=.5,                      plot_title=\"and when b=100, c=0.5\",a_seq=T,b_seq=F) b130c.5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=130,c=.5,                      plot_title=\"and when b=130, c=0.5\",a_seq=T,b_seq=F)  grid.arrange(b10c.5,b50c.5,b100c.5,b130c.5,nrow=2,              top=\"Pdf values changing when a=seq(0.1,100,by=0.1)\") b10c1 <- dGBeta1plot(a=seq(.1,100,by=.1),b=10,c=1,                    plot_title=\"and when b=10, c=1\",a_seq=T,b_seq=F)  b50c1 <- dGBeta1plot(a=seq(.1,100,by=.1),b=50,c=1,                    plot_title=\"and when b=50, c=1\",a_seq=T,b_seq=F) b100c1 <- dGBeta1plot(a=seq(.1,100,by=.1),b=100,c=1,                     plot_title=\"and when b=100, c=1\",a_seq=T,b_seq=F) b130c1 <- dGBeta1plot(a=seq(.1,100,by=.1),b=130,c=1,                     plot_title=\"and when b=130, c=1\",a_seq=T,b_seq=F)  grid.arrange(b10c1,b50c1,b100c1,b130c1,nrow=2,              top=\"Pdf values changing when a=seq(0.1,100,by=0.1)\") b10c5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=10,c=5,                    plot_title=\"and when b=10, c=5\",a_seq=T,b_seq=F)  b50c5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=50,c=5,                    plot_title=\"and when b=50, c=5\",a_seq=T,b_seq=F) b100c5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=100,c=5,                     plot_title=\"and when b=100, c=5\",a_seq=T,b_seq=F) b150c5 <- dGBeta1plot(a=seq(.1,100,by=.1),b=150,c=5,                     plot_title=\"and when b=150, c=5\",a_seq=T,b_seq=F)  grid.arrange(b10c5,b50c5,b100c5,b150c5,nrow=2,              top=\"Pdf values changing when a=a=seq(0.1,100,by=0.1)\") b10c10 <- dGBeta1plot(a=seq(.1,100,by=.1),b=10,c=10,                     plot_title=\"and when b=10, c=10\",a_seq=T,b_seq=F)  b50c10 <- dGBeta1plot(a=seq(.1,100,by=.1),b=50,c=10,                     plot_title=\"and when b=50, c=10\",a_seq=T,b_seq=F) b100c10 <- dGBeta1plot(a=seq(.1,100,by=.1),b=100,c=10,                      plot_title=\"and when b=100, c=10\",a_seq=T,b_seq=F) b200c10 <- dGBeta1plot(a=seq(.1,100,by=.1),b=200,c=10,                      plot_title=\"and when b=200, c=10\",a_seq=T,b_seq=F)  grid.arrange(b10c10,b50c10,b100c10,b200c10,nrow=2,              top=\"Pdf values changing when a=seq(0.1,100,by=0.1)\")"},{"path":"/articles/Mixing_Distributions_dxxx.html","id":"probability-density-values-for-gamma-distribution","dir":"Articles","previous_headings":"","what":"Probability Density values for Gamma Distribution","title":"Pdf values of Unit Bounded Distributions or Mixing Distributions","text":"Gamma distribution two shape parameters b. Plots generated ,b values change pdf values . ,b domain region zero.","code":"b10 <- dGAMMAplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T) b50 <- dGAMMAplot(a=seq(1,100,by=1),b=50,plot_title=\"and when b=50\",a_seq= T) b20 <- dGAMMAplot(a=seq(1,100,by=1),b=20,plot_title=\"and when b=20\",a_seq= T) b30 <- dGAMMAplot(a=seq(1,100,by=1),b=30,plot_title=\"and when b=30\",a_seq= T)  grid.arrange(b10,b20,b30,b50,nrow=2,top=\"Pdf values changing when a=seq(1:100,by=1)\") a10 <- dGAMMAplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F) a50 <- dGAMMAplot(b=seq(1,100,by=1),a=50,plot_title=\"and when a=50\",a_seq= F) a20 <- dGAMMAplot(b=seq(1,100,by=1),a=20,plot_title=\"and when a=20\",a_seq= F) a30 <- dGAMMAplot(b=seq(1,100,by=1),a=30,plot_title=\"and when a=30\",a_seq= F)  grid.arrange(a10,a20,a30,a50,nrow=2,top=\"Pdf values changing when b=seq(1:100,by=1)\")"},{"path":"/articles/Mixing_Distributions_mazxxx.html","id":"moment-about-zero-values-for-all-six-unit-bounded-distributions","dir":"Articles","previous_headings":"","what":"Moment about zero values for all six Unit Bounded Distributions","title":"Maz values of Unit Bounded Distributions or Mixing Distributions","text":"Using Moment zero values useful calculating mean, variance, skewness kurtosis. useful need plot moment zero values shape parameter values change. Therefore, plotted . six functions can produce moment zero values. mazUNI - producing moment zero values Uniform distribution. mazTRI - producing moment zero values Triangular distribution. mazBETA - producing moment zero values Beta distribution. mazKUM - producing moment zero values Kumaraswamy distribution. mazGHGBeta - producing moment zero values Gaussian Hyper-geometric Generalized Beta distribution. mazGBeta1 - producing moment zero values Generalized Beta Type 1 distribution. mazGamma - producing moment zero values Gamma distribution. Consider \\(r^{th}\\) Moment zero Beta distribution random variable \\(P\\) given \\[E[P^r]= \\prod_{=0}^{r-1} \\frac{(\\alpha+)}{(\\alpha+\\beta+)} \\] \\(\\alpha\\) () \\(\\beta\\) (b) shape parameters(\\(\\alpha, \\beta > 0\\)) . mean acquired \\[\\mu= E[P]\\] variance acquired \\[ \\sigma_2= E[P^2] - \\mu^2 \\] skewness acquired \\[\\gamma_1= \\frac{E[(P- \\mu)^3]}{(Var(P))^{(3/2)}} \\] kurtosis acquired \\[ \\gamma_2= \\frac{E[(P- \\mu)^4]}{(Var(P))^{2}}\\] Using four equations possible find mean, variance, skewness kurtosis. even possible validate mean variance calculated dxxx functions mazxxx functions.","code":""},{"path":"/articles/Mixing_Distributions_mazxxx.html","id":"proving-mean-is-similar-from-dxxx-and-mazxxx-functions","dir":"Articles","previous_headings":"","what":"Proving Mean is similar from dxxx and mazxxx functions","title":"Maz values of Unit Bounded Distributions or Mixing Distributions","text":"Mean dBETA compared mazBETA function","code":"|> Mean from dBETA function for (a=3, b=9) = 0.25 |> Mean from mazBETA function for (a=3, b=9) = 0.25"},{"path":"/articles/Mixing_Distributions_mazxxx.html","id":"proving-variance-is-similar-from-dxxx-and-mazxxx-functions","dir":"Articles","previous_headings":"","what":"Proving Variance is similar from dxxx and mazxxx functions","title":"Maz values of Unit Bounded Distributions or Mixing Distributions","text":"Variance dBETA compared mazBETA function","code":"|> Variance from dBETA function for (a=3,b=9) = 0.01442308 |> Variance from mazBETA function for (a=3,b=9) = 0.01442308"},{"path":"/articles/Mixing_Distributions_mazxxx.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Maz values of Unit Bounded Distributions or Mixing Distributions","text":"According outputs clear mean variance can acquired using moment zero value functions.","code":""},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-uniform-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Uniform Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Unit Bounded Uniform distribution shape parameter. Therefore significant change Cpdf values. Although plotted ","code":"prob <- seq(0,1,by=0.05) pdfv <- pUNI(prob) data <- data.frame(prob,pdfv) ggplot(data)+   geom_line(aes(x=prob,y=pdfv))+   xlab(\"Vector of Probabilities\")+   ylab(\"Cumulative Probability density values\")+   ggtitle(\"Cpdf values changing\")+   theme_light()+   scale_x_continuous(breaks=seq(0,1,by=0.1))"},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-triangular-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Triangular Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Unit Bounded Triangular distribution one parameter, mode value -zero one. According given mode parameter value restrictions plotted.","code":"prob <- seq(0.01,0.99,by=0.01) mode <- seq(0.01,0.99,by=0.01) output <- matrix(ncol =length(mode) ,nrow=length(prob)) for (i in 1:length(mode))    {    output[,i]<-pTRI(prob,mode[i])   } data <- data.frame(prob,output) data <- melt(data,id.vars =\"prob\" ) ggplot(data,aes(prob,value,col=variable))+   geom_line()+guides(color=\"none\")+   xlab(\"Vector of Probabilities\")+   ylab(\"Cumulative Probability density values\")+   theme_light()+scale_color_viridis_d()+   ggtitle(\"Cpdf values changing when c=seq(0.01,0.09,by0.01)\")+   scale_x_continuous(breaks=seq(0,1,by=0.1))"},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-beta-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Beta Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Unit Bounded Beta distribution two shape parameters. parameters ability provide unique set Cpdf values combination ,b values. small sample reach plotted. ,b domain region zero.","code":"b3 <- pBETAplot(a=seq(1,100,by=1),b=3,plot_title=\"and when b=3\",a_seq= T)  b5 <- pBETAplot(a=seq(1,100,by=1),b=5,plot_title=\"and when b=5\",a_seq= T)  b8 <- pBETAplot(a=seq(1,100,by=1),b=8,plot_title=\"and when b=8\",a_seq= T) b10 <- pBETAplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq= T)  grid.arrange(b3,b5,b8,b10,nrow=2,top=\"Cpdf values changing when a=seq(1,100,by=1)\") a3 <- pBETAplot(b=seq(1,100,by=1),a=3,plot_title=\"and when a=3\",a_seq= F)  a5 <- pBETAplot(b=seq(1,100,by=1),a=5,plot_title=\"and when a=5\",a_seq= F)  a8 <- pBETAplot(b=seq(1,100,by=1),a=8,plot_title=\"and when a=8\",a_seq= F) a10 <- pBETAplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq= F)  grid.arrange(a3,a5,a8,a10,nrow=2,top=\"Cpdf values changing when b=seq(1,100,by=1)\")"},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-kumaraswamy-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Kumaraswamy Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Similar Beta distribution Kumaraswamy distribution also two shape parameters. presumed Kumaraswamy distribution ability cover unique Cpdf values Beta distribution. small sample Cpdf values change shape parameters change. ,b domain region zero.","code":"b1 <- pKUMplot(a=seq(1,100,by=1),b=1,plot_title=\"and when b=1\",a_seq=T)  b2 <- pKUMplot(a=seq(1,100,by=1),b=2,plot_title=\"and when b=2\",a_seq=T)  b5 <- pKUMplot(a=seq(1,100,by=1),b=5,plot_title=\"and when b=5\",a_seq=T) b10 <- pKUMplot(a=seq(1,100,by=1),b=10,plot_title=\"and when b=10\",a_seq=T)  grid.arrange(b1,b2,b5,b10,nrow=2,top=\"Cpdf values changing when a=seq(1,100,by=1)\") a3 <- pKUMplot(b=seq(1,100,by=1),a=3,plot_title=\"and when a=3\",a_seq=F)  a5 <- pKUMplot(b=seq(1,100,by=1),a=5,plot_title=\"and when a=5\",a_seq=F) a10 <- pKUMplot(b=seq(1,100,by=1),a=10,plot_title=\"and when a=10\",a_seq=F) a15 <- pKUMplot(b=seq(1,100,by=1),a=13,plot_title=\"and when a=15\",a_seq=F)  grid.arrange(a3,a10,a10,a15,nrow=2,top=\"Cpdf values changing when b=seq(1,100,by=1)\")"},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-gaussian-hyper-geometric-generalized-beta-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Gaussian Hyper-geometric Generalized Beta Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Unlike previous mentioned distributions Gaussian Hyper-geometric Generalized Beta Distribution developed first hand. product Gaussian Hyper-geometric Generalized Beta Binomial (GHGBB) Distribution. three shape parameters, ,b,c binomial trial value called n. brief account Cpdf values evolve shape parameters change. ,b,c domain region zero. n natural number take values 0,1,2,… .","code":"b10c5 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=10,c=5,                     plot_title=\"and when b=10, c=5\",a_seq=T,b_seq=F)  b50c5 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=50,c=5,                     plot_title=\"and when b=50, c=5\",a_seq=T,b_seq=F) b100c5 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=100,c=5,                      plot_title=\"and when b=100, c=5\",a_seq=T,b_seq=F) b150c5 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=150,c=5,                      plot_title=\"and when b=150, c=5\",a_seq=T,b_seq=F)  grid.arrange(b10c5,b50c5,b100c5,b150c5,nrow=2,              top=\"Cpdf values changing when a=seq(0.1,100,by=0.1)\") b40c10 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=40,c=10,                      plot_title=\"and when b=40, c=10\",a_seq=T,b_seq=F)  b50c10 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=50,c=10,                      plot_title=\"and when b=50, c=10\",a_seq=T,b_seq=F) b100c10 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=100,c=10,                       plot_title=\"and when b=100, c=10\",a_seq=T,b_seq=F) b200c10 <- pGHGBetaplot(n=10,a=seq(.1,100,by=.1),b=200,c=10,                       plot_title=\"and when b=200, c=10\",a_seq=T,b_seq=F)  grid.arrange(b40c10,b50c10,b100c10,b200c10,nrow=2,              top=\"Cpdf values changing when a=seq(0.1,100,by=0.1)\")"},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-generalized-beta-type1-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Generalized Beta Type1 Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Generalized Beta Type 1 distribution latest achievement unit bounded distributions. three shape parameters , b c. small variation Cpdf values mentioned ,b c shape parameters values plotted. ,b,c domain region zero.","code":"b1c0.3 <- pGBeta1plot(a=seq(1,40,by=0.1),b=1,c=0.3,                       plot_title=\"and when b=1, c=0.3\",a_seq=T,b_seq=F)  b1c0.4 <- pGBeta1plot(a=seq(1,40,by=0.1),b=1,c=0.4,                       plot_title=\"and when b=1, c=0.4\",a_seq=T,b_seq=F)  b1c0.5 <- pGBeta1plot(a=seq(1,40,by=0.1),b=1,c=0.5,                       plot_title=\"and when b=1, c=0.5\",a_seq=T,b_seq=F) b1c0.55 <- pGBeta1plot(a=seq(1,40,by=0.1),b=1,c=0.55,                       plot_title=\"and when b=1, c=0.55\",a_seq=T,b_seq=F)  grid.arrange(b1c0.3,b1c0.4,b1c0.5,b1c0.55,nrow=2,              top=\"Cpdf values changing when a=seq(1,40,by=0.1)\") b1c1 <- pGBeta1plot(a=seq(.5,100,by=.1),b=1,c=1,                     plot_title=\"and when b=1, c=1\",a_seq=T,b_seq=F) b1c1.5 <- pGBeta1plot(a=seq(.5,100,by=.1),b=1,c=1.5,                     plot_title=\"and when b=1, c=1.5\",a_seq=T,b_seq=F)   b1c2 <- pGBeta1plot(a=seq(.5,100,by=.1),b=1,c=2,                     plot_title=\"and when b=1, c=2\",a_seq=T,b_seq=F) b1c2.5 <- pGBeta1plot(a=seq(.5,100,by=.1),b=1,c=2.5,                     plot_title=\"and when b=1, c=2.5\",a_seq=T,b_seq=F)  grid.arrange(b1c1,b1c1.5,b1c2,b1c2.5,nrow=2,              top=\"Cpdf values changing when a=seq(0.5,100,by=0.1)\")"},{"path":"/articles/Mixing_Distributions_pxxx.html","id":"cumulative-probability-density-values-for-gamma-distribution","dir":"Articles","previous_headings":"","what":"Cumulative Probability Density values for Gamma Distribution","title":"Cpdf values of Unit Bounded Distributions or Mixing Distributions","text":"Unit Bounded Gamma distribution two shape parameters. parameters ability provide unique set Cpdf values combination ,b values. small sample reach plotted. ,b domain region zero.","code":"b3 <- pGAMMAplot(a=seq(1,10,by=0.5),b=3,plot_title=\"and when b=3\",a_seq= T)  b5 <- pGAMMAplot(a=seq(1,10,by=0.5),b=5,plot_title=\"and when b=5\",a_seq= T)  b8 <- pGAMMAplot(a=seq(1,10,by=0.5),b=8,plot_title=\"and when b=8\",a_seq= T) b10 <- pGAMMAplot(a=seq(1,10,by=0.5),b=10,plot_title=\"and when b=10\",a_seq= T)  grid.arrange(b3,b5,b8,b10,nrow=2,top=\"Cpdf values changing when a=seq(1,10,by=0.5)\") a3 <- pGAMMAplot(b=seq(1,10,by=0.1),a=3,plot_title=\"and when a=3\",a_seq= F)  a5 <- pGAMMAplot(b=seq(1,10,by=0.1),a=5,plot_title=\"and when a=5\",a_seq= F)  a8 <- pGAMMAplot(b=seq(1,10,by=0.1),a=8,plot_title=\"and when a=8\",a_seq= F) a10 <- pGAMMAplot(b=seq(1,10,by=0.1),a=10,plot_title=\"and when a=10\",a_seq= F)  grid.arrange(a3,a5,a8,a10,nrow=2,top=\"Cpdf values changing when b=seq(1,10,by=0.1)\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amalan Mahendran. Author, maintainer. Pushpakanthie Wijekoon. Author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mahendran , Wijekoon P (2022). fitODBOD: Modeling Dispersed Binomial Outcome Data Using BMD ABD. https://github.com/Amalan-ConStat/fitODBOD,https://amalan-constat.github.io/fitODBOD/index.html.","code":"@Manual{,   title = {fitODBOD: Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD},   author = {Amalan Mahendran and Pushpakanthie Wijekoon},   year = {2022},   note = {https://github.com/Amalan-ConStat/fitODBOD,https://amalan-constat.github.io/fitODBOD/index.html}, }"},{"path":"/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"/index.html","id":"how-to-engage-with-fitodbod-the-first-time-","dir":"","previous_headings":"","what":"How to engage with “fitODBOD” the first time ?","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"previous version “fitODBOD”, version 1.4.1 available github repository R-fitODBOD.","code":"## Installing the package from GitHub devtools::install_github(\"Amalan-ConStat/fitODBOD\")  ## Installing the package from CRAN install.packages(\"fitODBOD\")"},{"path":"/index.html","id":"key-phrases","dir":"","previous_headings":"","what":"Key Phrases","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"BOD (Binomial Outcome Data) Dispersion Dispersion FBMD (Family Binomial Mixture Distributions) ABD (Alternate Binomial Distributions) PMF (Probability Mass Function) CPMF (Cumulative Probability Mass Function)","code":""},{"path":"/index.html","id":"what-does-fitodbod-","dir":"","previous_headings":"","what":"What does “fitODBOD” ?","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"can understand BMD & ABD PMF & CPMF. , BOD can modeled using Distributions","code":""},{"path":[]},{"path":"/index.html","id":"modelling","dir":"","previous_headings":"","what":"Modelling","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"demonstrate process Alcohol Consumption Data, commonly used data-set researchers explain -dispersion taken {lemmens1988}. data-set, number alcohol consumption days two reference weeks separately self-reported randomly selected sample 399 respondents Netherlands 1983. , number days given individual consumes alcohol seven days week can treated Binomial variable. collection variables respondents defined “Binomial Outcome Data”.","code":""},{"path":"/index.html","id":"step-1","dir":"","previous_headings":"Modelling","what":"Step 1","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"Alcohol consumption data already necessary format apply steps 2 5 hence, step 1 can avoided. steps 2 5 can applied data-set form frequency table follows. Suppose data-set frequency table shown following data-set called datapoints. function BODextract can used prepare appropriate format follows.","code":"library(\"fitODBOD\"); library(\"flextable\",quietly = TRUE)    ## Loading packages #> Hello, This is Amalan. For more details refer --> https://amalan-constat.github.io/fitODBOD/index.html #> Warning: package 'flextable' was built under R version 4.1.3 print(Alcohol_data)     ## print the alcohol consumption data set #>   Days week1 week2 #> 1    0    47    42 #> 2    1    54    47 #> 3    2    43    54 #> 4    3    40    40 #> 5    4    40    49 #> 6    5    41    40 #> 7    6    39    43 #> 8    7    95    84 sum(Alcohol_data$week1) ## No of respondents or N #> [1] 399 Alcohol_data$Days       ## Binomial random variables or x  #> [1] 0 1 2 3 4 5 6 7 datapoints <- sample(0:7, 340, replace = TRUE) ## creating a set of raw BOD  head(datapoints)  ## first few observations of datapoints dataset #> [1] 1 2 0 3 7 1  ## extracting and printing BOD in a usable way for the package new_data <- BODextract(datapoints) matrix(c(new_data$RV, new_data$Freq), ncol=2, byrow = FALSE) #>      [,1] [,2] #> [1,]    0   48 #> [2,]    1   48 #> [3,]    2   34 #> [4,]    3   49 #> [5,]    4   40 #> [6,]    5   35 #> [7,]    6   44 #> [8,]    7   42"},{"path":"/index.html","id":"step-2","dir":"","previous_headings":"Modelling","what":"Step 2","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"second step test whether Alcohol Consumption data follows Binomial distribution based hypothesis given : Null Hypothesis : data follows Binomial Distribution. Alternate Hypothesis : data follow Binomial Distribution. Alcohol Consumption data consists frequency information two weeks first week considered computation. researcher can verify results acquired functions similar results acquired previous researchers work. Looking p-value clear null hypothesis rejected 5 significance level. indicates data fit Binomial distribution. reason warning message one expected frequencies results less five. Now compare actual fitting Binomial variances. variance observed frequencies variance fitting frequencies 6.2537877 1.6960355 respectively, indicates -dispersion.","code":"BinFreq <- fitBin(x=Alcohol_data$Days,obs.fre=Alcohol_data$week1) #> Chi-squared approximation may be doubtful because expected frequency is less than 5 print(BinFreq) #> Call:  #> fitBin(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1) #>  #> Chi-squared test for Binomial Distribution  #>   #>       Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>       expected Frequency :  1.59 13.41 48.3 96.68 116.11 83.66 33.49 5.75  #>   #>       estimated probability value : 0.5456498  #>   #>       X-squared : 2911.434   ,df : 6   ,p-value : 0 ## Actual variance of observed frequencies var(rep(Alcohol_data$Days, times = Alcohol_data$week1)) #> [1] 6.253788 ## Calculated variance for frequencies of  fitted Binomial distribution  var(rep(BinFreq$bin.ran.var, times = fitted(BinFreq))) #> [1] 1.696035"},{"path":"/index.html","id":"step-3-and-4","dir":"","previous_headings":"Modelling","what":"Step 3 and 4","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"Since -dispersion exists data now necessary fit Binomial Mixture distributions Triangular Binomial, Beta-Binomial, Kumaraswamy Binomial (omitted time consuming), Gamma Binomial, Grassia II Binomial, GHGBB McGBB using package, select best-fitting distribution using Negative Log likelihood value, p-value comparing observed expected frequencies. Modelling distributions given next sub-sections.","code":""},{"path":"/index.html","id":"a-triangular-binomial-distribution","dir":"","previous_headings":"Modelling > Step 3 and 4","what":"a) Triangular Binomial distribution.","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"Maximizing log likelihood value case minimizing negative log likelihood used EstMLExxx functions. estimation mode parameter can done using EstMLETriBin function, estimated value applied fitTriBin function check whether data fit Triangular Binomial distribution. fit Triangular Binomial distribution estimated mode parameter following hypothesis used Null Hypothesis : data follows Triangular Binomial Distribution. Alternate Hypothesis : data follow Triangular Binomial Distribution. Since p-value 0 less 0.05 clear null hypothesis rejected, estimated -dispersion 0.2308269. Therefore, necessary fit better flexible distribution Triangular Binomial distribution.","code":"## estimating the mode modeTB <- EstMLETriBin(x=Alcohol_data$Days,freq=Alcohol_data$week1)  coef(modeTB)  ## printing the estimated mode #>  mode  #>  0.944444 ## printing the Negative log likelihood value which is minimized NegLLTriBin(x=Alcohol_data$Days,freq=Alcohol_data$week1,mode=modeTB$mode) #> [1] 880.6167 ## fitting the Triangular Binomial Distribution for the estimated mode value fTB <- fitTriBin(x=Alcohol_data$Days,obs.freq=Alcohol_data$week1,mode=modeTB$mode) print(fTB) #> Call:  #> fitTriBin(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     mode = modeTB$mode) #>  #> Chi-squared test for Triangular Binomial Distribution  #>   #>       Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>       expected Frequency :  11.74 23.47 35.21 46.94 58.66 70.2 79.57 73.21  #>   #>       estimated Mode value: 0.944444  #>   #>       X-squared : 193.6159   ,df : 6   ,p-value : 0  #>   #>       over dispersion : 0.2308269 AIC(fTB)  #> [1] 1763.233 var(rep(fTB$bin.ran.var, times = fitted(fTB))) #> [1] 3.786005"},{"path":"/index.html","id":"b-beta-binomial-distribution","dir":"","previous_headings":"Modelling > Step 3 and 4","what":"b) Beta-Binomial distribution.","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"estimate two shape parameters Beta-Binomial distribution Methods Moments Maximum Likelihood estimation can used. Using function EstMLEBetaBin(wrapper function mle2 package bbmle) Negative Log likelihood value minimized. order estimate shape parameters b, initial shape parameter values given user function. initial values domain shape parameters. given pair estimates initial values =0.1 b=0.1. fit Beta-Binomial distribution estimated (Maximum Likelihood Estimation method) shape parameters following hypothesis used Null Hypothesis : data follows Beta-Binomial Distribution Maximum Likelihood Estimates. Alternate Hypothesis: data follow Beta-Binomial Distribution Maximum Likelihood Estimates. p-value 0.0901  > 0.05 indicates null hypothesis rejected. Current estimated shape parameters fit Beta-Binomial distribution. Note estimated -dispersion parameter 0.4340673. Function EstMGFBetaBin used estimate shape parameters b using Methods Moments. fit Beta-Binomial distribution estimated (Method Moments) shape parameters following hypothesis used Null Hypothesis : data follows Beta-Binomial Distribution Method Moments. Alternate Hypothesis: data follow Beta-Binomial Distribution Method Moments. Results Method Moments estimate parameters led p-value 0.0831 greater 0.05 indicates null hypothesis rejected. parameters estimated Method Moments fit Beta-Binomial distribution estimated -dispersion 0.4324333.","code":"## estimating the shape parameters a, b estimate <- EstMLEBetaBin(x=Alcohol_data$Days,freq = Alcohol_data$week1,a=0.1,b=0.1) estimate@min ## extracting the minimized Negative log likelihood value  #> [1] 813.4571 ## extracting the estimated shape parameter a, b a1 <- bbmle::coef(estimate)[1] ; b1 <- bbmle::coef(estimate)[2]   print(c(a1,b1))        ## printing the estimated shape parameters #>         a         b  #> 0.7229420 0.5808483 ## fitting Beta Binomial Distribution for estimated shape parameters fBB1 <- fitBetaBin(x=Alcohol_data$Days,obs.fre=Alcohol_data$week1,a=a1,b=b1) print(fBB1) #> Call:  #> fitBetaBin(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     a = a1, b = b1) #>  #> Chi-squared test for Beta-Binomial Distribution  #>   #>           Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>           expected Frequency :  54.62 42 38.9 38.54 40.07 44 53.09 87.78  #>   #>           estimated a parameter : 0.722942   ,estimated b parameter : 0.5808483  #>   #>           X-squared : 9.5171   ,df : 5   ,p-value : 0.0901  #>   #>           over dispersion : 0.4340673 AIC(fBB1)  #> [1] 1630.914 var(rep(fBB1$bin.ran.var, times = fitted(fBB1))) #> [1] 6.24275 ## estimating the shape parameter a, b estimate <- EstMGFBetaBin(Alcohol_data$Days, Alcohol_data$week1) print(c(estimate$a, estimate$b))  ## printing the estimated parameters a, b #> [1] 0.7161628 0.5963324 ## finding the minimized negative log likelihood value  NegLLBetaBin(x=Alcohol_data$Days,freq=Alcohol_data$week1,a=estimate$a,b=estimate$b) #> [1] 813.5872 ## fitting Beta-Binomial Distribution to estimated shape parameters fBB2 <- fitBetaBin(x=Alcohol_data$Days,obs.fre=Alcohol_data$week1,a=estimate$a,b=estimate$b) print(fBB2) #> Call:  #> fitBetaBin(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     a = estimate$a, b = estimate$b) #>  #> Chi-squared test for Beta-Binomial Distribution  #>   #>           Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>           expected Frequency :  56.6 43.01 39.57 38.97 40.27 43.89 52.39 84.29  #>   #>           estimated a parameter : 0.7161628   ,estimated b parameter : 0.5963324  #>   #>           X-squared : 9.7362   ,df : 5   ,p-value : 0.0831  #>   #>           over dispersion : 0.4324333 AIC(fBB2)  #> [1] 1631.174 var(rep(fBB2$bin.ran.var, times = fitted(fBB2))) #> [1] 6.273084"},{"path":"/index.html","id":"c-gamma-binomial-distribution","dir":"","previous_headings":"Modelling > Step 3 and 4","what":"c) Gamma Binomial distribution.","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"shape parameters c l estimated fitted . Suppose selected input parameters c=10.1 l=5.1. fit Gamma Binomial distribution estimated shape parameters following hypothesis used Null Hypothesis : data follows Gamma Binomial Distribution. Alternate Hypothesis : data follow Gamma Binomial Distribution. null hypothesis rejected 5 significance level (p-value= 0.0596) estimated parameters c= 0.6036061, 0.6030777 estimated -dispersion 0.4308113.","code":"## estimating the shape parameters estimate <- EstMLEGammaBin(x=Alcohol_data$Days,freq=Alcohol_data$week1,c=10.1,l=5.1) estimate@min ## extracting the minimized negative log likelihood value  #> [1] 814.0045 ## extracting the shape parameter c and l c1 <- bbmle::coef(estimate)[1] ; l1 <- bbmle::coef(estimate)[2]   print(c(c1, l1))   ## print shape parameters #>         c         l  #> 0.6036061 0.6030777 ## fitting Gamma Binomial Distribution to estimated shape parameters fGB <- fitGammaBin(x=Alcohol_data$Days,obs.fre=Alcohol_data$week1,c=c1,l=l1) print(fGB) #> Call:  #> fitGammaBin(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     c = c1, l = l1) #>  #> Chi-squared test for Gamma Binomial Distribution  #>   #>       Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>       expected Frequency :  54.59 41.39 38.7 38.71 40.54 44.69 53.79 86.58  #>   #>       estimated c parameter : 0.6036061   ,estimated l parameter : 0.6030777   #>   #>       X-squared : 10.6152   ,df : 5   ,p-value : 0.0596  #>   #>       over dispersion : 0.4308113 AIC(fGB)  #> [1] 1632.009 var(rep(fGB$bin.ran.var, times = fitted(fGB))) #> [1] 6.228652"},{"path":"/index.html","id":"d-grassia-ii-binomial-distribution","dir":"","previous_headings":"Modelling > Step 3 and 4","what":"d) Grassia II Binomial distribution.","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"shape parameters b estimated fitted using EstMLEGammaBin function. Suppose selected input parameters =1.1 b=5.1. fit Grassia II Binomial distribution estimated shape parameters following hypothesis used Null Hypothesis : data follows Grassia II Binomial Distribution. Alternate Hypothesis : data follow Grassia II Binomial Distribution. null hypothesis rejected 5 significance level (p-value= 0.1216) estimated parameters = 0.7285039, b= 2.0251513 estimated -dispersion 0.259004.","code":"## estimating the shape parameters estimate <- EstMLEGrassiaIIBin(x=Alcohol_data$Days,freq=Alcohol_data$week1,a=1.1,b=5.1) estimate@min ## extracting the minimized negative log likelihood value  #> [1] 813.0395 # extracting the shape parameter a and b a1 <- bbmle::coef(estimate)[1] ; b1 <- bbmle::coef(estimate)[2]   print(c(a1, b1))   #print shape parameters #>         a         b  #> 0.7285039 2.0251513 #fitting Grassia II Binomial Distribution to estimated shape parameters fGB2 <- fitGrassiaIIBin(x=Alcohol_data$Days,obs.fre=Alcohol_data$week1,a=a1,b=b1) print(fGB2) #> Call:  #> fitGrassiaIIBin(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     a = a1, b = b1) #>  #> Chi-squared test for Grassia II Binomial Distribution  #>   #>       Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>       expected Frequency :  55.02 42.36 39.08 38.51 39.78 43.39 52.13 88.74  #>   #>       estimated a parameter : 0.7285039   ,estimated b parameter : 2.025151   #>   #>       X-squared : 8.6999   ,df : 5   ,p-value : 0.1216  #>   #>       over dispersion : 0.259004 AIC(fGB2)  #> [1] 1630.079 var(rep(fGB2$bin.ran.var, times = fitted(fGB2))) #> [1] 6.299827"},{"path":"/index.html","id":"e-ghgbb-distribution","dir":"","previous_headings":"Modelling > Step 3 and 4","what":"e) GHGBB distribution.","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"Now estimate shape parameters fit GHGBB distribution first set randomly selected initial input shape parameters =10.1, b=1.1 c=5. fit GHGBB distribution estimated shape parameters following hypothesis used. Null Hypothesis : data follows Gaussian Hypergeometric Generalized Beta-Binomial Distribution. Alternate Hypothesis : data follow Gaussian Hypergeometric Generalized Beta-Binomial Distribution. null hypothesis rejected 5 significance level (p-value= 0.8642). estimated shape parameters = 1.3506836, b= 0.3245421 c= 0.700521, estimated -dispersion 0.4324874.","code":"#estimating the shape parameters  estimate <- EstMLEGHGBB(x=Alcohol_data$Days,freq=Alcohol_data$week1,a=10.1,b=1.1,c=5) estimate@min #extracting the minimized negative log likelihood value #> [1] 809.2767 #extracting the shape parameter a, b and c a1 <- bbmle::coef(estimate)[1] ; b1 <- bbmle::coef(estimate)[2] ; c1 <- bbmle::coef(estimate)[3]    print(c(a1, b1, c1))      #printing the shape parameters #>         a         b         c  #> 1.3506836 0.3245421 0.7005210 #fitting GHGBB distribution for estimated shape parameters fGG <- fitGHGBB(Alcohol_data$Days, Alcohol_data$week1, a1, b1, c1) print(fGG) #> Call:  #> fitGHGBB(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     a = a1, b = b1, c = c1) #>  #> Chi-squared test for Gaussian Hypergeometric Generalized Beta-Binomial Distribution  #>   #>       Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>       expected Frequency :  47.88 50.14 46.52 42.08 38.58 37.32 41.78 94.71  #>   #>       estimated a parameter : 1.350684   ,estimated b parameter : 0.3245421 , #>   #>       estimated c parameter : 0.700521  #>   #>       X-squared : 1.2835   ,df : 4   ,p-value : 0.8642  #>   #>       over dispersion : 0.4324874 AIC(fGG)  #> [1] 1624.553 var(rep(fGG$bin.ran.var, times = fitted(fGG))) #> [1] 6.249335"},{"path":"/index.html","id":"f-mcgbb-distribution","dir":"","previous_headings":"Modelling > Step 3 and 4","what":"f) McGBB distribution.","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"Given results generated randomly selected initial input parameters =1.1, b=5 c=10. fit McGBB distribution estimated shape parameters following hypothesis used Null Hypothesis : data follows McDonald Generalized Beta-Binomial Distribution. Alternate Hypothesis : data follow McDonald Generalized Beta-Binomial Distribution. null hypothesis rejected 5 significance level (p-value= 0.695  > 0.05). estimated shape parameters = 0.04099, b= 0.2108279 c= 21.6734903, estimated -dispersion 0.4359023.","code":"#estimating the shape parameters estimate <- EstMLEMcGBB(x = Alcohol_data$Days,freq = Alcohol_data$week1,a = 1.1, b = 5, c = 10) estimate@min  #extracting the negative log likelihood value which is minimized #> [1] 809.7134 #extracting the shape parameter a, b and c a1 <- bbmle::coef(estimate)[1] ; b1 <- bbmle::coef(estimate)[2] ; c1 <- bbmle::coef(estimate)[3]  print(c(a1, b1, c1))    #printing the shape parameters #>           a           b           c  #>  0.04099005  0.21082788 21.67349031 #fitting the MCGBB distribution for estimated shape parameters fMB <- fitMcGBB(x=Alcohol_data$Days,obs.fre=Alcohol_data$week1,a=a1,b=b1,c=c1) print(fMB) #> Call:  #> fitMcGBB(x = Alcohol_data$Days, obs.freq = Alcohol_data$week1,  #>     a = a1, b = b1, c = c1) #>  #> Chi-squared test for Mc-Donald Generalized Beta-Binomial Distribution  #>   #>       Observed Frequency :  47 54 43 40 40 41 39 95  #>   #>       expected Frequency :  51.37 45.63 43.09 41.5 40.42 39.97 42.11 94.91  #>   #>       estimated a parameter : 0.04099005   ,estimated b parameter : 0.2108279 , #>   #>       estimated c parameter : 21.67349  #>   #>       X-squared : 2.2222   ,df : 4   ,p-value : 0.695  #>   #>       over dispersion : 0.4359023 AIC(fMB)  #> [1] 1625.427 var(rep(fMB$bin.ran.var, times = fitted(fMB))) #> [1] 6.288273"},{"path":"/index.html","id":"step-5","dir":"","previous_headings":"Modelling","what":"Step 5","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"table presents expected frequencies, p-values, Negative Log Likelihood values, AIC values, Variance -dispersion Binomial Mixture distributions obtained Alcohol Consumption data.","code":"BMD_Data <- tibble::tibble(w=BinFreq$bin.ran.var,x=BinFreq$obs.freq,y=fitted(BinFreq),z=fitted(fTB),                            a=fitted(fBB1),a1=fitted(fBB2),c=fitted(fGG),                            d=fitted(fMB),e=fitted(fGB),f=fitted(fGB2)) names(BMD_Data) <- c(\"Bin_RV\",\"Actual_Freq\",\"EstFreq_BinD\",\"EstFreq_TriBinD\",\"EstFreq_BetaBinD(MLE)\",\"EstFreq_BetaBinD(MGF)\",                      \"EstFreq_GHGBBD\",\"EstFreq_McGBBD\",\"EstFreq_GammaBinD\",\"EstFreq_GrassiaIIBinD\")  BMD_Total<-colSums(BMD_Data[,-1]) BMD_Variance<-c(var(rep(BinFreq$bin.ran.var,times=BinFreq$obs.freq)),                 var(rep(BinFreq$bin.ran.var,times=BinFreq$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fTB$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fBB1$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fBB2$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fGG$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fMB$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fGB$exp.freq)),                 var(rep(BinFreq$bin.ran.var,times=fGB2$exp.freq))                 ) BMD_Variance<-round(BMD_Variance,4)  BMD_p_value<-c(BinFreq$p.value,fTB$p.value,fBB1$p.value,fBB2$p.value,                fGG$p.value,fMB$p.value,fGB$p.value,fGB2$p.value)  BMD_NegLL<-c(fTB$NegLL,fBB1$NegLL,fBB2$NegLL,fGG$NegLL,              fMB$NegLL,fGB$NegLL,fGB2$NegLL)  BMD_NegLL<-round(BMD_NegLL,4)  BMD_AIC<-c(AIC(fTB),AIC(fBB1),AIC(fBB2),AIC(fGG),            AIC(fMB),AIC(fGB),AIC(fGB2))  BMD_AIC<-round(BMD_AIC,4)  C_of_diff_Values<-c(length(BMD_Data$Actual_Freq),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_BinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_TriBinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$'EstFreq_BetaBinD(MLE)') <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$'EstFreq_BetaBinD(MGF)') <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_GHGBBD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_McGBBD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_GammaBinD) <= 5),                     sum(abs(BMD_Data$Actual_Freq-BMD_Data$EstFreq_GrassiaIIBinD) <= 5))   Overdispersion_BMD<-c(Overdispersion(fTB),Overdispersion(fBB1),Overdispersion(fBB2),                       Overdispersion(fGG),Overdispersion(fMB),                       Overdispersion(fGB),Overdispersion(fGB2))  Variance_difference<-c(abs(BMD_Variance[1]-BMD_Variance)) Variance_difference<-round(Variance_difference,4)  rbind(BMD_Data,       c(\"Total\",BMD_Total),       c(\"Variance\",BMD_Variance),       c(\"p-value\",\"-\",BMD_p_value),       c(\"Negative Log Likelihood Value\",\"-\",\"-\",BMD_NegLL),       c(\"AIC\",\"-\",\"-\",BMD_AIC),       c(\"Count of difference Values\",C_of_diff_Values),       c(\"Variance difference\",Variance_difference))->BMD_flexed_Data  flextable(data=BMD_flexed_Data,           col_keys = c(\"Bin_RV\",\"Actual_Freq\",\"EstFreq_BinD\",                        \"EstFreq_TriBinD\",\"EstFreq_BetaBinD(MLE)\",                        \"EstFreq_BetaBinD(MGF)\",\"EstFreq_GHGBBD\",                        \"EstFreq_McGBBD\",\"EstFreq_GammaBinD\",\"EstFreq_GrassiaIIBinD\")) |>   theme_box() |> autofit()|>   fontsize(i=c(1:15),j=c(1:10),size = 15,part = \"body\") |>    fontsize(i=1,j=c(1:10),size = 16,part = \"header\") |>    bold(i=1,part = \"header\") |>   bold(i=c(9:15),j=1,part = \"body\") |>   align(i=c(1:15),j=c(1:10),align = \"center\") |>   set_header_labels(values = c(Bin_RV=\"Binomial Random Variable\",                                Actual_Freq=\"Observed Frequencies\",                                EstFreq_BinD=\"Binomial Distribution\",                                EstFreq_TriBinD=\"Triangular Binomial Distribution\",                                'EstFreq_BetaBinD(MLE)'=\"Beta Binomial Distribution(MLE)\",                                'EstFreq_BetaBinD(MGF)'=\"Beta Binomial Distribution(MGF)\",                                EstFreq_GHGBBD=\"Gaussian Hypergeometric Generalized Beta Binomial Distribution\",                                EstFreq_McGBBD=\"McDonald Generalized Beta Binomial Distribution\",                                EstFreq_GammaBinD=\"Gamma Binomial Distribution\",                                EstFreq_GrassiaIIBinD=\"Grassia II Binomial Distribution\")) |>   align(i=1,part = \"header\",align = \"center\") |>    gen_grob(scaling = \"fixed\", fit = \"width\", just = \"center\")->Final_plot  plot(Final_plot)"},{"path":"/index.html","id":"conclusion","dir":"","previous_headings":"","what":"Conclusion","title":"Modeling Over Dispersed Binomial Outcome Data Using BMD and ABD","text":"best-fitting distribution chosen comparing five main measurements shown table p-value, Negative Log Likelihood value, count difference expected observed frequencies range  + / − 5, absolute variance difference AIC values. following five criteria considered selection procedure p-value  > 0.05 hypothesis test. Negative Log Likelihood value. AIC value. number difference values within range  + / − 5. absolute variance difference expected observed frequency. Triangular Binomial Binomial distributions fitted since p-value  < 0.05. Negative Log Likelihood values GHGBB McGBB distributions lowest quite similar. Similarly AIC values lowest GHGBB McGBB, also highest AIC value Triangular Binomial distribution. Based count difference values Beta-Binomial distribution four eight similar distributions Gamma Binomial Grassia II Binomial. McGBB distribution seven eight counts. , -dispersion parameters three fitted distributions second decimal point (-dispersion = 0.43) except Triangular Binomial Grassia II Binomial distributions similar first decimal point (-dispersion = 0.2). Clearly variance difference highest Binomial distribution lowest GHGBB distribution, others significant second decimal point. best-fitting distribution GHGBB highest p-value 0.8642, lowest Negative Log Likelihood value 809.2767 AIC value 1624.5534, count difference values eight eight indicates estimated -dispersion 0.4324875. variance difference observed expected frequencies GHGBB leads smallest value 0.0045.","code":""},{"path":[]},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 fitODBOD authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/Alcohol_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Alcohol data — Alcohol_data","title":"Alcohol data — Alcohol_data","text":"Lemmens , Knibbe Tan(1988) described study self reported alcohol frequencies. alcohol consumption data two reference weeks separately self reported randomly selected sample 399 respondents Netherlands 1983. Number days  given individual consumes alcohol 7 days week can treated binomial variable. collection variables respondents defined \"Binomial Outcome Data\".","code":""},{"path":"/reference/Alcohol_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alcohol data — Alcohol_data","text":"","code":"Alcohol_data"},{"path":"/reference/Alcohol_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alcohol data — Alcohol_data","text":"data frame 3 columns 8 rows. Days Days Drunk week1 Observed frequencies week1 week2 Observed frequencies week2","code":""},{"path":"/reference/Alcohol_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alcohol data — Alcohol_data","text":"Extracted Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24","code":""},{"path":"/reference/Alcohol_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alcohol data — Alcohol_data","text":"","code":"Alcohol_data$Days          # extracting the binomial random variables #> [1] 0 1 2 3 4 5 6 7 sum(Alcohol_data$week2)       # summing all the frequencies in week2 #> [1] 399"},{"path":"/reference/BODextract.html","id":null,"dir":"Reference","previous_headings":"","what":"Binomial Data Extraction from Raw data — BODextract","title":"Binomial Data Extraction from Raw data — BODextract","text":"function ability extract raw data Binomial Outcome Data. function simplifies data presentable way user.","code":""},{"path":"/reference/BODextract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binomial Data Extraction from Raw data — BODextract","text":"","code":"BODextract(data)"},{"path":"/reference/BODextract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binomial Data Extraction from Raw data — BODextract","text":"data vector observations","code":""},{"path":"/reference/BODextract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binomial Data Extraction from Raw data — BODextract","text":"output BODextract gives list format consisting RV binomial random variables vector form Freq  corresponding frequencies vector form","code":""},{"path":"/reference/BODextract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binomial Data Extraction from Raw data — BODextract","text":"NOTE : input parameters given domain conditions necessary error messages provided go ","code":""},{"path":"/reference/BODextract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binomial Data Extraction from Raw data — BODextract","text":"","code":"datapoints <- sample(0:10,340,replace=TRUE) #creating a sample set of observations BODextract(datapoints)                   #extracting binomial outcome data from observations #> $RV #>  [1]  0  1  2  3  4  5  6  7  8  9 10 #>  #> $Freq #>  [1] 38 39 25 29 27 33 30 26 28 31 34 #>  Random.variable <- BODextract(datapoints)$RV #extracting the binomial random variables"},{"path":"/reference/Chromosome_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Chromosome Data — Chromosome_data","title":"Chromosome Data — Chromosome_data","text":"Data example refer 337 observations secondary association chromosomes Brassika; n , now number chromosomes, equals 3 X number pairs bivalents showing association.","code":""},{"path":"/reference/Chromosome_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chromosome Data — Chromosome_data","text":"","code":"Chromosome_data"},{"path":"/reference/Chromosome_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chromosome Data — Chromosome_data","text":"data frame 2 columns 4 rows ..Asso Associations fre Observed frequencies","code":""},{"path":"/reference/Chromosome_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chromosome Data — Chromosome_data","text":"Extracted Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990","code":""},{"path":"/reference/Chromosome_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chromosome Data — Chromosome_data","text":"","code":"Chromosome_data$No.of.Asso          #extracting the binomial random variables #> [1] 0 1 2 3 sum(Chromosome_data$fre)            #summing all the frequencies #> [1] 337"},{"path":"/reference/Course_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Course Data — Course_data","title":"Course Data — Course_data","text":"data refer numbers courses taken class 65 students first year Department Statistics Athens University Economics. students enrolled class attended 8 courses first year study. total numbers successful examinations (including resits) recorded.","code":""},{"path":"/reference/Course_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Course Data — Course_data","text":"","code":"Course_data"},{"path":"/reference/Course_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Course Data — Course_data","text":"data frame 2 columns 9 rows sub.pass subjects passed fre Observed frequencies","code":""},{"path":"/reference/Course_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Course Data — Course_data","text":"Extracted Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2 .","code":""},{"path":"/reference/Course_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Course Data — Course_data","text":"","code":"Course_data$sub.pass             # extracting the binomial random variables #> [1] 0 1 2 3 4 5 6 7 8 sum(Course_data$fre)             # summing all the frequencies #> [1] 65"},{"path":"/reference/dAddBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Additive  Binomial Distribution — dAddBin","title":"Additive  Binomial Distribution — dAddBin","text":"functions provide ability generating probability function values cumulative probability function values Additive Binomial Distribution.","code":""},{"path":"/reference/dAddBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additive  Binomial Distribution — dAddBin","text":"","code":"dAddBin(x,n,p,alpha)"},{"path":"/reference/dAddBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additive  Binomial Distribution — dAddBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success alpha single value alpha parameter.","code":""},{"path":"/reference/dAddBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additive  Binomial Distribution — dAddBin","text":"output dAddBin gives list format consisting pdf probability function values vector form. mean mean Additive Binomial Distribution. var variance Additive Binomial Distribution.","code":""},{"path":"/reference/dAddBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Additive  Binomial Distribution — dAddBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{AddBin}(x)= {n \\choose x} p^x (1-p)^{n-x}(\\frac{alpha}{2}(\\frac{x(x-1)}{p}+\\frac{(n-x)(n-x-1)}{(1-p)}-\\frac{alpha(n-1)n}{2})+1)$$ alpha $$\\frac{-2}{n(n-1)}min(\\frac{p}{1-p},\\frac{1-p}{p}) \\le alpha \\le (\\frac{n+(2p-1)^2}{4p(1-p)})^{-1}$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$0 < p < 1$$ $$-1 < alpha < 1$$ mean variance denoted $$E_{Addbin}[x]=np$$ $$Var_{Addbin}[x]=np(1-p)(1+(n-1)alpha)$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dAddBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Additive  Binomial Distribution — dAddBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/dAddBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Additive  Binomial Distribution — dAddBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Additive binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) {   lines(0:10,dAddBin(0:10,10,a[i],b[i])$pdf,col = col[i],lwd=2.85)   points(0:10,dAddBin(0:10,10,a[i],b[i])$pdf,col = col[i],pch=16) }   dAddBin(0:10,10,0.58,0.022)$pdf     #extracting the probability values #>  [1] 0.0004043127 0.0044714100 0.0222003651 0.0660569110 0.1334843019 #>  [6] 0.1973852760 0.2222071562 0.1891753252 0.1143076141 0.0429108652 #> [11] 0.0073964626 dAddBin(0:10,10,0.58,0.022)$mean    #extracting the mean #> [1] 5.8 dAddBin(0:10,10,0.58,0.022)$var     #extracting the variance #> [1] 2.918328  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Additive binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pAddBin(0:10,10,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pAddBin(0:10,10,a[i],b[i]),col = col[i],pch=16) }   pAddBin(0:10,10,0.58,0.022)       #acquiring the cumulative probability values #>  [1] 0.0004043127 0.0048757227 0.0270760878 0.0931329988 0.2266173007 #>  [6] 0.4240025767 0.6462097329 0.8353850581 0.9496926723 0.9926035374 #> [11] 1.0000000000"},{"path":"/reference/dBETA.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Distribution — dBETA","title":"Beta Distribution — dBETA","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Beta Distribution bounded [0,1]","code":""},{"path":"/reference/dBETA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Distribution — dBETA","text":"","code":"dBETA(p,a,b)"},{"path":"/reference/dBETA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Distribution — dBETA","text":"p vector probabilities. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/dBETA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta Distribution — dBETA","text":"output dBETA gives list format consisting pdf            probability density values vector form. mean           mean Beta distribution. var            variance Beta distribution.","code":""},{"path":"/reference/dBETA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta Distribution — dBETA","text":"probability density function cumulative density function unit bounded Beta distribution random variable P given $$g_{P}(p)= \\frac{p^{-1}(1-p)^{b-1}}{B(,b)} $$ ;            \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\frac{B_p(,b)}{B(,b)} $$ ;                   \\(0 \\le p \\le 1\\) $$,b > 0$$ mean variance denoted $$E[P]= \\frac{}{+b} $$ $$var[P]= \\frac{ab}{(+b)^2(+b+1)} $$ moments zero denoted $$E[P^r]= \\prod_{=0}^{r-1} (\\frac{+}{+b+}) $$ \\(r = 1,2,3,...\\) Defined \\(B_p(,b)=\\int^p_0 t^{-1} (1-t)^{b-1}\\,dt\\) incomplete beta integrals  \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dBETA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta Distribution — dBETA","text":"Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley. Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 .","code":""},{"path":[]},{"path":"/reference/dBETA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta Distribution — dBETA","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,4)) for (i in 1:4) { lines(seq(0,1,by=0.01),dBETA(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dBETA(seq(0,1,by=0.01),2,3)$pdf   #extracting the pdf values #>   [1] 0.000000 0.117612 0.230496 0.338724 0.442368 0.541500 0.636192 0.726516 #>   [9] 0.812544 0.894348 0.972000 1.045572 1.115136 1.180764 1.242528 1.300500 #>  [17] 1.354752 1.405356 1.452384 1.495908 1.536000 1.572732 1.606176 1.636404 #>  [25] 1.663488 1.687500 1.708512 1.726596 1.741824 1.754268 1.764000 1.771092 #>  [33] 1.775616 1.777644 1.777248 1.774500 1.769472 1.762236 1.752864 1.741428 #>  [41] 1.728000 1.712652 1.695456 1.676484 1.655808 1.633500 1.609632 1.584276 #>  [49] 1.557504 1.529388 1.500000 1.469412 1.437696 1.404924 1.371168 1.336500 #>  [57] 1.300992 1.264716 1.227744 1.190148 1.152000 1.113372 1.074336 1.034964 #>  [65] 0.995328 0.955500 0.915552 0.875556 0.835584 0.795708 0.756000 0.716532 #>  [73] 0.677376 0.638604 0.600288 0.562500 0.525312 0.488796 0.453024 0.418068 #>  [81] 0.384000 0.350892 0.318816 0.287844 0.258048 0.229500 0.202272 0.176436 #>  [89] 0.152064 0.129228 0.108000 0.088452 0.070656 0.054684 0.040608 0.028500 #>  [97] 0.018432 0.010476 0.004704 0.001188 0.000000 dBETA(seq(0,1,by=0.01),2,3)$mean  #extracting the mean #> [1] 0.4 dBETA(seq(0,1,by=0.01),2,3)$var   #extracting the variance #> [1] 0.04  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pBETA(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pBETA(seq(0,1,by=0.01),2,3)   #acquiring the cumulative probability values #>   [1] 0.00000000 0.00059203 0.00233648 0.00518643 0.00909568 0.01401875 #>   [7] 0.01991088 0.02672803 0.03442688 0.04296483 0.05230000 0.06239123 #>  [13] 0.07319808 0.08468083 0.09680048 0.10951875 0.12279808 0.13660163 #>  [19] 0.15089328 0.16563763 0.18080000 0.19634643 0.21224368 0.22845923 #>  [25] 0.24496128 0.26171875 0.27870128 0.29587923 0.31322368 0.33070643 #>  [31] 0.34830000 0.36597763 0.38371328 0.40148163 0.41925808 0.43701875 #>  [37] 0.45474048 0.47240083 0.48997808 0.50745123 0.52480000 0.54200483 #>  [43] 0.55904688 0.57590803 0.59257088 0.60901875 0.62523568 0.64120643 #>  [49] 0.65691648 0.67235203 0.68750000 0.70234803 0.71688448 0.73109843 #>  [55] 0.74497968 0.75851875 0.77170688 0.78453603 0.79699888 0.80908883 #>  [61] 0.82080000 0.83212723 0.84306608 0.85361283 0.86376448 0.87351875 #>  [67] 0.88287408 0.89182963 0.90038528 0.90854163 0.91630000 0.92366243 #>  [73] 0.93063168 0.93721123 0.94340528 0.94921875 0.95465728 0.95972723 #>  [79] 0.96443568 0.96879043 0.97280000 0.97647363 0.97982128 0.98285363 #>  [85] 0.98558208 0.98801875 0.99017648 0.99206883 0.99371008 0.99511523 #>  [91] 0.99630000 0.99728083 0.99807488 0.99870003 0.99917488 0.99951875 #>  [97] 0.99975168 0.99989443 0.99996848 0.99999603 1.00000000 mazBETA(1.4,3,2)              #acquiring the moment about zero values #> [1] 0.6 mazBETA(2,3,2)-mazBETA(1,3,2)^2 #acquiring the variance for a=3,b=2 #> [1] 0.04  #only the integer value of moments is taken here because moments cannot be decimal mazBETA(1.9,5.5,6) #> [1] 0.4782609"},{"path":"/reference/dBetaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Binomial Distribution — dBetaBin","title":"Beta-Binomial Distribution — dBetaBin","text":"functions provide ability generating probability function values cumulative probability function values Beta-Binomial Distribution.","code":""},{"path":"/reference/dBetaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Binomial Distribution — dBetaBin","text":"","code":"dBetaBin(x,n,a,b)"},{"path":"/reference/dBetaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Binomial Distribution — dBetaBin","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/dBetaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Binomial Distribution — dBetaBin","text":"output dBetaBin gives list format consisting pdf              probability function values vector form. mean             mean Beta-Binomial Distribution. var              variance Beta-Binomial Distribution. .dis.para    dispersion value Beta-Binomial Distribution.","code":""},{"path":"/reference/dBetaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta-Binomial Distribution — dBetaBin","text":"Mixing Beta distribution Binomial distribution create Beta-Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{BetaBin}(x)= {n \\choose x} \\frac{B(+x,n+b-x)}{B(,b)} $$ $$,b > 0$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{BetaBin}[x]= \\frac{na}{+b} $$ $$Var_{BetaBin}[x]= \\frac{(nab)}{(+b)^2} \\frac{(+b+n)}{(+b+1)} $$ $$dispersion= \\frac{1}{+b+1} $$ Defined  B(,b) beta function.","code":""},{"path":"/reference/dBetaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta-Binomial Distribution — dBetaBin","text":"Young-Xu, Y. & Chan, K.., 2008. Pooling overdispersed binomial data estimate event rate. BMC medical research methodology, 8(1), p.58. Available : doi: 10.1186/1471-2288-8-58 . Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 . Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759.","code":""},{"path":"/reference/dBetaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Binomial Distribution — dBetaBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.2) plot(0,0,main=\"Beta-binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dBetaBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dBetaBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }   dBetaBin(0:10,10,4,.2)$pdf    #extracting the pdf values #>  [1] 9.184001e-05 3.993044e-04 1.095652e-03 2.434783e-03 4.810660e-03 #>  [6] 8.881218e-03 1.585932e-02 2.832021e-02 5.310040e-02 1.180009e-01 #> [11] 7.670057e-01 dBetaBin(0:10,10,4,.2)$mean   #extracting the mean #> [1] 9.52381 dBetaBin(0:10,10,4,.2)$var    #extracting the variance #> [1] 1.238444 dBetaBin(0:10,10,4,.2)$over.dis.para  #extracting the over dispersion value #> [1] 0.1923077  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pBetaBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pBetaBin(0:10,10,a[i],a[i]),col = col[i]) }   pBetaBin(0:10,10,4,.2)   #acquiring the cumulative probability values #>  [1] 9.184001e-05 4.911444e-04 1.586797e-03 4.021580e-03 8.832240e-03 #>  [6] 1.771346e-02 3.357278e-02 6.189299e-02 1.149934e-01 2.329943e-01 #> [11] 1.000000e+00"},{"path":"/reference/dBetaCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"functions provide ability generating probability function values cumulative probability function values Beta-Correlated  Binomial Distribution.","code":""},{"path":"/reference/dBetaCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"","code":"dBetaCorrBin(x,n,cov,a,b)"},{"path":"/reference/dBetaCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"x vector binomial random variables. n single value binomial trials. cov single value covariance. single value alpha parameter. b single value beta parameter.","code":""},{"path":"/reference/dBetaCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"output dBetaCorrBin gives list format consisting pdf           probability function values vector form. mean          mean Beta-Correlated  Binomial Distribution. var           variance Beta-Correlated  Binomial Distribution. corr          correlation Beta-Correlated Binomial Distribution. mincorr       minimum correlation value possible. maxcorr       maximum correlation value possible.","code":""},{"path":"/reference/dBetaCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values.  $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$0 < ,b$$ $$-\\infty < cov < +\\infty $$ $$0 < p < 1$$ $$p=\\frac{}{+b}$$ $$\\Theta=\\frac{1}{+b}$$ Correlation $$\\frac{-2}{n(n-1)} min(\\frac{p}{1-p},\\frac{1-p}{p}) \\le correlation \\le \\frac{2p(1-p)}{(n-1)p(1-p)+0.25-fo} $$ \\(fo=min [(x-(n-1)p-0.5)^2] \\) mean variance denoted $$E_{BetaCorrBin}[x]= np$$ $$Var_{BetaCorrBin}[x]= np(1-p)(n\\Theta+1)(1+\\Theta)^{-1}+n(n-1)cov$$ $$Corr_{BetaCorrBin}[x]=\\frac{cov}{p(1-p)}$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dBetaCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  .","code":""},{"path":"/reference/dBetaCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Correlated  Binomial Distribution — dBetaCorrBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(9.0,10,11,12,13) b <- c(8.0,8.1,8.2,8.3,8.4) plot(0,0,main=\"Beta-Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dBetaCorrBin(0:10,10,0.001,a[i],b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dBetaCorrBin(0:10,10,0.001,a[i],b[i])$pdf,col = col[i],pch=16) }   dBetaCorrBin(0:10,10,0.001,10,13)$pdf      #extracting the pdf values #>  [1] 0.010992133 0.047498928 0.108466364 0.170474118 0.202669472 0.189491674 #>  [7] 0.140699312 0.081828892 0.035693121 0.010567136 0.001618852 dBetaCorrBin(0:10,10,0.001,10,13)$mean     #extracting the mean #> [1] 4.347826 dBetaCorrBin(0:10,10,0.001,10,13)$var      #extracting the variance #> [1] 3.469017 dBetaCorrBin(0:10,10,0.001,10,13)$corr     #extracting the correlation #> [1] 0.004069231 dBetaCorrBin(0:10,10,0.001,10,13)$mincorr  #extracting the minimum correlation value #> [1] -0.01709402 dBetaCorrBin(0:10,10,0.001,10,13)$maxcorr  #extracting the maximum correlation value #> [1] 0.2145215  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(9.0,10,11,12,13) b <- c(8.0,8.1,8.2,8.3,8.4) plot(0,0,main=\"Beta-Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pBetaCorrBin(0:10,10,0.001,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pBetaCorrBin(0:10,10,0.001,a[i],b[i]),col = col[i],pch=16) }   pBetaCorrBin(0:10,10,0.001,10,13)      #acquiring the cumulative probability values #>  [1] 0.01099213 0.05849106 0.16695742 0.33743154 0.54010101 0.72959269 #>  [7] 0.87029200 0.95212089 0.98781401 0.99838115 1.00000000"},{"path":"/reference/dCOMPBin.html","id":null,"dir":"Reference","previous_headings":"","what":"COM Poisson Binomial Distribution — dCOMPBin","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"functions provide ability generating probability function values cumulative probability function values COM Poisson  Binomial Distribution.","code":""},{"path":"/reference/dCOMPBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"","code":"dCOMPBin(x,n,p,v)"},{"path":"/reference/dCOMPBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. v single value  v.","code":""},{"path":"/reference/dCOMPBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"output dCOMPBin gives list format consisting pdf           probability function values vector form. mean          mean COM Poisson  Binomial Distribution. var           variance COM Poisson  Binomial Distribution.","code":""},{"path":"/reference/dCOMPBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{COMPBin}(x) = \\frac{{n \\choose x}^v p^x (1-p)^{n-x}}{\\sum_{j=0}^{n} {n \\choose j}^v p^j (1-p)^{(n-j)}}$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$0 < p < 1$$ $$-\\infty < v < +\\infty $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dCOMPBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"Extracted Borges, P., Rodrigues, J., Balakrishnan, N. Bazan, J., 2014. COM-Poisson type generalization binomial distribution properties applications. Statistics & Probability Letters, 87, pp.158-166. Available : doi: 10.1016/j.spl.2014.01.019","code":""},{"path":"/reference/dCOMPBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"COM Poisson Binomial Distribution — dCOMPBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"COM Poisson Binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dCOMPBin(0:10,10,a[i],b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dCOMPBin(0:10,10,a[i],b[i])$pdf,col = col[i],pch=16) }   dCOMPBin(0:10,10,0.58,0.022)$pdf      #extracting the pdf values #>  [1] 0.01058483 0.01537669 0.02194887 0.03097149 0.04329998 0.06003554 #>  [7] 0.08257434 0.11263594 0.15222443 0.20337258 0.26697531 dCOMPBin(0:10,10,0.58,0.022)$mean     #extracting the mean #> [1] 7.627366 dCOMPBin(0:10,10,0.58,0.022)$var      #extracting the variance #> [1] 5.803804  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"COM Poisson Binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pCOMPBin(0:10,10,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pCOMPBin(0:10,10,a[i],b[i]),col = col[i],pch=16) }   pCOMPBin(0:10,10,0.58,0.022)      #acquiring the cumulative probability values #>  [1] 0.01058483 0.02596152 0.04791039 0.07888188 0.12218187 0.18221740 #>  [7] 0.26479174 0.37742768 0.52965211 0.73302469 1.00000000"},{"path":"/reference/dCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlated  Binomial Distribution — dCorrBin","title":"Correlated  Binomial Distribution — dCorrBin","text":"functions provide ability generating probability function values cumulative probability function values Correlated  Binomial Distribution.","code":""},{"path":"/reference/dCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlated  Binomial Distribution — dCorrBin","text":"","code":"dCorrBin(x,n,p,cov)"},{"path":"/reference/dCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlated  Binomial Distribution — dCorrBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. cov single value covariance.","code":""},{"path":"/reference/dCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlated  Binomial Distribution — dCorrBin","text":"output dCorrBin gives list format consisting pdf           probability function values vector form. mean          mean Correlated  Binomial Distribution. var           variance Correlated  Binomial Distribution. corr          correlation Correlated Binomial Distribution. mincorr       minimum correlation value possible. maxcorr       maximum correlation value possible.","code":""},{"path":"/reference/dCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlated  Binomial Distribution — dCorrBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{CorrBin}(x) = {n \\choose x}(p^x)(1-p)^{n-x}(1+(\\frac{cov}{2p^2(1-p)^2})((x-np)^2+x(2p-1)-np^2)) $$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$0 < p < 1$$ $$-\\infty < cov < +\\infty $$ Correlation $$\\frac{-2}{n(n-1)} min(\\frac{p}{1-p},\\frac{1-p}{p}) \\le correlation \\le \\frac{2p(1-p)}{(n-1)p(1-p)+0.25-fo} $$ \\(fo=min [(x-(n-1)p-0.5)^2] \\) mean variance denoted $$E_{CorrBin}[x]= np$$ $$Var_{CorrBin}[x]= n(p(1-p)+(n-1)cov)$$ $$Corr_{CorrBin}[x]=\\frac{cov}{p(1-p)}$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correlated  Binomial Distribution — dCorrBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  . Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/dCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlated  Binomial Distribution — dCorrBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dCorrBin(0:10,10,a[i],b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dCorrBin(0:10,10,a[i],b[i])$pdf,col = col[i],pch=16) }   dCorrBin(0:10,10,0.58,0.022)$pdf      #extracting the pdf values #>  [1] 0.001129385 0.011031584 0.045621336 0.103565540 0.142922006 0.139070090 #>  [7] 0.139751296 0.167045868 0.153590546 0.079286062 0.016986287 dCorrBin(0:10,10,0.58,0.022)$mean     #extracting the mean #> [1] 5.8 dCorrBin(0:10,10,0.58,0.022)$var      #extracting the variance #> [1] 4.416 dCorrBin(0:10,10,0.58,0.022)$corr     #extracting the correlation #> [1] 0.09031199 dCorrBin(0:10,10,0.58,0.022)$mincorr  #extracting the minimum correlation value #> [1] -0.01609195 dCorrBin(0:10,10,0.58,0.022)$maxcorr  #extracting the maximum correlation value #> [1] 0.2060914  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pCorrBin(0:10,10,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pCorrBin(0:10,10,a[i],b[i]),col = col[i],pch=16) }   pCorrBin(0:10,10,0.58,0.022)      #acquiring the cumulative probability values #>  [1] 0.001129385 0.012160968 0.057782305 0.161347845 0.304269851 0.443339941 #>  [7] 0.583091237 0.750137105 0.903727651 0.983013713 1.000000000"},{"path":"/reference/dGAMMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Distribution — dGAMMA","title":"Gamma Distribution — dGAMMA","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Gamma Distribution bounded [0,1].","code":""},{"path":"/reference/dGAMMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Distribution — dGAMMA","text":"","code":"dGAMMA(p,c,l)"},{"path":"/reference/dGAMMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Distribution — dGAMMA","text":"p vector probabilities. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/dGAMMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma Distribution — dGAMMA","text":"output dGAMMA gives list format consisting pdf                   probability density values vector form. mean                  mean Gamma distribution. var                   variance Gamma distribution.","code":""},{"path":"/reference/dGAMMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gamma Distribution — dGAMMA","text":"probability density function cumulative density function unit bounded Gamma distribution random variable P given $$g_{P}(p) = \\frac{ c^l p^{c-1}}{\\gamma(l)} [ln(1/p)]^{l-1} $$ ;    \\(0 \\le p \\le 1\\) $$G_{P}(p) = \\frac{ Ig(l,cln(1/p))}{\\gamma(l)} $$ ; \\(0 \\le p \\le 1\\) $$l,c > 0$$ mean variance denoted $$E[P] = (\\frac{c}{c+1})^l $$ $$var[P] = (\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l} $$ moments zero denoted $$E[P^r]=(\\frac{c}{c+r})^l $$ \\(r = 1,2,3,...\\) Defined \\(\\gamma(l) \\) gamma function Defined \\(Ig(l,cln(1/p))= \\int_0^{cln(1/p)} t^{l-1} e^{-t}dt \\) Lower incomplete gamma function NOTE : input parameters given domain  conditions necessary error messages provided go .","code":""},{"path":"/reference/dGAMMA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gamma Distribution — dGAMMA","text":"Olshen, . C. Transformations Pearson Type III Distribution. Ann. Math. Statist. 9 (1938), . 3, 176--200.","code":""},{"path":[]},{"path":"/reference/dGAMMA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma Distribution — dGAMMA","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,4)) for (i in 1:4) { lines(seq(0,1,by=0.01),dGAMMA(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dGAMMA(seq(0,1,by=0.01),5,6)$pdf   #extracting the pdf values #>   [1]          NaN 2.696915e-03 1.908823e-02 5.591507e-02 1.151860e-01 #>   [6] 1.963513e-01 2.974469e-01 4.157526e-01 5.481913e-01 6.915796e-01 #>  [11] 8.427858e-01 9.988302e-01 1.156946e+00 1.314613e+00 1.469580e+00 #>  [16] 1.619861e+00 1.763742e+00 1.899766e+00 2.026722e+00 2.143630e+00 #>  [21] 2.249727e+00 2.344447e+00 2.427404e+00 2.498378e+00 2.557294e+00 #>  [26] 2.604211e+00 2.639301e+00 2.662839e+00 2.675188e+00 2.676786e+00 #>  [31] 2.668131e+00 2.649777e+00 2.622316e+00 2.586375e+00 2.542603e+00 #>  [36] 2.491664e+00 2.434233e+00 2.370984e+00 2.302590e+00 2.229714e+00 #>  [41] 2.153006e+00 2.073098e+00 1.990604e+00 1.906109e+00 1.820178e+00 #>  [46] 1.733342e+00 1.646106e+00 1.558942e+00 1.472288e+00 1.386552e+00 #>  [51] 1.302105e+00 1.219288e+00 1.138405e+00 1.059728e+00 9.834979e-01 #>  [56] 9.099206e-01 8.391724e-01 7.713992e-01 7.067177e-01 6.452166e-01 #>  [61] 5.869582e-01 5.319796e-01 4.802945e-01 4.318943e-01 3.867500e-01 #>  [66] 3.448137e-01 3.060204e-01 2.702894e-01 2.375261e-01 2.076239e-01 #>  [71] 1.804654e-01 1.559242e-01 1.338667e-01 1.141532e-01 9.663983e-02 #>  [76] 8.117977e-02 6.762468e-02 5.582605e-02 4.563641e-02 3.691057e-02 #>  [81] 2.950669e-02 2.328725e-02 1.812007e-02 1.387906e-02 1.044499e-02 #>  [86] 7.706093e-03 5.558644e-03 3.907329e-03 2.665574e-03 1.755734e-03 #>  [91] 1.109170e-03 6.662063e-04 3.759598e-04 1.960545e-04 9.220202e-05 #>  [96] 3.765617e-05 1.253703e-05 3.022169e-06 4.041950e-07 1.282574e-08 #> [101] 0.000000e+00 dGAMMA(seq(0,1,by=0.01),5,6)$mean  #extracting the mean #> [1] 0.334898 dGAMMA(seq(0,1,by=0.01),5,6)$var   #extracting the variance #> [1] 0.02065365  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pGAMMA(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pGAMMA(seq(0,1,by=0.01),5,6)   #acquiring the cumulative probability values #>   [1] 1.000000e+00 9.999932e-01 9.998995e-01 9.995428e-01 9.987061e-01 #>   [6] 9.971660e-01 9.947125e-01 9.911596e-01 9.863504e-01 9.801593e-01 #>  [11] 9.724927e-01 9.632875e-01 9.525092e-01 9.401501e-01 9.262260e-01 #>  [16] 9.107741e-01 8.938501e-01 8.755255e-01 8.558851e-01 8.350246e-01 #>  [21] 8.130485e-01 7.900680e-01 7.661988e-01 7.415599e-01 7.162715e-01 #>  [26] 6.904540e-01 6.642267e-01 6.377065e-01 6.110072e-01 5.842386e-01 #>  [31] 5.575057e-01 5.309083e-01 5.045405e-01 4.784902e-01 4.528391e-01 #>  [36] 4.276621e-01 4.030274e-01 3.789968e-01 3.556249e-01 3.329599e-01 #>  [41] 3.110434e-01 2.899105e-01 2.695901e-01 2.501051e-01 2.314727e-01 #>  [46] 2.137045e-01 1.968071e-01 1.807821e-01 1.656266e-01 1.513333e-01 #>  [51] 1.378913e-01 1.252858e-01 1.134990e-01 1.025103e-01 9.229632e-02 #>  [56] 8.283152e-02 7.408848e-02 6.603815e-02 5.865018e-02 5.189319e-02 #>  [61] 4.573504e-02 4.014309e-02 3.508447e-02 3.052625e-02 2.643573e-02 #>  [66] 2.278056e-02 1.952897e-02 1.664994e-02 1.411329e-02 1.188988e-02 #>  [71] 9.951666e-03 8.271845e-03 6.824902e-03 5.586697e-03 4.534504e-03 #>  [76] 3.647056e-03 2.904559e-03 2.288707e-03 1.782675e-03 1.371100e-03 #>  [81] 1.040057e-03 7.770188e-04 5.708055e-04 4.115309e-04 2.905353e-04 #>  [86] 2.003148e-04 1.344429e-04 8.748908e-05 5.493214e-05 3.307222e-05 #>  [91] 1.894087e-05 1.021113e-05 5.108634e-06 2.325028e-06 9.348735e-07 #>  [96] 3.173967e-07 8.433588e-08 1.521193e-08 1.353245e-09 2.142264e-11 #> [101] 0.000000e+00 mazGAMMA(1.4,5,6)              #acquiring the moment about zero values #> [1] 0.334898 mazGAMMA(2,5,6)-mazGAMMA(1,5,6)^2 #acquiring the variance for a=5,b=6 #> [1] 0.02065365  #only the integer value of moments is taken here because moments cannot be decimal mazGAMMA(1.9,5.5,6) #> [1] 0.3670253"},{"path":"/reference/dGammaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Binomial Distribution — dGammaBin","title":"Gamma Binomial Distribution — dGammaBin","text":"functions provide ability generating probability function values cumulative probability function values Gamma Binomial Distribution.","code":""},{"path":"/reference/dGammaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Binomial Distribution — dGammaBin","text":"","code":"dGammaBin(x,n,c,l)"},{"path":"/reference/dGammaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Binomial Distribution — dGammaBin","text":"x vector binomial random variables. n single value binomial trials. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/dGammaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma Binomial Distribution — dGammaBin","text":"output dGammaBin gives list format consisting pdf               probability function values vector form. mean              mean Gamma Binomial Distribution. var               variance Gamma Binomial Distribution. .dis.para     dispersion value Gamma Binomial Distribution.","code":""},{"path":"/reference/dGammaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gamma Binomial Distribution — dGammaBin","text":"Mixing Gamma distribution Binomial distribution create Gamma Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{GammaBin}[x]= {n \\choose x} \\sum_{j=0}^{n-x} {n-x \\choose j} (-1)^j (\\frac{c}{c+x+j})^l $$ $$c,l > 0$$ $$x = 0,1,2,...,n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{GammaBin}[x] = (\\frac{c}{c+1})^l$$ $$Var_{GammaBin}[x] = n^2[(\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l}] + n(\\frac{c}{c+1})^l{1-)(\\frac{c+1}{c+2})^l}$$ $$dispersion= \\frac{(\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l}}{(\\frac{c}{c+1})^l[1-(\\frac{c}{c+1})^l]}$$","code":""},{"path":"/reference/dGammaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gamma Binomial Distribution — dGammaBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/dGammaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma Binomial Distribution — dGammaBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.2) plot(0,0,main=\"Gamma Binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dGammaBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dGammaBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }   dGammaBin(0:10,10,4,.2)$pdf    #extracting the pdf values #>  [1] 5.870615e-05 2.754357e-04 8.057584e-04 1.892811e-03 3.928276e-03 #>  [6] 7.579979e-03 1.409128e-02 2.611031e-02 5.066078e-02 1.162261e-01 #> [11] 7.783705e-01 dGammaBin(0:10,10,4,.2)$mean   #extracting the mean #> [1] 9.563525 dGammaBin(0:10,10,4,.2)$var    #extracting the variance #> [1] 1.092227 dGammaBin(0:10,10,4,.2)$over.dis.para  #extracting the over dispersion value #> [1] 0.1796209  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pGammaBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pGammaBin(0:10,10,a[i],a[i]),col = col[i]) }   pGammaBin(0:10,10,4,.2)   #acquiring the cumulative probability values #>  [1] 5.870615e-05 3.341419e-04 1.139900e-03 3.032711e-03 6.960987e-03 #>  [6] 1.454097e-02 2.863224e-02 5.474255e-02 1.054033e-01 2.216295e-01 #> [11] 1.000000e+00"},{"path":"/reference/dGBeta1.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Beta Type-1 Distribution — dGBeta1","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Generalized Beta Type-1 Distribution bounded [0,1].","code":""},{"path":"/reference/dGBeta1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"","code":"dGBeta1(p,a,b,c)"},{"path":"/reference/dGBeta1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"p vector probabilities. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/dGBeta1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"output dGBeta1 gives list format consisting pdf                   probability density values vector form. mean                  mean Generalized Beta Type-1 Distribution. var                   variance Generalized Beta Type-1 Distribution.","code":""},{"path":"/reference/dGBeta1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"probability density function cumulative density function unit bounded Generalized Beta Type-1 Distribution random variable P given $$g_{P}(p)= \\frac{c}{B(,b)} p^{ac-1} (1-p^c)^{b-1} $$;      \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\frac{p^{ac}}{aB(,b)}  2F1(,1-b;p^c;+1) $$    \\(0 \\le p \\le 1\\) $$,b,c > 0$$ mean variance denoted $$E[P]= \\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})} $$ $$var[P]= \\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2 $$ moments zero denoted $$E[P^r]= \\frac{B(+b,\\frac{r}{c})}{B(,\\frac{r}{c})} $$ \\(r = 1,2,3,....\\) Defined \\(B(,b)\\) Beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dGBeta1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24  . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.5539/ijsp.v2n2p24 .","code":""},{"path":"/reference/dGBeta1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Beta Type-1 Distribution — dGBeta1","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(.1,.2,.3,1.5,2.15) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,10)) for (i in 1:5) { lines(seq(0,1,by=0.001),dGBeta1(seq(0,1,by=0.001),a[i],1,2*a[i])$pdf,col = col[i]) }   dGBeta1(seq(0,1,by=0.01),2,3,1)$pdf    #extracting the pdf values #>   [1] 0.000000 0.117612 0.230496 0.338724 0.442368 0.541500 0.636192 0.726516 #>   [9] 0.812544 0.894348 0.972000 1.045572 1.115136 1.180764 1.242528 1.300500 #>  [17] 1.354752 1.405356 1.452384 1.495908 1.536000 1.572732 1.606176 1.636404 #>  [25] 1.663488 1.687500 1.708512 1.726596 1.741824 1.754268 1.764000 1.771092 #>  [33] 1.775616 1.777644 1.777248 1.774500 1.769472 1.762236 1.752864 1.741428 #>  [41] 1.728000 1.712652 1.695456 1.676484 1.655808 1.633500 1.609632 1.584276 #>  [49] 1.557504 1.529388 1.500000 1.469412 1.437696 1.404924 1.371168 1.336500 #>  [57] 1.300992 1.264716 1.227744 1.190148 1.152000 1.113372 1.074336 1.034964 #>  [65] 0.995328 0.955500 0.915552 0.875556 0.835584 0.795708 0.756000 0.716532 #>  [73] 0.677376 0.638604 0.600288 0.562500 0.525312 0.488796 0.453024 0.418068 #>  [81] 0.384000 0.350892 0.318816 0.287844 0.258048 0.229500 0.202272 0.176436 #>  [89] 0.152064 0.129228 0.108000 0.088452 0.070656 0.054684 0.040608 0.028500 #>  [97] 0.018432 0.010476 0.004704 0.001188 0.000000 dGBeta1(seq(0,1,by=0.01),2,3,1)$mean   #extracting the mean #> [1] 0.4 dGBeta1(seq(0,1,by=0.01),2,3,1)$var    #extracting the variance #> [1] 0.04  pGBeta1(0.04,2,3,4)        #acquiring the cdf values for a=2,b=3,c=4 #> [1] 0.0006451179 mazGBeta1(1.4,3,2,2)              #acquiring the moment about zero values #> [1] 0.7619048 mazGBeta1(2,3,2,2)-mazGBeta1(1,3,2,2)^2        #acquiring the variance for a=3,b=2,c=2 #> [1] 0.01950113  #only the integer value of moments is taken here because moments cannot be decimal mazGBeta1(3.2,3,2,2) #> [1] 0.4848485"},{"path":"/reference/dGHGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"functions provide ability generating probability function values cumulative probability function values Gaussian Hypergeometric Generalized Beta  Binomial distribution.","code":""},{"path":"/reference/dGHGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"","code":"dGHGBB(x,n,a,b,c)"},{"path":"/reference/dGHGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter alpha value representing . b single value shape parameter beta value representing b. c single value shape parameter lambda value representing c.","code":""},{"path":"/reference/dGHGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"output dGHGBB gives list format consisting pdf             probability function values vector form. mean            mean Gaussian Hypergeometric Generalized Beta Binomial Distribution. var             variance Gaussian Hypergeometric Generalized Beta Binomial Distribution. .dis.para   dispersion value Gaussian Hypergeometric Generalized Beta                        Binomial Distribution.","code":""},{"path":"/reference/dGHGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"Mixing Gaussian Hypergeometric Generalized Beta distribution Binomial distribution create Gaussian Hypergeometric Generalized Beta Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{GHGBB}(x)=\\frac{1}{2F1(-n,;-b-n+1;c)} {n \\choose x} \\frac{B(x+,n-x+b)}{B(,b+n)}(c^x) $$ $$,b,c > 0$$ $$x = 0,1,2,...n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{GHGBB}[x]= nE_{GHGBeta} $$ $$Var_{GHGBB}[x]= nE_{GHGBeta}(1-E_{GHGBeta})+ n(n-1)Var_{GHGBeta} $$ $$dispersion= \\frac{var_{GHGBeta}}{E_{GHGBeta}(1-E_{GHGBeta})} $$ Defined \\(B(,b)\\) beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dGHGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x . Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/dGHGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — dGHGBB","text":"","code":"#plotting the random variables and probability values col <- rainbow(6) a <- c(.1,.2,.3,1.5,2.1,3) plot(0,0,main=\"GHGBB probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,7),ylim = c(0,0.9)) for (i in 1:6) { lines(0:7,dGHGBB(0:7,7,1+a[i],0.3,1+a[i])$pdf,col = col[i],lwd=2.85) points(0:7,dGHGBB(0:7,7,1+a[i],0.3,1+a[i])$pdf,col = col[i],pch=16) }   dGHGBB(0:7,7,1.3,0.3,1.3)$pdf      #extracting the pdf values #> [1] 0.004487185 0.008425937 0.014260501 0.023712228 0.040167077 0.072195955 #> [7] 0.151611505 0.685139612 dGHGBB(0:7,7,1.3,0.3,1.3)$mean     #extracting the mean #> [1] 6.335378 dGHGBB(0:7,7,1.3,0.3,1.3)$var      #extracting the variance #> [1] 1.619291 dGHGBB(0:7,7,1.3,0.3,1.3)$over.dis.par  #extracting the over dispersion value #> [1] 0.2820006  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,7),ylim = c(0,1)) for (i in 1:4) { lines(0:7,pGHGBB(0:7,7,1+a[i],0.3,1+a[i]),col = col[i]) points(0:7,pGHGBB(0:7,7,1+a[i],0.3,1+a[i]),col = col[i]) }   pGHGBB(0:7,7,1.3,0.3,1.3)     #acquiring the cumulative probability values #> [1] 0.004487185 0.012913122 0.027173623 0.050885851 0.091052928 0.163248883 #> [7] 0.314860388 1.000000000"},{"path":"/reference/dGHGBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Gaussian Hypergeometric Generalized Beta distribution bounded [0,1].","code":""},{"path":"/reference/dGHGBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"","code":"dGHGBeta(p,n,a,b,c)"},{"path":"/reference/dGHGBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"p vector probabilities. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter lambda representing c.","code":""},{"path":"/reference/dGHGBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"output dGHGBeta gives list format consisting pdf           probability density values vector form. mean          mean Gaussian Hypergeometric Generalized Beta Distribution. var           variance Gaussian Hypergeometric Generalized Beta Distribution.","code":""},{"path":"/reference/dGHGBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"probability density function cumulative density function unit bounded Gaussian Hypergeometric Generalized Beta Distribution random variable P given $$g_{P}(p)= \\frac{1}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1} \\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} $$; \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\int^p_0 \\frac{1}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} t^{-1}(1-t)^{b-1}\\frac{c^{b+n}}{(c+(1-c)t)^{+b+n}} \\,dt $$ ; \\(0 \\le p \\le 1\\) $$,b,c > 0$$ $$n = 1,2,3,...$$ mean variance denoted $$E[P]= \\int^1_0 \\frac{p}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp $$ $$var[P]= \\int^1_0 \\frac{p^2}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp - (E[p])^2$$ moments zero denoted $$E[P^r]= \\int^1_0 \\frac{p^r}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp$$ \\(r = 1,2,3,...\\) Defined \\(B(,b)\\) beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dGHGBeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/dGHGBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian Hypergeometric Generalized Beta Distribution — dGHGBeta","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(.1,.2,.3,1.5,2.15) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,10)) for (i in 1:5) { lines(seq(0,1,by=0.001),dGHGBeta(seq(0,1,by=0.001),7,1+a[i],0.3,1+a[i])$pdf,col = col[i]) }   dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$pdf   #extracting the pdf values #>   [1] 0.0000000 0.3509262 0.5228737 0.6498913 0.7501031 0.8314439 0.8984165 #>   [8] 0.9539442 1.0000887 1.0383876 1.0700333 1.0959788 1.1170022 1.1337505 #>  [15] 1.1467690 1.1565225 1.1634108 1.1677804 1.1699335 1.1701354 1.1686196 #>  [22] 1.1655927 1.1612380 1.1557188 1.1491806 1.1417536 1.1335546 1.1246883 #>  [29] 1.1152486 1.1053204 1.0949799 1.0842960 1.0733307 1.0621401 1.0507751 #>  [36] 1.0392813 1.0277005 1.0160703 1.0044248 0.9927948 0.9812086 0.9696918 #>  [43] 0.9582674 0.9469569 0.9357794 0.9247528 0.9138932 0.9032156 0.8927339 #>  [50] 0.8824609 0.8724086 0.8625882 0.8530105 0.8436855 0.8346233 0.8258333 #>  [57] 0.8173251 0.8091080 0.8011917 0.7935860 0.7863010 0.7793473 0.7727362 #>  [64] 0.7664797 0.7605909 0.7550840 0.7499744 0.7452794 0.7410182 0.7372121 #>  [71] 0.7338851 0.7310645 0.7287810 0.7270699 0.7259715 0.7255322 0.7258059 #>  [78] 0.7268551 0.7287532 0.7315867 0.7354580 0.7404897 0.7468297 0.7546578 #>  [85] 0.7641951 0.7757165 0.7895686 0.8061949 0.8261722 0.8502673 0.8795219 #>  [92] 0.9153933 0.9599887 1.0164861 1.0899378 1.1889502 1.3296336 1.5465948 #>  [99] 1.9327387 2.8776352       Inf dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$mean  #extracting the mean #> [1] 0.5279419 dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$var   #extracting the variance #> [1] 0.09648382  #plotting the random variables and cumulative probability values col <- rainbow(6) a <- c(.1,.2,.3,1.5,2.1,3) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:6) { lines(seq(0.01,1,by=0.001),pGHGBeta(seq(0.01,1,by=0.001),7,1+a[i],0.3,1+a[i]),col=col[i]) }   pGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659) #acquiring the cumulative probability values #>   [1] 0.000000000 0.002183554 0.006603937 0.012495083 0.019513343 0.027434627 #>   [7] 0.036094544 0.045364862 0.055142153 0.065340545 0.075887778 0.086722256 #>  [13] 0.097790990 0.109048005 0.120453512 0.131972520 0.143574429 0.155232357 #>  [19] 0.166922664 0.178624540 0.190319663 0.201991911 0.213627107 0.225212805 #>  [25] 0.236738102 0.248193470 0.259570533 0.270862265 0.282062393 0.293165615 #>  [31] 0.304167434 0.315064076 0.325852422 0.336529945 0.347094650 0.357545024 #>  [37] 0.367879993 0.378098877 0.388201355 0.398187430 0.408057404 0.417811841 #>  [43] 0.427451554 0.436977576 0.446391143 0.455693674 0.464886762 0.473972152 #>  [49] 0.482951735 0.491827534 0.500601696 0.509276404 0.517854193 0.526337459 #>  [55] 0.534728782 0.543030835 0.551246389 0.559378309 0.567429555 0.575403182 #>  [61] 0.583302347 0.591130309 0.598890438 0.606586219 0.614221261 0.621799313 #>  [67] 0.629324268 0.636800185 0.644231304 0.651622068 0.658977145 0.666301461 #>  [73] 0.673600228 0.680878991 0.688143671 0.695400620 0.702656694 0.709919325 #>  [79] 0.717196627 0.724497509 0.731831821 0.739210537 0.746645976 0.754152090 #>  [85] 0.761744827 0.769442602 0.777266920 0.785243211 0.793401970 0.801780355 #>  [91] 0.810424473 0.819392782 0.828761308 0.838632034 0.849147177 0.860515236 #>  [97] 0.873063293 0.887356913 0.904538189 0.927708021 1.000002698 mazGHGBeta(1.4,7,1.6312,0.3913,0.6659)            #acquiring the moment about zero values #> [1] 0.5279419  #acquiring the variance for a=1.6312,b=0.3913,c=0.6659 mazGHGBeta(2,7,1.6312,0.3913,0.6659)-mazGHGBeta(1,7,1.6312,0.3913,0.6659)^2 #> [1] 0.09648382  #only the integer value of moments is taken here because moments cannot be decimal mazGHGBeta(1.9,15,5,6,1) #> [1] 0.4545455"},{"path":"/reference/dGrassiaIIBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Grassia-II-Binomial Distribution — dGrassiaIIBin","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"functions provide ability generating probability function values cumulative probability function values Grassia-II-Binomial Distribution.","code":""},{"path":"/reference/dGrassiaIIBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"","code":"dGrassiaIIBin(x,n,a,b)"},{"path":"/reference/dGrassiaIIBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter . b single value shape parameter b.","code":""},{"path":"/reference/dGrassiaIIBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"output dGrassiaIIBin gives list format consisting pdf               probability function values vector form. mean              mean Grassia II Binomial Distribution. var               variance Grassia II Binomial Distribution. .dis.para     dispersion value Grassia II Binomial Distribution.","code":""},{"path":"/reference/dGrassiaIIBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"Mixing Gamma distribution Binomial distribution create Grassia-II-Binomial distribution, (1-p)=e^(-lambda) Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{GrassiaIIBin}[x]= {n \\choose x} \\sum_{j=0}^{x} {x \\choose j} (-1)^{x-j} (1+b(n-j))^{-} $$ $$,b > 0$$ $$x = 0,1,2,...,n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{GrassiaIIBin}[x] = (\\frac{b}{b+1})^$$ $$Var_{GrassiaIIBin}[x] = n^2[(\\frac{b}{b+2})^- (\\frac{b}{b+1})^{2a}] + n(\\frac{b}{b+1})^{1-(\\frac{b+1}{b+2})^}$$ $$dispersion= \\frac{(\\frac{b}{b+2})^l - (\\frac{b}{b+1})^{2a}}{(\\frac{b}{b+1})^[1-(\\frac{b}{b+1})^]}$$","code":""},{"path":"/reference/dGrassiaIIBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/dGrassiaIIBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grassia-II-Binomial Distribution — dGrassiaIIBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.2) plot(0,0,main=\"Grassia II binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dGrassiaIIBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dGrassiaIIBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }   dGrassiaIIBin(0:10,10,4,.2)$pdf    #extracting the pdf values #>  [1] 0.01234568 0.03923584 0.07605633 0.11447585 0.14524039 0.16058356 #>  [7] 0.15614273 0.13223144 0.09426128 0.05202202 0.01740489 dGrassiaIIBin(0:10,10,4,.2)$mean   #extracting the mean #> [1] 0.007716049 dGrassiaIIBin(0:10,10,4,.2)$var    #extracting the variance #> [1] 0.01380363 dGrassiaIIBin(0:10,10,4,.2)$over.dis.para  #extracting the over dispersion value #> [1] 0.0878147  #plotting the random variables and cumulative probability values col <- rainbow(4) a <-c (1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pGrassiaIIBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pGrassiaIIBin(0:10,10,a[i],a[i]),col = col[i]) }   pGrassiaIIBin(0:10,10,4,.2)   #acquiring the cumulative probability values #>  [1] 0.01234568 0.05158152 0.12763785 0.24211370 0.38735409 0.54793764 #>  [7] 0.70408037 0.83631181 0.93057309 0.98259511 1.00000000"},{"path":"/reference/dKUM.html","id":null,"dir":"Reference","previous_headings":"","what":"Kumaraswamy Distribution — dKUM","title":"Kumaraswamy Distribution — dKUM","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Kumaraswamy Distribution bounded [0,1].","code":""},{"path":"/reference/dKUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kumaraswamy Distribution — dKUM","text":"","code":"dKUM(p,a,b)"},{"path":"/reference/dKUM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kumaraswamy Distribution — dKUM","text":"p vector probabilities. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/dKUM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kumaraswamy Distribution — dKUM","text":"output dKUM gives list format consisting pdf             probability density values vector form. mean            mean Kumaraswamy distribution. var             variance Kumaraswamy distribution.","code":""},{"path":"/reference/dKUM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kumaraswamy Distribution — dKUM","text":"probability density function cumulative density function unit bounded Kumaraswamy Distribution random variable P given $$g_{P}(p)= abp^{-1}(1-p^)^{b-1} $$ ;        \\(0 \\le p \\le 1\\) $$G_{P}(p)= 1-(1-p^)^b$$ ;                   \\(0 \\le p \\le 1\\) $$,b > 0$$ mean variance denoted $$E[P]= bB(1+\\frac{1}{},b)$$ $$var[P]= bB(1+\\frac{2}{},b)-(bB(1+\\frac{1}{},b))^2$$ moments zero denoted $$E[P^r]= bB(1+\\frac{r}{},b)$$ \\(r = 1,2,3,...\\) Defined \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dKUM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kumaraswamy Distribution — dKUM","text":"Kumaraswamy, P. (1980). generalized probability density function double-bounded random processes. Journal Hydrology, 46(1), 79-88. Available : doi: 10.1016/0022-1694(80)90036-0 . Jones, M. C. (2009). Kumaraswamy's distribution: beta-type distribution tractability advantages. Statistical Methodology, 6(1), 70-81. Available : doi: 10.1016/j.stamet.2008.04.001 .","code":""},{"path":[]},{"path":"/reference/dKUM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kumaraswamy Distribution — dKUM","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,6)) for (i in 1:4) { lines(seq(0,1,by=0.01),dKUM(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dKUM(seq(0,1,by=0.01),2,3)$pdf   #extracting the probability values #>   [1] 0.000000000 0.059988001 0.119904019 0.179676146 0.239232614 0.298501875 #>   [7] 0.357412666 0.415894084 0.473875661 0.531287429 0.588060000 0.644124631 #>  [13] 0.699413299 0.753858776 0.807394694 0.859955625 0.911477146 0.961895914 #>  [19] 1.011149741 1.059177659 1.105920000 1.151318461 1.195316179 1.237857806 #>  [25] 1.278889574 1.318359375 1.356216826 1.392413344 1.426902221 1.459638689 #>  [31] 1.490580000 1.519685491 1.546916659 1.572237236 1.595613254 1.617013125 #>  [37] 1.636407706 1.653770374 1.669077101 1.682306519 1.693440000 1.702461721 #>  [43] 1.709358739 1.714121066 1.716741734 1.717216875 1.715545786 1.711731004 #>  [49] 1.705778381 1.697697149 1.687500000 1.675203151 1.660826419 1.644393296 #>  [55] 1.625931014 1.605470625 1.583047066 1.558699234 1.532470061 1.504406579 #>  [61] 1.474560000 1.442985781 1.409743699 1.374897926 1.338517094 1.300674375 #>  [67] 1.261447546 1.220919064 1.179176141 1.136310809 1.092420000 1.047605611 #>  [73] 1.001974579 0.955638956 0.908715974 0.861328125 0.813603226 0.765674494 #>  [79] 0.717680621 0.669765839 0.622080000 0.574778641 0.528023059 0.481980386 #>  [85] 0.436823654 0.392731875 0.349890106 0.308489524 0.268727501 0.230807669 #>  [91] 0.194940000 0.161340871 0.130233139 0.101846216 0.076416134 0.054185625 #>  [97] 0.035404186 0.020328154 0.009220781 0.002352299 0.000000000 dKUM(seq(0,1,by=0.01),2,3)$mean  #extracting the mean #> [1] 0.4571429 dKUM(seq(0,1,by=0.01),2,3)$var   #extracting the variance #> [1] 0.04102041  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pKUM(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pKUM(seq(0,1,by=0.01),2,3)    #acquiring the cumulative probability values #>   [1] 0.000000000 0.000299970 0.001199520 0.002697571 0.004792324 0.007481266 #>   [7] 0.010761167 0.014628088 0.019077382 0.024103701 0.029701000 0.035862542 #>  [13] 0.042580906 0.049847997 0.057655050 0.065992641 0.074850697 0.084218508 #>  [19] 0.094084732 0.104437416 0.115264000 0.126551336 0.138285700 0.150452806 #>  [25] 0.163037823 0.176025391 0.189399636 0.203144190 0.217242210 0.231676393 #>  [31] 0.246429000 0.261481874 0.276816462 0.292413838 0.308254724 0.324319516 #>  [37] 0.340588302 0.357040896 0.373656856 0.390415514 0.407296000 0.424277274 #>  [43] 0.441338152 0.458457333 0.475613434 0.492785016 0.509950617 0.527088785 #>  [49] 0.544178110 0.561197257 0.578125000 0.594940258 0.611622130 0.628149931 #>  [55] 0.644503231 0.660661891 0.676606099 0.692316417 0.707773813 0.722959704 #>  [61] 0.737856000 0.752445144 0.766710156 0.780634672 0.794202997 0.807400141 #>  [67] 0.820211870 0.832624752 0.844626203 0.856204533 0.867349000 0.878049854 #>  [73] 0.888298390 0.898086996 0.907409210 0.916259766 0.924634649 0.932531150 #>  [79] 0.939947921 0.946885026 0.953344000 0.959327906 0.964841391 0.969890743 #>  [85] 0.974483952 0.978630766 0.982342755 0.985633371 0.988518007 0.991014061 #>  [91] 0.993141000 0.994920422 0.996376121 0.997534153 0.998422901 0.999073141 #>  [97] 0.999518110 0.999793575 0.999937901 0.999992119 1.000000000  mazKUM(1.4,3,2)               #acquiring the moment about zero values #> [1] 0.6428571 mazKUM(2,2,3)-mazKUM(1,2,3)^2  #acquiring the variance for a=2,b=3 #> [1] 0.04102041  #only the integer value of moments is taken here because moments cannot be decimal mazKUM(1.9,5.5,6) #> [1] 0.6551253"},{"path":"/reference/dKumBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Kumaraswamy Binomial Distribution — dKumBin","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"functions provide ability generating probability function values cumulative probability function values Kumaraswamy Binomial Distribution.","code":""},{"path":"/reference/dKumBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"","code":"dKumBin(x,n,a,b,it=25000)"},{"path":"/reference/dKumBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"x vector binomial random variables n single value binomial trial single value shape parameter alpha representing b single value shape parameter beta representing b number iterations converge proper probability function replacing infinity","code":""},{"path":"/reference/dKumBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"output dKumBin gives list format consisting pdf           probability function values vector form. mean          mean Kumaraswamy Binomial Distribution. var           variance Kumaraswamy Binomial Distribution. .dis.para dispersion value Kumaraswamy Distribution.","code":""},{"path":"/reference/dKumBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"Mixing Kumaraswamy distribution Binomial distribution create Kumaraswamy Binomial distribution.  probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{KumBin}(x)= ab{n \\choose x} \\sum_{j=0}^{} (-1)^j{b-1 \\choose j}B(x++aj,n-x+1) $$ $$,b > 0$$ $$x = 0,1,2,...n$$ $$n = 1,2,3,...$$ $$> 0$$ mean, variance dispersion denoted $$E_{KumBin}[x]= nbB(1+\\frac{1}{},b) $$ $$Var_{KumBin}[x]= n^2 b(B(1+\\frac{2}{},b)-bB(1+\\frac{1}{},b)^2)+                        nb(B(1+\\frac{1}{},b)-B(1+\\frac{2}{},b)) $$ $$dispersion= \\frac{(bB(1+\\frac{2}{},b)-(bB(1+\\frac{1}{},b))^2)}                        {(bB(1+\\frac{1}{},b)-(bB(1+\\frac{1}{},b))^2)} $$ Defined \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dKumBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":"/reference/dKumBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kumaraswamy Binomial Distribution — dKumBin","text":"","code":"if (FALSE) { #plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,.85) plot(0,0,main=\"Kumaraswamy binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dKumBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dKumBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }  dKumBin(0:10,10,4,2)$pdf  #extracting the pdf values dKumBin(0:10,10,4,2)$mean #extracting the mean dKumBin(0:10,10,4,2)$var  #extracting the variance dKumBin(0:10,10,4,2)$over.dis.para #extracting the over dispersion value  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(1,2,5,10,.85) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pKumBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pKumBin(0:10,10,a[i],a[i]),col = col[i]) }  pKumBin(0:10,10,4,2)    #acquiring the cumulative probability values          }"},{"path":"/reference/dLMBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Lovinson Multiplicative  Binomial Distribution — dLMBin","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"functions provide ability generating probability function values cumulative probability function values Lovinson Multiplicative Binomial Distribution.","code":""},{"path":"/reference/dLMBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"","code":"dLMBin(x,n,p,phi)"},{"path":"/reference/dLMBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. phi single value phi.","code":""},{"path":"/reference/dLMBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"output dLMBin gives list format consisting pdf         probability function values vector form. mean        mean Lovinson Multiplicative Binomial Distribution. var        variance Lovinson Multiplicative Binomial Distribution.","code":""},{"path":"/reference/dLMBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{LMBin}(x)= {n \\choose x} p^x (1-p)^{n-x} \\frac{(phi^{x(n-x)}}{f(p,phi,n)} $$ \\(f(p,phi,n)\\) $$f(p,phi,n)= \\sum_{k=0}^{n} {n \\choose k} p^k (1-p)^{n-k} (phi^{k(n-k)} )$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$k = 0,1,2,...,n$$ $$0 < p < 1$$ $$0 < phi $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dLMBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"Elamir, E.., 2013. Multiplicative-Binomial Distribution: Results Characterization, Inference Random Data Generation. Journal Statistical Theory Applications, 12(1), pp.92-105.","code":""},{"path":"/reference/dLMBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lovinson Multiplicative  Binomial Distribution — dLMBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Lovinson Multiplicative binomial probability      function graph\",xlab=\"Binomial random variable\",      ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dLMBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dLMBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],pch=16) }   dLMBin(0:10,10,.58,10.022)$pdf   #extracting the pdf values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106255e-05 5.123785e-02 #>  [6] 8.509524e-01 9.771209e-02 7.659947e-05 3.923411e-10 1.185630e-17 #> [11] 1.605234e-27 dLMBin(0:10,10,.58,10.022)$mean   #extracting the mean #> [1] 5.046585 dLMBin(0:10,10,.58,10.022)$var   #extracting the variance #> [1] 0.1471704   #plotting random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Lovinson Multiplicative binomial probability      function graph\",xlab=\"Binomial random variable\",      ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pLMBin(0:10,10,a[i],1+b[i]),col = col[i],lwd=2.85) points(0:10,pLMBin(0:10,10,a[i],1+b[i]),col = col[i],pch=16) }   pLMBin(0:10,10,.58,10.022)     #acquiring the cumulative probability values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106261e-05 5.125891e-02 #>  [6] 9.022113e-01 9.999234e-01 1.000000e+00 1.000000e+00 1.000000e+00 #> [11] 1.000000e+00"},{"path":"/reference/dMcGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"McDonald Generalized Beta Binomial Distribution — dMcGBB","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"functions provide ability generating probability function values cumulative probability function values McDonald Generalized Beta Binomial Distribution.","code":""},{"path":"/reference/dMcGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"","code":"dMcGBB(x,n,a,b,c)"},{"path":"/reference/dMcGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/dMcGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"output dMcGBB gives list format consisting pdf            probability function values vector form. mean           mean McDonald Generalized Beta Binomial Distribution. var            variance McDonald Generalized Beta Binomial Distribution. .dis.para  dispersion value McDonald Generalized Beta Binomial Distribution.","code":""},{"path":"/reference/dMcGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"Mixing Generalized Beta Type-1 Distribution  Binomial distribution probability function value cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{McGBB}(x)= {n \\choose x} \\frac{1}{B(,b)} (\\sum_{j=0}^{n-x} (-1)^j {n-x \\choose j} B(\\frac{x}{c}++\\frac{j}{c},b) ) $$ $$,b,c > 0$$ mean, variance dispersion denoted $$E_{McGBB}[x]= n\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})} $$ $$Var_{McGBB}[x]= n^2(\\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2) +n(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})}-\\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}) $$ $$dispersion= \\frac{\\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2}{\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2}$$ $$x = 0,1,2,...n$$ $$n = 1,2,3,...$$","code":""},{"path":"/reference/dMcGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":"/reference/dMcGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"McDonald Generalized Beta Binomial Distribution — dMcGBB","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.6) plot(0,0,main=\"Mcdonald generalized beta-binomial probability function graph\", xlab=\"Binomial random variable\",ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dMcGBB(0:10,10,a[i],2.5,a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dMcGBB(0:10,10,a[i],2.5,a[i])$pdf,col = col[i],pch=16) }   dMcGBB(0:10,10,4,2,1)$pdf             #extracting the pdf values #>  [1] 0.003663004 0.013320013 0.029970030 0.053280053 0.081585082 0.111888112 #>  [7] 0.139860140 0.159840160 0.164835165 0.146520147 0.095238095 dMcGBB(0:10,10,4,2,1)$mean            #extracting the mean #> [1] 6.666667 dMcGBB(0:10,10,4,2,1)$var             #extracting the variance #> [1] 5.079365 dMcGBB(0:10,10,4,2,1)$over.dis.para   #extracting the over dispersion value #> [1] 0.1428571  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pMcGBB(0:10,10,a[i],a[i],2),col = col[i]) points(0:10,pMcGBB(0:10,10,a[i],a[i],2),col = col[i]) }   pMcGBB(0:10,10,4,2,1)       #acquiring the cumulative probability values #>  [1] 0.003663004 0.016983017 0.046953047 0.100233100 0.181818182 0.293706294 #>  [7] 0.433566434 0.593406593 0.758241758 0.904761905 1.000000000"},{"path":"/reference/dMultiBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplicative  Binomial Distribution — dMultiBin","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"functions provide ability generating probability function values cumulative probability function values Multiplicative Binomial Distribution.","code":""},{"path":"/reference/dMultiBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"","code":"dMultiBin(x,n,p,theta)"},{"path":"/reference/dMultiBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. theta single value theta.","code":""},{"path":"/reference/dMultiBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"output dMultiBin gives list format consisting pdf         probability function values vector form. mean        mean Multiplicative Binomial Distribution. var        variance Multiplicative Binomial Distribution.","code":""},{"path":"/reference/dMultiBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{MultiBin}(x)= {n \\choose x} p^x (1-p)^{n-x} \\frac{(theta^{x(n-x)}}{f(p,theta,n)} $$ \\(f(p,theta,n)\\) $$f(p,theta,n)= \\sum_{k=0}^{n} {n \\choose k} p^k (1-p)^{n-k} (theta^{k(n-k)} )$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$k = 0,1,2,...,n$$ $$0 < p < 1$$ $$0 < theta $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dMultiBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 .","code":""},{"path":"/reference/dMultiBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplicative  Binomial Distribution — dMultiBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Multiplicative binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dMultiBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dMultiBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],pch=16) }   dMultiBin(0:10,10,.58,10.022)$pdf   #extracting the pdf values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106255e-05 5.123785e-02 #>  [6] 8.509524e-01 9.771209e-02 7.659947e-05 3.923411e-10 1.185630e-17 #> [11] 1.605234e-27 dMultiBin(0:10,10,.58,10.022)$mean   #extracting the mean #> [1] 5.046585 dMultiBin(0:10,10,.58,10.022)$var   #extracting the variance #> [1] 0.1471704   #plotting random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Multiplicative binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pMultiBin(0:10,10,a[i],1+b[i]),col = col[i],lwd=2.85) points(0:10,pMultiBin(0:10,10,a[i],1+b[i]),col = col[i],pch=16) }   pMultiBin(0:10,10,.58,10.022)     #acquiring the cumulative probability values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106261e-05 5.125891e-02 #>  [6] 9.022113e-01 9.999234e-01 1.000000e+00 1.000000e+00 1.000000e+00 #> [11] 1.000000e+00"},{"path":"/reference/dTRI.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangular Distribution Bounded Between [0,1] — dTRI","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"functions provide ability generating probability density values, cumulative probability density values moments zero values Triangular Distribution bounded [0,1].","code":""},{"path":"/reference/dTRI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"","code":"dTRI(p,mode)"},{"path":"/reference/dTRI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"p vector probabilities. mode single value mode.","code":""},{"path":"/reference/dTRI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"output dTRI gives list format consisting pdf             probability density values vector form. mean            mean unit bounded Triangular distribution. variance        variance unit bounded Triangular distribution","code":""},{"path":"/reference/dTRI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"Setting \\(min=0\\) \\(max=1\\) \\(mode=c\\) Triangular distribution unit bounded Triangular distribution can obtained. probability density function cumulative density function unit bounded Triangular distribution random variable P given $$g_{P}(p)= \\frac{2p}{c} $$ ;            \\(0 \\le p < c\\) $$g_{P}(p)= \\frac{2(1-p)}{(1-c)} $$ ;    \\(c \\le p \\le 1\\) $$G_{P}(p)= \\frac{p^2}{c} $$ ;           \\(0 \\le p < c\\) $$G_{P}(p)= 1-\\frac{(1-p)^2}{(1-c)} $$ ; \\(c \\le p \\le 1\\) $$0 \\le mode=c \\le 1$$ mean variance denoted $$E[P]= \\frac{(+b+c)}{3}= \\frac{(1+c)}{3} $$ $$var[P]= \\frac{^2+b^2+c^2-ab-ac-bc}{18}= \\frac{(1+c^2-c)}{18} $$ Moments zero denoted $$E[P^r]= \\frac{2c^{r+2}}{c(r+2)}+\\frac{2(1-c^{r+1})}{(1-c)(r+1)}+\\frac{2(c^{r+2}-1)}{(1-c)(r+2)} $$ \\(r = 1,2,3,...\\) NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dTRI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2  . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299  .","code":""},{"path":"/reference/dTRI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangular Distribution Bounded Between [0,1] — dTRI","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) x <- seq(0.2,0.8,by=0.2) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\", ylab=\"Probability density values\",xlim = c(0,1),ylim = c(0,3)) for (i in 1:4) { lines(seq(0,1,by=0.01),dTRI(seq(0,1,by=0.01),x[i])$pdf,col = col[i]) }   dTRI(seq(0,1,by=0.05),0.3)$pdf     #extracting the pdf values #>  [1] 0.0000000 0.3333333 0.6666667 1.0000000 1.3333333 1.6666667 2.0000000 #>  [8] 1.8571429 1.7142857 1.5714286 1.4285714 1.2857143 1.1428571 1.0000000 #> [15] 0.8571429 0.7142857 0.5714286 0.4285714 0.2857143 0.1428571 0.0000000 dTRI(seq(0,1,by=0.01),0.3)$mean    #extracting the mean #> [1] 0.4333333 dTRI(seq(0,1,by=0.01),0.3)$var     #extracting the variance #> [1] 0.04388889  #plotting the random variables and cumulative probability values col <- rainbow(4) x <- seq(0.2,0.8,by=0.2) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\", ylab=\"Cumulative density values\",xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pTRI(seq(0,1,by=0.01),x[i]),col = col[i]) }   pTRI(seq(0,1,by=0.05),0.3)      #acquiring the cumulative probability values #>  [1] 0.000000000 0.008333333 0.033333333 0.075000000 0.133333333 0.208333333 #>  [7] 0.300000000 0.396428571 0.485714286 0.567857143 0.642857143 0.710714286 #> [13] 0.771428571 0.825000000 0.871428571 0.910714286 0.942857143 0.967857143 #> [19] 0.985714286 0.996428571 1.000000000 mazTRI(1.4,.3)                  #acquiring the moment about zero values #> [1] 0.4333333 mazTRI(2,.3)-mazTRI(1,.3)^2     #variance for when is mode 0.3 #> [1] 0.04388889  #only the integer value of moments is taken here because moments cannot be decimal mazTRI(1.9,0.5) #> [1] 0.5"},{"path":"/reference/dTriBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangular Binomial Distribution — dTriBin","title":"Triangular Binomial Distribution — dTriBin","text":"functions provide ability generating probability function values cumulative probability function values Triangular Binomial distribution.","code":""},{"path":"/reference/dTriBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangular Binomial Distribution — dTriBin","text":"","code":"dTriBin(x,n,mode)"},{"path":"/reference/dTriBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangular Binomial Distribution — dTriBin","text":"x vector binomial random variables. n single value binomial trials. mode single value mode.","code":""},{"path":"/reference/dTriBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangular Binomial Distribution — dTriBin","text":"output dTriBin gives list format consisting pdf             probability function values vector form. mean            mean Triangular Binomial Distribution. var             variance Triangular Binomial Distribution. .dis.para   dispersion value Triangular Binomial Distribution.","code":""},{"path":"/reference/dTriBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Triangular Binomial Distribution — dTriBin","text":"Mixing unit bounded Triangular distribution Binomial distribution create Triangular Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{TriBin}(x)= 2 {n \\choose x}(c^{-1}B_c(x+2,n-x+1)+(1-c)^{-1}B(x+1,n-x+2)-(1-c)^{-1}B_c(x+1,n-x+2))$$ $$0 < mode=c < 1$$ $$x = 0,1,2,...n$$ $$n = 1,2,3...$$ mean, variance dispersion denoted $$E_{TriiBin}[x]= \\frac{n(1+c)}{3} $$ $$Var_{TriBin}[x]= \\frac{n(n+3)}{18}-\\frac{n(n-3)c(1-c)}{18} $$ $$dispersion= \\frac{(1-c+c^2)}{2(2+c-c^2)} $$ Defined \\(B_c(,b)=\\int^c_0 t^{-1} (1-t)^{b-1} \\,dt\\) incomplete beta integrals \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dTriBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Triangular Binomial Distribution — dTriBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2  . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299 .","code":""},{"path":"/reference/dTriBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangular Binomial Distribution — dTriBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(7) x <- seq(0.1,0.7,by=0.1) plot(0,0,main=\"Triangular binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,.3)) for (i in 1:7) { lines(0:10,dTriBin(0:10,10,x[i])$pdf,col = col[i],lwd=2.85) points(0:10,dTriBin(0:10,10,x[i])$pdf,col = col[i],pch=16) }   dTriBin(0:10,10,.4)$pdf        #extracting the pdf values #>  [1] 0.03774136 0.07438334 0.10699425 0.13064720 0.14086322 0.13674651 #>  [7] 0.12148214 0.09984766 0.07555898 0.05048387 0.02525147 dTriBin(0:10,10,.4)$mean       #extracting the mean #> [1] 4.666667 dTriBin(0:10,10,.4)$var        #extracting the variance #> [1] 6.288889 dTriBin(0:10,10,.4)$over.dis.para  #extracting the over dispersion value #> [1] 0.1696429  #plotting the random variables and cumulative probability values col <- rainbow(7) x <- seq(0.1,0.7,by=0.1) plot(0,0,main=\"Triangular binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:7) { lines(0:10,pTriBin(0:10,10,x[i]),col = col[i],lwd=2.85) points(0:10,pTriBin(0:10,10,x[i]),col = col[i],pch=16) }   pTriBin(0:10,10,.4)    #acquiring the cumulative probability values #>  [1] 0.03774136 0.11212471 0.21911896 0.34976615 0.49062937 0.62737588 #>  [7] 0.74885802 0.84870568 0.92426467 0.97474853 1.00000000"},{"path":"/reference/dUNI.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Distribution Bounded Between [0,1] — dUNI","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"functions provide ability generating probability density values, cumulative probability density values moments zero values Uniform Distribution bounded [0,1].","code":""},{"path":"/reference/dUNI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"","code":"dUNI(p)"},{"path":"/reference/dUNI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"p vector probabilities.","code":""},{"path":"/reference/dUNI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"output dUNI gives list format consisting pdf              probability density values vector form. mean             mean unit bounded uniform distribution. var              variance unit bounded uniform distribution.","code":""},{"path":"/reference/dUNI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"Setting \\(=0\\) \\(b=1\\) Uniform Distribution unit bounded Uniform Distribution can obtained. probability density function cumulative density function unit bounded Uniform Distribution random variable P given $$g_{P}(p) = 1$$    \\(0 \\le p \\le 1\\) $$G_{P}(p) = p$$    \\(0 \\le p \\le 1\\) mean variance denoted $$E[P]= \\frac{1}{+b}= 0.5$$ $$var[P]= \\frac{(b-)^2}{12}= 0.0833$$ Moments zero denoted $$E[P^r]= \\frac{e^{rb}-e^{ra}}{r(b-)}= \\frac{e^r-1}{r} $$ \\(r = 1,2,3,...\\) NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dUNI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley.","code":""},{"path":[]},{"path":"/reference/dUNI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Distribution Bounded Between [0,1] — dUNI","text":"","code":"#plotting the random variables and probability values plot(seq(0,1,by=0.01),dUNI(seq(0,1,by=0.01))$pdf,type = \"l\",main=\"Probability density graph\", xlab=\"Random variable\",ylab=\"Probability density values\")   dUNI(seq(0,1,by=0.05))$pdf     #extract the pdf values #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 dUNI(seq(0,1,by=0.01))$mean    #extract the mean #> [1] 0.5 dUNI(seq(0,1,by=0.01))$var     #extract the variance #> [1] 0.08333333  #plotting the random variables and cumulative probability values plot(seq(0,1,by=0.01),pUNI(seq(0,1,by=0.01)),type = \"l\",main=\"Cumulative density graph\", xlab=\"Random variable\",ylab=\"Cumulative density values\")   pUNI(seq(0,1,by=0.05))     #acquiring the cumulative probability values #>  [1] 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.35 0.40 0.45 0.50 0.55 0.60 0.65 0.70 #> [16] 0.75 0.80 0.85 0.90 0.95 1.00  mazUNI(c(1,2,3))    #acquiring the moment about zero values #> [1] 0.5000000 0.3333333 0.2500000  #only the integer value of moments is taken here because moments cannot be decimal mazUNI(1.9) #> [1] 0.5"},{"path":"/reference/dUniBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Binomial Distribution — dUniBin","title":"Uniform Binomial Distribution — dUniBin","text":"functions provide ability generating probability function values cumulative probability function values Uniform Binomial Distribution.","code":""},{"path":"/reference/dUniBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Binomial Distribution — dUniBin","text":"","code":"dUniBin(x,n)"},{"path":"/reference/dUniBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Binomial Distribution — dUniBin","text":"x vector binomial random variables. n single value binomial trials.","code":""},{"path":"/reference/dUniBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Binomial Distribution — dUniBin","text":"output dUniBin gives list format consisting pdf            probability function values vector form. mean           mean Uniform Binomial Distribution. var            variance Uniform Binomial Distribution. ove.dis.para   dispersion value Uniform Binomial Distribution.","code":""},{"path":"/reference/dUniBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform Binomial Distribution — dUniBin","text":"Mixing unit bounded uniform distribution binomial distribution create Uniform Binomial Distribution.  probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values $$P_{UniBin}(x)= \\frac{1}{n+1} $$ $$n = 1,2,...$$ $$x = 0,1,2,...n$$ mean, variance dispersion denoted $$E_{UniBin}[X]= \\frac{n}{2} $$ $$Var_{UniBin}[X]= \\frac{n(n+2)}{12} $$ $$dispersion= \\frac{1}{3} $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/dUniBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform Binomial Distribution — dUniBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299  .","code":""},{"path":"/reference/dUniBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Binomial Distribution — dUniBin","text":"","code":"#plotting the binomial random variables and probability values plot(0:10,dUniBin(0:10,10)$pdf,type=\"l\",main=\"Uniform binomial probability function graph\", xlab=\" Binomial random variable\",ylab=\"Probability function values\") points(0:10,dUniBin(0:10,10)$pdf)   dUniBin(0:300,300)$pdf  #extracting the pdf values #>   [1] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>   [7] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [13] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [19] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [25] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [31] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [37] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [43] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [49] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [55] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [61] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [67] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [73] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [79] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [85] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [91] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [97] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [103] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [109] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [115] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [121] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [127] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [133] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [139] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [145] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [151] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [157] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [163] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [169] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [175] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [181] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [187] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [193] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [199] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [205] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [211] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [217] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [223] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [229] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [235] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [241] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [247] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [253] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [259] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [265] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [271] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [277] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [283] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [289] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [295] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [301] 0.003322259 dUniBin(0:10,10)$mean   #extracting the mean #> [1] 5 dUniBin(0:10,10)$var    #extracting the variance #> [1] 10 dUniBin(0:10,10)$over.dis.para  #extracting the over dispersion #> [1] 0.3333333  #plotting the binomial random variables and cumulative probability values plot(0:10,pUniBin(0:10,10),type=\"l\",main=\"Cumulative probability function graph\", xlab=\" Binomial random variable\",ylab=\"Cumulative probability function values\") points(0:10,pUniBin(0:10,10))   pUniBin(0:15,15)       #acquiring the cumulative probability values #>  [1] 0.0625 0.1250 0.1875 0.2500 0.3125 0.3750 0.4375 0.5000 0.5625 0.6250 #> [11] 0.6875 0.7500 0.8125 0.8750 0.9375 1.0000"},{"path":"/reference/Epidemic_Cold.html","id":null,"dir":"Reference","previous_headings":"","what":"Family Epidemics — Epidemic_Cold","title":"Family Epidemics — Epidemic_Cold","text":"investigation, families size, two parents three children, living different circumstances domestic overcrowding visited fortnightly intervals. date onset clinical nature upper respiratory infectious experienced member family charted time scale marked days. Family epidemics acute coryza-common colds-thus available analysis.","code":""},{"path":"/reference/Epidemic_Cold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family Epidemics — Epidemic_Cold","text":"","code":"Epidemic_Cold"},{"path":"/reference/Epidemic_Cold.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Family Epidemics — Epidemic_Cold","text":"data frame 6 columns 5 rows Cases Cases Families Families Father Father Status Introducing Cases Mother Mother Status Introducing Cases SChild School Child Status Introducing Cases PSChild Pre-School Child Status Introducing Cases","code":""},{"path":"/reference/Epidemic_Cold.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Family Epidemics — Epidemic_Cold","text":"Extracted Heasman, M. . Reid, D. D. (1961). \"Theory observation family epidemics common cold.\" Br. J. pleu. SOC. Med., 15, 12-16.","code":""},{"path":"/reference/Epidemic_Cold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Family Epidemics — Epidemic_Cold","text":"inspection epidemic time charts, possible identify new primary introductions illness household onset cold lapse 10 days since last case home. Two cases occurring succeeding days classified multiple primaries. Thereafter, links epidemic chain spread defined interval one day successive cases family. family epidemics described thus 1-2-1, 1-1-1-0, 2-1-0, etc. must emphasized although method classification somewhat arbitrary, completed corresponding theoretical distributions worked interval chosen agrees distribution presumptive incubation periods common cold seen field surveys (e.g. Badger, Dingle, Feller, Hodges, Jordan, Rammelkamp, 1953).","code":""},{"path":"/reference/Epidemic_Cold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Family Epidemics — Epidemic_Cold","text":"","code":"Epidemic_Cold$Cases #> [1] 0 1 2 3 4 sum(Epidemic_Cold$SChild) #> [1] 249"},{"path":"/reference/EstMGFBetaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"functions estimate shape parameters using maximum log likelihood method moment generating function method Beta-Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMGFBetaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"","code":"EstMGFBetaBin(x,freq)"},{"path":"/reference/EstMGFBetaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"x vector binomial random variables. freq vector frequencies.","code":""},{"path":"/reference/EstMGFBetaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"output EstMGFBetaBin produce class mgf format consisting shape parameter beta distribution representing alpha b shape parameter beta distribution representing beta min Negative loglikelihood value AIC AIC value call inputs function Methods print, summary, coef AIC can used extract specific outputs.","code":""},{"path":"/reference/EstMGFBetaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"$$,b > 0$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMGFBetaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"Young-Xu, Y. & Chan, K.., 2008. Pooling overdispersed binomial data estimate event rate. BMC medical research methodology, 8(1), p.58. Available : doi: 10.1186/1471-2288-8-58 . Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 . Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759. Available : doi: 10.1094/PHYTO-83-759","code":""},{"path":[]},{"path":"/reference/EstMGFBetaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMGFBetaBin","text":"","code":"No.D.D <- 0:7        #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it estimate <- EstMLEBetaBin(No.D.D,Obs.fre.1,a=0.1,b=0.1)  bbmle::coef(estimate)   #extracting the parameters #>         a         b  #> 0.7229420 0.5808483   #estimating the parameters using moment generating function methods results <- EstMGFBetaBin(No.D.D,Obs.fre.1)  # extract the estimated parameters and summary coef(results) #>  \t  a \t  b  #>  0.7161628 0.5963324 summary(results) #> Coefficients:  #>  a \t  b  #>  0.7161628 0.5963324 #>  #> Negative Log-likelihood :  813.5872 #>  #> AIC :  1631.174  AIC(results) #show the AIC value #> [1] 1631.174"},{"path":"/reference/EstMLEAddBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"function estimate probability success alpha using maximum log likelihood method Additive Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEAddBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"","code":"EstMLEAddBin(x,freq)"},{"path":"/reference/EstMLEAddBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"x vector binomial random variables. freq vector frequencies.","code":""},{"path":"/reference/EstMLEAddBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"output EstMLEAddBin produce class mlAB ml list consisting min Negative Log Likelihood value. p estimated probability success. alpha estimated alpha parameter. AIC  AIC value. call inputs function. Methods print, summary, coef AIC can used extract specific outputs.","code":""},{"path":"/reference/EstMLEAddBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEAddBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/EstMLEAddBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the probability of success and alpha for Additive Binomial\r\nDistribution — EstMLEAddBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  if (FALSE) { #estimating the probability value and alpha value results <- EstMLEAddBin(No.D.D,Obs.fre.1)  #printing the summary of results summary(results)  #extracting the estimated parameters coef(results)          }"},{"path":"/reference/EstMLEBetaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"functions estimate shape parameters using maximum log likelihood method moment generating function method Beta-Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEBetaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"","code":"EstMLEBetaBin(x,freq,a,b,...)"},{"path":"/reference/EstMLEBetaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEBetaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"EstMLEBetaBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEBetaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"$$,b > 0$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error  messages provided go .","code":""},{"path":"/reference/EstMLEBetaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"Young-Xu, Y. & Chan, K.., 2008. Pooling overdispersed binomial data estimate event rate. BMC medical research methodology, 8(1), p.58. Available : doi: 10.1186/1471-2288-8-58 . Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 . Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759. Available : doi: 10.1094/PHYTO-83-759","code":""},{"path":[]},{"path":"/reference/EstMLEBetaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters a and b for Beta-Binomial Distribution — EstMLEBetaBin","text":"","code":"No.D.D <- 0:7        #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it estimate <- EstMLEBetaBin(No.D.D,Obs.fre.1,a=0.1,b=0.1)  bbmle::coef(estimate)   #extracting the parameters #>         a         b  #> 0.7229420 0.5808483   #estimating the parameters using moment generating function methods EstMGFBetaBin(No.D.D,Obs.fre.1) #> Call:  #> EstMGFBetaBin(x = No.D.D, freq = Obs.fre.1) #>  #> Coefficients:  #>         a         b  #> 0.7161628 0.5963324"},{"path":"/reference/EstMLEBetaCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"function estimate covariance, alpha beta parameter values using maximum log likelihood method Beta-Correlated Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEBetaCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"","code":"EstMLEBetaCorrBin(x,freq,cov,a,b,...)"},{"path":"/reference/EstMLEBetaCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"x vector binomial random variables. freq vector frequencies. cov single value covariance. single value alpha parameter. b single value beta parameter. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEBetaCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"EstMLEBetaCorrBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEBetaCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"$$x = 0,1,2,...$$ $$freq \\ge 0$$ $$-\\infty < cov < +\\infty$$ $$0 < ,b$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEBetaCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  .","code":""},{"path":[]},{"path":"/reference/EstMLEBetaCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the covariance, alpha and beta parameter values for Beta-Correlated Binomial\r\nDistribution — EstMLEBetaCorrBin","text":"","code":"No.D.D <- 0:7               #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEBetaCorrBin(x=No.D.D,freq=Obs.fre.1,cov=0.0050,a=10,b=10)  bbmle::coef(parameters)           #extracting the parameters #>        cov          a          b  #> 0.07068406 3.19944807 2.63292837"},{"path":"/reference/EstMLECOMPBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"function estimate probability success v parameter using maximum log likelihood method COM Poisson Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLECOMPBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"","code":"EstMLECOMPBin(x,freq,p,v,...)"},{"path":"/reference/EstMLECOMPBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. v single value v. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLECOMPBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"EstMLECOMPBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLECOMPBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"$$x = 0,1,2,...$$ $$freq \\ge 0$$ $$0 < p < 1$$ $$-\\infty < v < +\\infty$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLECOMPBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"Borges, P., Rodrigues, J., Balakrishnan, N. Bazan, J., 2014. COM-Poisson type generalization binomial distribution properties applications. Statistics & Probability Letters, 87, pp.158-166. Available : doi: 10.1016/j.spl.2014.01.019","code":""},{"path":"/reference/EstMLECOMPBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the probability of success and v parameter for COM Poisson Binomial\r\nDistribution — EstMLECOMPBin","text":"","code":"No.D.D <- 0:7               #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLECOMPBin(x=No.D.D,freq=Obs.fre.1,p=0.5,v=0.1)  bbmle::coef(parameters)           #extracting the parameters #>          p          v  #>  0.5126844 -0.1631013"},{"path":"/reference/EstMLECorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"function estimate probability success correlation using maximum log likelihood method Correlated Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLECorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"","code":"EstMLECorrBin(x,freq,p,cov,...)"},{"path":"/reference/EstMLECorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. cov single value covariance. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLECorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"EstMLECorrBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLECorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"$$x = 0,1,2,...$$ $$freq \\ge 0$$ $$0 < p < 1$$ $$-\\infty < cov < +\\infty$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLECorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  . Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":[]},{"path":"/reference/EstMLECorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the probability of success and correlation for Correlated Binomial\r\nDistribution — EstMLECorrBin","text":"","code":"No.D.D <- 0:7               #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLECorrBin(x=No.D.D,freq=Obs.fre.1,p=0.5,cov=0.0050)  bbmle::coef(parameters)           #extracting the parameters #>          p        cov  #> 0.54695394 0.05714648"},{"path":"/reference/EstMLEGammaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"function estimate shape parameters using maximum log likelihood method Gamma Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEGammaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"","code":"EstMLEGammaBin(x,freq,c,l,...)"},{"path":"/reference/EstMLEGammaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"x vector binomial random variables. freq vector frequencies. c single value shape parameter c. l single value shape parameter l. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEGammaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"EstMLEGammaBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEGammaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"$$0 < c,l$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEGammaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/EstMLEGammaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters c and l for Gamma Binomial distribution — EstMLEGammaBin","text":"","code":"No.D.D <- 0:7                   #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEGammaBin(x=No.D.D,freq=Obs.fre.1,c=0.1,l=0.1)  bbmle::coef(parameters)         #extracting the parameters #>         c         l  #> 0.6036041 0.6030764"},{"path":"/reference/EstMLEGHGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"function estimate shape parameters using maximum log likelihood method  Gaussian Hypergeometric Generalized Beta  Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEGHGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"","code":"EstMLEGHGBB(x,freq,a,b,c,...)"},{"path":"/reference/EstMLEGHGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter lambda representing c. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEGHGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"EstMLEGHGBB used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEGHGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"$$0 < ,b,c$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEGHGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/EstMLEGHGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters a,b and c for Gaussian Hypergeometric Generalized Beta  Binomial\r\nDistribution — EstMLEGHGBB","text":"","code":"No.D.D <- 0:7           #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEGHGBB(No.D.D,Obs.fre.1,a=0.1,b=0.2,c=0.5)  bbmle::coef(parameters)   #extracting the parameters #>         a         b         c  #> 1.3506788 0.3245485 0.7005253"},{"path":"/reference/EstMLEGrassiaIIBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"function estimate shape parameters using maximum log likelihood method Grassia II Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEGrassiaIIBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"","code":"EstMLEGrassiaIIBin(x,freq,a,b,...)"},{"path":"/reference/EstMLEGrassiaIIBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter . b single value shape parameter b. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEGrassiaIIBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"EstMLEGrassiaIIBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEGrassiaIIBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"$$0 < ,b$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEGrassiaIIBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/EstMLEGrassiaIIBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters a and b for Grassia II Binomial distribution — EstMLEGrassiaIIBin","text":"","code":"No.D.D <- 0:7                   #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEGrassiaIIBin(x=No.D.D,freq=Obs.fre.1,a=0.1,b=0.1)  bbmle::coef(parameters)         #extracting the parameters #>         a         b  #> 0.7285048 2.0251467"},{"path":"/reference/EstMLEKumBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"function estimate shape parameters using maximum log likelihood method  Kumaraswamy Binomial distribution binomial random variables corresponding frequencies given","code":""},{"path":"/reference/EstMLEKumBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"","code":"EstMLEKumBin(x,freq,a,b,it,...)"},{"path":"/reference/EstMLEKumBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. number iterations converge proper probability function replacing infinity. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEKumBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"EstMLEKumBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEKumBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"$$0 < ,b$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ $$> 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEKumBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":[]},{"path":"/reference/EstMLEKumBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters a and b and iterations for  Kumaraswamy Binomial Distribution — EstMLEKumBin","text":"","code":"No.D.D <- 0:7     #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  if (FALSE) { #estimating the parameters using maximum log likelihood value and assigning it parameters1 <- EstMLEKumBin(x=No.D.D,freq=Obs.fre.1,a=10.1,b=1.1,it=10000)  bbmle::coef(parameters1)   #extracting the parameters         }"},{"path":"/reference/EstMLELMBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"function estimate probability success phi parameter using maximum log likelihood method Lovinson Multiplicative Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLELMBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"","code":"EstMLELMBin(x,freq,p,phi,...)"},{"path":"/reference/EstMLELMBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. phi single value phi parameter. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLELMBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"EstMLELMBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLELMBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$0 < phi $$","code":""},{"path":"/reference/EstMLELMBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"Elamir, E.., 2013. Multiplicative-Binomial Distribution: Results Characterization, Inference Random Data Generation. Journal Statistical Theory Applications, 12(1), pp.92-105.","code":""},{"path":[]},{"path":"/reference/EstMLELMBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the probability of success and theta for Lovinson Multiplicative Binomial\r\nDistribution — EstMLELMBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)    #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLELMBin(x=No.D.D,freq=Obs.fre.1,p=0.5,phi=15)  bbmle::coef(parameters)           #extracting the parameters #>         p       phi  #> 0.5127016 0.7060526"},{"path":"/reference/EstMLEMcGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"function estimate shape parameters using maximum log likelihood method  McDonald Generalized Beta  Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEMcGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"","code":"EstMLEMcGBB(x,freq,a,b,c,...)"},{"path":"/reference/EstMLEMcGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEMcGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"EstMLEMcGBB used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEMcGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"$$0 < ,b,c$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/EstMLEMcGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":[]},{"path":"/reference/EstMLEMcGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the shape parameters a,b and c for McDonald Generalized Beta Binomial\r\ndistribution — EstMLEMcGBB","text":"","code":"No.D.D <- 0:7                   #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  if (FALSE) { #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEMcGBB(x=No.D.D,freq=Obs.fre.1,a=0.1,b=0.1,c=0.2)  bbmle::coef(parameters)         #extracting the parameters         }"},{"path":"/reference/EstMLEMultiBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"function estimate probability success theta parameter using maximum log likelihood method Multiplicative Binomial distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLEMultiBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"","code":"EstMLEMultiBin(x,freq,p,theta,...)"},{"path":"/reference/EstMLEMultiBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. theta single value theta parameter. ... mle2 function inputs except data estimating parameter.","code":""},{"path":"/reference/EstMLEMultiBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"EstMLEMultiBin used wrapper mle2 function bbmle package therefore output class mle2.","code":""},{"path":"/reference/EstMLEMultiBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$0 < theta $$","code":""},{"path":"/reference/EstMLEMultiBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  .","code":""},{"path":[]},{"path":"/reference/EstMLEMultiBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the probability of success and theta for Multiplicative Binomial\r\nDistribution — EstMLEMultiBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)    #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEMultiBin(x=No.D.D,freq=Obs.fre.1,p=0.5,theta=15)  bbmle::coef(parameters)           #extracting the parameters #>         p     theta  #> 0.5127016 0.7060526"},{"path":"/reference/EstMLETriBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"function estimate mode value using maximum log likelihood method Triangular Binomial Distribution binomial random variables corresponding frequencies given.","code":""},{"path":"/reference/EstMLETriBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"","code":"EstMLETriBin(x,freq)"},{"path":"/reference/EstMLETriBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"x vector binomial random variables. freq vector frequencies.","code":""},{"path":"/reference/EstMLETriBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"output EstMLETriBin produce classes ml mlTB format consisting min  Negative log likelihood value. mode  Estimated mode value. AIC   AIC value. call inputs function. Methods print, summary, coef AIC can used extract specific outputs.","code":""},{"path":"/reference/EstMLETriBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"$$0 < mode=c < 1$$ $$x = 0,1,2,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error  messages provided go .","code":""},{"path":"/reference/EstMLETriBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2 . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299 .","code":""},{"path":"/reference/EstMLETriBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating the mode value for Triangular Binomial Distribution — EstMLETriBin","text":"","code":"No.D.D <- 0:7   #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  if (FALSE) { #estimating the mode value and extracting the mode value results <- EstMLETriBin(No.D.D,Obs.fre.1)  # extract the mode value and summary coef(results) summary(results)  AIC(results)  #show the AIC value         }"},{"path":"/reference/Exam_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Exam Data — Exam_data","title":"Exam Data — Exam_data","text":"examination, 9 questions set particular topic. question marked total 20 assessing final class candidate, particular attention paid total number questions \"alpha\", .e., least 15 20, well total number marks. number alpha's rough indication \"quality\" exam performance. Thus, distribution alpha's candidates interest. 209 candidates attempting questions section 9 questions total 326 alpha's awarded. treat 9 \"litter size\", dichotomous response whether got alpha question.","code":""},{"path":"/reference/Exam_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exam Data — Exam_data","text":"","code":"Exam_data"},{"path":"/reference/Exam_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exam Data — Exam_data","text":"data frame 2 columns 10 rows ..alpha Alphas fre Observed frequencies","code":""},{"path":"/reference/Exam_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Exam Data — Exam_data","text":"Extracted Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990","code":""},{"path":"/reference/Exam_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exam Data — Exam_data","text":"","code":"Exam_data$No.of.alpha              #extracting the binomial random variables #>  [1] 0 1 2 3 4 5 6 7 8 9 sum(Exam_data$fre)                 #summing all the frequencies #> [1] 209"},{"path":"/reference/fitAddBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"function fit Additive Binomial distribution random variables, corresponding frequencies, probability success alpha given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom value can seen distribution fits data.","code":""},{"path":"/reference/fitAddBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"","code":"fitAddBin(x,obs.freq,p,alpha)"},{"path":"/reference/fitAddBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"x vector binomial random variables. obs.freq vector frequencies. p single value probability success. alpha single value alpha.","code":""},{"path":"/reference/fitAddBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"output fitAddBin gives class format fitAB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitAB fitted probability values dAddBin. NegLL Negative Log Likelihood value. p estimated probability value. alpha estimated alpha parameter value. AIC AIC value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitAddBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"$$obs.freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$-1 < alpha < 1$$","code":""},{"path":"/reference/fitAddBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/fitAddBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Additive Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and alpha are given — fitAddBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)            #assigning the corresponding the frequencies  if (FALSE) { #assigning the estimated probability value paddbin <- EstMLEAddBin(No.D.D,Obs.fre.1)$p  #assigning the estimated alpha value alphaaddbin <- EstMLEAddBin(No.D.D,Obs.fre.1)$alpha  #fitting when the random variable,frequencies,probability and alpha are given results <- fitAddBin(No.D.D,Obs.fre.1,paddbin,alphaaddbin) results  #extracting the AIC value AIC(results)  #extract fitted values fitted(results)        }"},{"path":"/reference/fitBetaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"function fit Beta-Binomial distribution random variables, corresponding frequencies shape parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitBetaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"","code":"fitBetaBin(x,obs.freq,a,b)"},{"path":"/reference/fitBetaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"x vector binomial random variables. obs.freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/fitBetaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"output fitBetaBin gives class format fitBB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitBB fitted values dBetaBin. NegLL Negative Log Likelihood value. estimated value alpha parameter . b estimated value alpha parameter b. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitBetaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"$$0 < ,b$$ $$x = 0,1,2,...,n$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitBetaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"Young-Xu, Y. & Chan, K.., 2008. Pooling overdispersed binomial data estimate event rate. BMC medical research methodology, 8(1), p.58. Available : doi: 10.1186/1471-2288-8-58 . Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759. Available : doi: 10.1094/PHYTO-83-759","code":""},{"path":[]},{"path":"/reference/fitBetaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Beta-Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b are given — fitBetaBin","text":"","code":"No.D.D <- 0:7    #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEBetaBin(No.D.D,Obs.fre.1,0.1,0.1)  bbmle::coef(parameters)   #extracting the parameters a and b #>         a         b  #> 0.7229420 0.5808483  aBetaBin <- bbmle::coef(parameters)[1]  #assigning the parameter a bBetaBin <- bbmle::coef(parameters)[2]  #assigning the parameter b  #fitting when the random variable,frequencies,shape parameter values are given. fitBetaBin(No.D.D,Obs.fre.1,aBetaBin,bBetaBin) #> Call:  #> fitBetaBin(x = No.D.D, obs.freq = Obs.fre.1, a = aBetaBin, b = bBetaBin) #>  #> Chi-squared test for Beta-Binomial Distribution  #> \t #>           Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>           expected Frequency :  54.62 42 38.9 38.54 40.07 44 53.09 87.78  #> \t #>           estimated a parameter : 0.722942   ,estimated b parameter : 0.5808483  #> \t #>           X-squared : 9.5171   ,df : 5   ,p-value : 0.0901  #> \t #>           over dispersion : 0.4340673   #estimating the parameters using moment generating function methods results <- EstMGFBetaBin(No.D.D,Obs.fre.1) results #> Call:  #> EstMGFBetaBin(x = No.D.D, freq = Obs.fre.1) #>  #> Coefficients:  #>         a         b  #> 0.7161628 0.5963324   aBetaBin1 <- results$a  #assigning the estimated a bBetaBin1 <- results$b  #assigning the estimated b  #fitting when the random variable,frequencies,shape parameter values are given. BB <- fitBetaBin(No.D.D,Obs.fre.1,aBetaBin1,bBetaBin1)  #extracting the expected frequencies fitted(BB) #> [1] 56.60 43.01 39.57 38.97 40.27 43.89 52.39 84.29  #extracting the residuals residuals(BB) #> [1]  -9.60  10.99   3.43   1.03  -0.27  -2.89 -13.39  10.71"},{"path":"/reference/fitBetaCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"function fit Beta-Correlated Binomial Distribution random variables, corresponding frequencies, covariance, alpha beta parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom can seen distribution fits data.","code":""},{"path":"/reference/fitBetaCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"","code":"fitBetaCorrBin(x,obs.freq,cov,a,b)"},{"path":"/reference/fitBetaCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"x vector binomial random variables. obs.freq vector frequencies. cov single value covariance. single value alpha parameter. b single value beta parameter.","code":""},{"path":"/reference/fitBetaCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"output fitBetaCorrBin gives class format fitBCB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic corr    Correlation value. fitBCB fitted probability values dBetaCorrBin. NegLL Negative Log Likelihood value. estimated shape parameter value . b estimated shape parameter value b. cov estimated covariance value. AIC AIC value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitBetaCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"$$obs.freq \\ge 0$$ $$x = 0,1,2,..$$ $$-\\infty < cov < +\\infty$$ $$0 < ,b$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitBetaCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  .","code":""},{"path":"/reference/fitBetaCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Beta-Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, covariance, alpha and beta parameters are given — fitBetaCorrBin","text":"","code":"No.D.D <- 0:7                    #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)      #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEBetaCorrBin(x=No.D.D,freq=Obs.fre.1,cov=0.0050,a=10,b=10)  covBetaCorrBin <- bbmle::coef(parameters)[1] aBetaCorrBin <- bbmle::coef(parameters)[2] bBetaCorrBin <- bbmle::coef(parameters)[3]  #fitting when the random variable,frequencies,covariance, a and b are given results <- fitBetaCorrBin(No.D.D,Obs.fre.1,covBetaCorrBin,aBetaCorrBin,bBetaCorrBin) results #> Call:  #> fitBetaCorrBin(x = No.D.D, obs.freq = Obs.fre.1, cov = covBetaCorrBin,  #>     a = aBetaCorrBin, b = bBetaCorrBin) #>  #> Chi-squared test for Beta-Correlated Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  48.71 47.41 45.42 43.16 39.81 36.91 42.44 95.14  #> \t #>       estimated covariance value: 0.07068406  #> \t #>       estimated a parameter : 3.199448  , estimated b parameter : 2.632928  #> \t #>       X-squared : 2.0695   ,df : 4   ,p-value : 0.723   #extract AIC value AIC(results) #> [1] 1625.307  #extract fitted values fitted(results) #> [1] 48.71 47.41 45.42 43.16 39.81 36.91 42.44 95.14"},{"path":"/reference/fitBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","title":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","text":"function fit Binomial distribution random variables, corresponding frequencies probability value given. provide expected frequencies, chi-squared test statistics value, p value degree freedom  can seen distribution fits data.","code":""},{"path":"/reference/fitBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","text":"","code":"fitBin(x,obs.freq,p=0)"},{"path":"/reference/fitBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","text":"x vector binomial random variables. obs.freq vector frequencies. p single value probability.","code":""},{"path":"/reference/fitBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","text":"output fitBin gives class format fitB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics value. df degree freedom. p.value probability value chi-squared test statistic. fitB fitted probability values dbinom. phat estimated probability value. call inputs function.","code":""},{"path":"/reference/fitBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","text":"$$x = 0,1,2,...$$ $$0 \\le p \\le 1$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Binomial Distribution when binomial random variable, frequency and probability\r\nvalue are given — fitBin","text":"","code":"No.D.D <- 0:7      #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  #fitting when the random variable,frequencies are given. fitBin(No.D.D,Obs.fre.1) #> Chi-squared approximation may be doubtful because expected frequency is less than 5 #> Call:  #> fitBin(x = No.D.D, obs.freq = Obs.fre.1) #>  #> Chi-squared test for Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  1.59 13.41 48.3 96.68 116.11 83.66 33.49 5.75  #> \t #>       estimated probability value : 0.5456498  #> \t #>       X-squared : 2911.434   ,df : 6   ,p-value : 0"},{"path":"/reference/fitCOMPBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"function fit COM Poisson Binomial Distribution random variables, corresponding frequencies, probability success v parameter given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom can seen distribution fits data.","code":""},{"path":"/reference/fitCOMPBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"","code":"fitCOMPBin(x,obs.freq,p,v)"},{"path":"/reference/fitCOMPBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"x vector binomial random variables. obs.freq vector frequencies. p single value probability success. v single value v.","code":""},{"path":"/reference/fitCOMPBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"output fitCOMPBin gives class format fitCPB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitCPB fitted probability values dCOMPBin. NegLL Negative Log Likelihood value. p estimated probability value. v estimated v parameter value. AIC AIC value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitCOMPBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"$$obs.freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$-\\infty < v < +\\infty$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitCOMPBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"Borges, P., Rodrigues, J., Balakrishnan, N. Bazan, J., 2014. COM-Poisson type generalization binomial distribution properties applications. Statistics & Probability Letters, 87, pp.158-166. Available : doi: 10.1016/j.spl.2014.01.019","code":""},{"path":"/reference/fitCOMPBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the COM Poisson Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and v parameter are given — fitCOMPBin","text":"","code":"No.D.D <- 0:7                    #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)      #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLECOMPBin(x=No.D.D,freq=Obs.fre.1,p=0.5,v=0.050)  pCOMPBin <- bbmle::coef(parameters)[1] vCOMPBin <- bbmle::coef(parameters)[2]  #fitting when the random variable,frequencies,probability and v parameter are given results <- fitCOMPBin(No.D.D,Obs.fre.1,pCOMPBin,vCOMPBin) results #> Call:  #> fitCOMPBin(x = No.D.D, obs.freq = Obs.fre.1, p = pCOMPBin, v = vCOMPBin) #>  #> Chi-squared test for COM Poisson Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  57.21 43.81 38.52 37.28 39.23 44.86 56.47 81.63  #> \t #>       estimated p value : 0.5126926  ,estimated v parameter : -0.1632806  #> \t #>       X-squared : 12.8535   ,df : 5   ,p-value : 0.0248   #extracting the AIC value AIC(results) #> [1] 1634.623  #extract fitted values fitted(results) #> [1] 57.21 43.81 38.52 37.28 39.23 44.86 56.47 81.63"},{"path":"/reference/fitCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"function fit Correlated Binomial Distribution random variables, corresponding frequencies, probability success covariance given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom can seen distribution fits data.","code":""},{"path":"/reference/fitCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"","code":"fitCorrBin(x,obs.freq,p,cov)"},{"path":"/reference/fitCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"x vector binomial random variables. obs.freq vector frequencies. p single value probability success. cov single value covariance.","code":""},{"path":"/reference/fitCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"output fitCorrBin gives class format fitCB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. corr    Correlation value. fitCB fitted probability values dCorrBin. NegLL Negative Log Likelihood value. AIC AIC value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"$$obs.freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$-\\infty < cov < +\\infty$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 . Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/fitCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Correlated Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and covariance are given — fitCorrBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)      #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLECorrBin(x=No.D.D,freq=Obs.fre.1,p=0.5,cov=0.0050)  pCorrBin <- bbmle::coef(parameters)[1] covCorrBin <- bbmle::coef(parameters)[2]  #fitting when the random variable,frequencies,probability and covariance are given results <- fitCorrBin(No.D.D,Obs.fre.1,pCorrBin,covCorrBin) results #> Call:  #> fitCorrBin(x = No.D.D, obs.freq = Obs.fre.1, p = pCorrBin, cov = covCorrBin) #>  #> Chi-squared test for Correlated Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  10.7 50.1 79.85 45.84 24.87 74.29 84.07 29.28  #> \t #>       estimated p value : 0.5469539  ,estimated cov value : 0.05714648  #> \t #>       X-squared : 336.9971   ,df : 5   ,p-value : 0   #extracting the AIC value AIC(results) #> [1] 1857.326  #extract fitted values fitted(results) #> [1] 10.70 50.10 79.85 45.84 24.87 74.29 84.07 29.28"},{"path":"/reference/fitGammaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"function fit Gamma Binomial Distribution random variables, corresponding frequencies shape parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitGammaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"","code":"fitGammaBin(x,obs.freq,c,l)"},{"path":"/reference/fitGammaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"x vector binomial random variables. obs.freq vector frequencies. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/fitGammaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"output fitGammaBin gives class format fitGaB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitMB fitted values dGammaBin. NegLL Negative Log Likelihood value. c estimated value shape parameter c. l estimated value shape parameter l. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitGammaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"$$0 < c,l$$ $$x = 0,1,2,...$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitGammaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/fitGammaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Gamma Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGammaBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)          #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEGammaBin(x=No.D.D,freq=Obs.fre.1,c=0.1,l=0.1)  cGBin <- bbmle::coef(parameters)[1]         #assigning the estimated c lGBin <- bbmle::coef(parameters)[2]         #assigning the estimated l  #fitting when the random variable,frequencies,shape parameter values are given. results <- fitGammaBin(No.D.D,Obs.fre.1,cGBin,lGBin) results #> Call:  #> fitGammaBin(x = No.D.D, obs.freq = Obs.fre.1, c = cGBin, l = lGBin) #>  #> Chi-squared test for Gamma Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  54.59 41.39 38.7 38.71 40.54 44.69 53.79 86.58  #> \t #>       estimated c parameter : 0.6036041   ,estimated l parameter : 0.6030764   #> \t #>       X-squared : 10.6152   ,df : 5   ,p-value : 0.0596  #> \t #>       over dispersion : 0.4308118   #extracting the expected frequencies fitted(results) #> [1] 54.59 41.39 38.70 38.71 40.54 44.69 53.79 86.58  #extracting the residuals residuals(results) #> [1]  -7.59  12.61   4.30   1.29  -0.54  -3.69 -14.79   8.42"},{"path":"/reference/fitGHGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"function fit Gaussian Hypergeometric Generalized Beta Binomial Distribution random variables, corresponding frequencies shape parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitGHGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"","code":"fitGHGBB(x,obs.freq,a,b,c)"},{"path":"/reference/fitGHGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"x vector binomial random variables. obs.freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter lambda representing c.","code":""},{"path":"/reference/fitGHGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"output fitGHGBB gives class format fitGB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitGB fitted values dGHGBB. NegLL Negative Loglikelihood value. estimated value alpha parameter . b estimated value beta parameter b. c estimated value gamma parameter c. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitGHGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"$$0 < ,b,c$$ $$x = 0,1,2,...$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitGHGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/fitGHGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Gaussian Hypergeometric Generalized Beta  Binomial Distribution when binomial\r\nrandom variable, frequency and shape parameters a,b and c are given — fitGHGBB","text":"","code":"No.D.D <- 0:7        #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)       #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEGHGBB(No.D.D,Obs.fre.1,0.1,20,1.3)  bbmle::coef(parameters)         #extracting the parameters #>         a         b         c  #> 1.3507011 0.3245453 0.7005190  aGHGBB <- bbmle::coef(parameters)[1]  #assigning the estimated a bGHGBB <- bbmle::coef(parameters)[2]  #assigning the estimated b cGHGBB <- bbmle::coef(parameters)[3]  #assigning the estimated c  #fitting when the random variable,frequencies,shape parameter values are given. results <- fitGHGBB(No.D.D,Obs.fre.1,aGHGBB,bGHGBB,cGHGBB) results #> Call:  #> fitGHGBB(x = No.D.D, obs.freq = Obs.fre.1, a = aGHGBB, b = bGHGBB,  #>     c = cGHGBB) #>  #> Chi-squared test for Gaussian Hypergeometric Generalized Beta-Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  47.87 50.14 46.52 42.08 38.58 37.32 41.78 94.71  #> \t #>       estimated a parameter : 1.350701   ,estimated b parameter : 0.3245453 , #> \t #>       estimated c parameter : 0.700519  #> \t #>       X-squared : 1.2831   ,df : 4   ,p-value : 0.8642  #> \t #>       over dispersion : 0.4324847   #extracting the expected frequencies fitted(results) #> [1] 47.87 50.14 46.52 42.08 38.58 37.32 41.78 94.71  #extracting the residuals residuals(results) #> [1] -0.87  3.86 -3.52 -2.08  1.42  3.68 -2.78  0.29"},{"path":"/reference/fitGrassiaIIBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"function fit Grassia II Binomial Distribution random variables, corresponding frequencies shape parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitGrassiaIIBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"","code":"fitGrassiaIIBin(x,obs.freq,a,b)"},{"path":"/reference/fitGrassiaIIBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"x vector binomial random variables. obs.freq vector frequencies. single value shape parameter . b single value shape parameter b.","code":""},{"path":"/reference/fitGrassiaIIBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"output fitGrassiaIIBin gives class format fitGrIIB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitGrIIB fitted values dGrassiaIIBin. NegLL Negative Log Likelihood value. estimated value shape parameter . b estimated value shape parameter b. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitGrassiaIIBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"$$0 < ,b$$ $$x = 0,1,2,...$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitGrassiaIIBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/fitGrassiaIIBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Grassia II Binomial distribution when binomial random variable,\r\nfrequency and shape parameters are given — fitGrassiaIIBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)          #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEGrassiaIIBin(x=No.D.D,freq=Obs.fre.1,a=0.1,b=0.1)  aGIIBin <- bbmle::coef(parameters)[1]         #assigning the estimated a bGIIBin <- bbmle::coef(parameters)[2]         #assigning the estimated b  #fitting when the random variable,frequencies,shape parameter values are given. results <- fitGrassiaIIBin(No.D.D,Obs.fre.1,aGIIBin,bGIIBin) results #> Call:  #> fitGrassiaIIBin(x = No.D.D, obs.freq = Obs.fre.1, a = aGIIBin,  #>     b = bGIIBin) #>  #> Chi-squared test for Grassia II Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  55.02 42.36 39.08 38.51 39.78 43.39 52.13 88.74  #> \t #>       estimated a parameter : 0.7285048   ,estimated b parameter : 2.025147   #> \t #>       X-squared : 8.6999   ,df : 5   ,p-value : 0.1216  #> \t #>       over dispersion : 0.2590043   #extracting the expected frequencies fitted(results) #> [1] 55.02 42.36 39.08 38.51 39.78 43.39 52.13 88.74  #extracting the residuals residuals(results) #> [1]  -8.02  11.64   3.92   1.49   0.22  -2.39 -13.13   6.26"},{"path":"/reference/fitKumBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"function fit Kumaraswamy Binomial distribution random variables, corresponding frequencies shape parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitKumBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"","code":"fitKumBin(x,obs.freq,a,b,it)"},{"path":"/reference/fitKumBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"x vector binomial random variables. obs.freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. number iterations converge proper probability function replacing infinity.","code":""},{"path":"/reference/fitKumBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"output fitKumBin gives class format fitKB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitKB fitted values dKumBin. NegLL Negative Log Likelihood value. estimated value alpha parameter . b estimated value beta parameter b. estimated value iterations. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fiited can used extract specific outputs.","code":""},{"path":"/reference/fitKumBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"$$0 < ,b$$ $$x = 0,1,2,...n$$ $$obs.freq \\ge 0$$ $$> 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitKumBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":[]},{"path":"/reference/fitKumBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Kumaraswamy Binomial Distribution when binomial random variable, frequency and shape\r\nparameters a and b, iterations parameter it are given — fitKumBin","text":"","code":"No.D.D <- 0:7   #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  if (FALSE) { #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEKumBin(x=No.D.D,freq=Obs.fre.1,a=10.1,b=1.1,it=10000)  bbmle::coef(parameters)    #extracting the parameters aKumBin <- bbmle::coef(parameters)[1] #assigning the estimated a bKumBin <- bbmle::coef(parameters)[2] #assigning the estimated b itKumBin <- bbmle::coef(parameters)[3] #assigning the estimated iterations  #fitting when the random variable,frequencies,shape parameter values are given. results <- fitKumBin(No.D.D,Obs.fre.1,aKumBin,bKumBin,itKumBin*100) results  #extracting the expected frequencies fitted(results)  #extracting the residuals residuals(results)          }"},{"path":"/reference/fitLMBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"function fit Lovinson Multiplicative Binomial distribution random variables, corresponding frequencies, probability success phi parameter given. provide expected frequencies, chi-squared test statistics value, p value degree freedom  value can seen distribution fits data.","code":""},{"path":"/reference/fitLMBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"","code":"fitLMBin(x,obs.freq,p,phi)"},{"path":"/reference/fitLMBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"x vector binomial random variables. obs.freq vector frequencies. p single value probability success. phi single value phi parameter.","code":""},{"path":"/reference/fitLMBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"output fitLMBin gives class format fitLMB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitLMB fitted probability values dLMBin. NegLL Negative Log Likelihood value. p estimated probability value. phi estimated phi parameter value. AIC AIC value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitLMBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"$$obs.freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$0 < phi $$","code":""},{"path":"/reference/fitLMBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"Elamir, E.., 2013. Multiplicative-Binomial Distribution: Results Characterization, Inference Random Data Generation. Journal Statistical Theory Applications, 12(1), pp.92-105.","code":""},{"path":[]},{"path":"/reference/fitLMBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Lovinson Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitLMBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLELMBin(x=No.D.D,freq=Obs.fre.1,p=0.1,phi=.3)  pLMBin=bbmle::coef(parameters)[1]    #assigning the estimated probability value phiLMBin <- bbmle::coef(parameters)[2]  #assigning the estimated phi value  #fitting when the random variable,frequencies,probability and phi are given results <- fitLMBin(No.D.D,Obs.fre.1,pLMBin,phiLMBin) results #> Call:  #> fitLMBin(x = No.D.D, obs.freq = Obs.fre.1, p = pLMBin, phi = phiLMBin) #>  #> Chi-squared test for Lovinson Multiplicative Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  54.3 49.54 38.86 33.97 35.74 45.26 63.86 77.48  #> \t #>       estimated p value : 0.5126962  ,estimated phi parameter : 0.7060546  #> \t #>       X-squared : 17.4425   ,df : 5   ,p-value : 0.0037   #extracting the AIC value AIC(results) #> [1] 1639.987  #extract fitted values fitted(results) #> [1] 54.30 49.54 38.86 33.97 35.74 45.26 63.86 77.48"},{"path":"/reference/fitMcGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"function fit McDonald Generalized Beta  Binomial Distribution random variables, corresponding frequencies shape parameters given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitMcGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"","code":"fitMcGBB(x,obs.freq,a,b,c)"},{"path":"/reference/fitMcGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"x vector binomial random variables. obs.freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/fitMcGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"output fitMcGBB gives class format fitMB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitMB fitted values dMcGBB. NegLL Negative Log Likelihood value. estimated value alpha parameter . b estimated value beta parameter b. c estimated value gamma parameter c. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitMcGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"$$0 < ,b,c$$ $$x = 0,1,2,...$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitMcGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":[]},{"path":"/reference/fitMcGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the McDonald Generalized Beta  Binomial distribution when binomial\r\nrandom variable, frequency and shape parameters are given — fitMcGBB","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)          #assigning the corresponding frequencies  if (FALSE) { #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEMcGBB(x=No.D.D,freq=Obs.fre.1,a=0.1,b=0.1,c=3.2)  aMcGBB <- bbmle::coef(parameters)[1]         #assigning the estimated a bMcGBB <- bbmle::coef(parameters)[2]         #assigning the estimated b cMcGBB <- bbmle::coef(parameters)[3]         #assigning the estimated c  #fitting when the random variable,frequencies,shape parameter values are given. results <- fitMcGBB(No.D.D,Obs.fre.1,aMcGBB,bMcGBB,cMcGBB) results  #extracting the expected frequencies fitted(results)  #extracting the residuals residuals(results)      }"},{"path":"/reference/fitMultiBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"function fit Multiplicative Binomial distribution random variables, corresponding frequencies, probability success theta parameter given. provide expected frequencies, chi-squared test statistics value, p value degree freedom  value can seen distribution fits data.","code":""},{"path":"/reference/fitMultiBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"","code":"fitMultiBin(x,obs.freq,p,theta)"},{"path":"/reference/fitMultiBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"x vector binomial random variables. obs.freq vector frequencies. p single value probability success. theta single value theta parameter.","code":""},{"path":"/reference/fitMultiBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"output fitMultiBin gives class format fitMuB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics. df degree freedom. p.value probability value chi-squared test statistic. fitMuB fitted probability values dMultiBin. NegLL Negative Log Likelihood value. p estimated probability value. theta estimated theta parameter value. AIC AIC value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitMultiBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"$$obs.freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$0 < theta $$","code":""},{"path":"/reference/fitMultiBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 .","code":""},{"path":[]},{"path":"/reference/fitMultiBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Multiplicative Binomial Distribution when binomial\r\nrandom variable, frequency, probability of success and theta parameter are given — fitMultiBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies  #estimating the parameters using maximum log likelihood value and assigning it parameters <- EstMLEMultiBin(x=No.D.D,freq=Obs.fre.1,p=0.1,theta=.3)  pMultiBin <- bbmle::coef(parameters)[1]    #assigning the estimated probability value thetaMultiBin <- bbmle::coef(parameters)[2]  #assigning the estimated theta value  #fitting when the random variable,frequencies,probability and theta are given results <- fitMultiBin(No.D.D,Obs.fre.1,pMultiBin,thetaMultiBin) results #> Call:  #> fitMultiBin(x = No.D.D, obs.freq = Obs.fre.1, p = pMultiBin,  #>     theta = thetaMultiBin) #>  #> Chi-squared test for Multiplicative Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  54.3 49.54 38.86 33.97 35.74 45.26 63.86 77.48  #> \t #>       estimated p value : 0.5126962  ,estimated theta parameter : 0.7060546  #> \t #>       X-squared : 17.4425   ,df : 5   ,p-value : 0.0037   #extracting the AIC value AIC(results) #> [1] 1639.987  #extract fitted values fitted(results) #> [1] 54.30 49.54 38.86 33.97 35.74 45.26 63.86 77.48"},{"path":"/reference/fitTriBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"function fit Triangular Binomial distribution random variables, corresponding frequencies mode parameter given. provide expected frequencies, chi-squared test statistics value, p value, degree freedom dispersion value can seen distribution fits data.","code":""},{"path":"/reference/fitTriBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"","code":"fitTriBin(x,obs.freq,mode)"},{"path":"/reference/fitTriBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"x vector binomial random variables. obs.freq vector frequencies. mode single value mode.","code":""},{"path":"/reference/fitTriBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"output fitTriBin gives class format fitTB fit consisting list bin.ran.var binomial random variables. obs.freq corresponding observed frequencies. exp.freq corresponding expected frequencies. statistic chi-squared test statistics value. df degree freedom. p.value probability value chi-squared test statistic. fitTB fitted probability values dTriBin. NegLL Negative Log Likelihood value. mode estimated mode value. AIC AIC value. .dis.para dispersion value. call inputs function. Methods summary, print, AIC, residuals fitted can used extract specific outputs.","code":""},{"path":"/reference/fitTriBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"$$0 < mode=c < 1$$ $$x = 0,1,2,...$$ $$0 < mode < 1$$ $$obs.freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/fitTriBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2 . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299 .","code":""},{"path":"/reference/fitTriBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Triangular Binomial Distribution when binomial random variable, frequency and mode\r\nvalue are given — fitTriBin","text":"","code":"No.D.D <- 0:7      #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  modeTriBin <- EstMLETriBin(No.D.D,Obs.fre.1)$mode  #assigning the extracted the mode value  #fitting when the random variable,frequencies,mode value are given. results <- fitTriBin(No.D.D,Obs.fre.1,modeTriBin) results #> Call:  #> fitTriBin(x = No.D.D, obs.freq = Obs.fre.1, mode = modeTriBin) #>  #> Chi-squared test for Triangular Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  11.74 23.47 35.21 46.94 58.66 70.2 79.57 73.21  #> \t #>       estimated Mode value: 0.944444  #> \t #>       X-squared : 193.6159   ,df : 6   ,p-value : 0  #> \t #>       over dispersion : 0.2308269   #extract AIC value AIC(results) #> [1] 1763.233  #extract fitted values fitted(results) #> [1] 11.74 23.47 35.21 46.94 58.66 70.20 79.57 73.21"},{"path":"/reference/Male_Children.html","id":null,"dir":"Reference","previous_headings":"","what":"Male children data — Male_Children","title":"Male children data — Male_Children","text":"number male children among first 12 children family size 13 6115 families taken hospital records nineteenth century Saxony (Sokal & Rohlf(1994), Lindsey (1995), p. 59). thirteenth child ignored assuage effect families non-randomly stopping desired gender reached.","code":""},{"path":"/reference/Male_Children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Male children data — Male_Children","text":"","code":"Male_Children"},{"path":"/reference/Male_Children.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Male children data — Male_Children","text":"data frame 2 columns 13 rows. No_of_Males Male children among first 12 children family size 13 freq Observed frequencies corresponding male children","code":""},{"path":"/reference/Male_Children.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Male children data — Male_Children","text":"Extracted Borges, P., Rodrigues, J., Balakrishnan, N. Bazan, J., 2014. COM-Poisson type generalization binomial distribution properties applications. Statistics & Probability Letters, 87, pp.158-166. Available : doi: 10.1016/j.spl.2014.01.019","code":""},{"path":"/reference/Male_Children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Male children data — Male_Children","text":"","code":"Male_Children$No_of_Males   # extracting the binomial random variables #>  [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 sum(Male_Children$freq)     # summing all the frequencies #> [1] 6115"},{"path":"/reference/mazBETA.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Distribution — mazBETA","title":"Beta Distribution — mazBETA","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Beta Distribution bounded [0,1].","code":""},{"path":"/reference/mazBETA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Distribution — mazBETA","text":"","code":"mazBETA(r,a,b)"},{"path":"/reference/mazBETA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Distribution — mazBETA","text":"r vector moments. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/mazBETA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta Distribution — mazBETA","text":"output mazBETA gives moments zero vector form.","code":""},{"path":"/reference/mazBETA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta Distribution — mazBETA","text":"probability density function cumulative density function unit bounded beta distribution random variable P given $$g_{P}(p)= \\frac{p^{-1}(1-p)^{b-1}}{B(,b)} $$ ;            \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\frac{B_p(,b)}{B(,b)} $$ ;                   \\(0 \\le p \\le 1\\) $$,b > 0$$ mean variance denoted $$E[P]= \\frac{}{+b} $$ $$var[P]= \\frac{ab}{(+b)^2(+b+1)} $$ moments zero denoted $$E[P^r]= \\prod_{=0}^{r-1} (\\frac{+}{+b+}) $$ \\(r = 1,2,3,...\\) Defined \\(B_p(,b)=\\int^p_0 t^{-1} (1-t)^{b-1}\\,dt\\) incomplete beta integrals  \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/mazBETA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta Distribution — mazBETA","text":"Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley. Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 .","code":""},{"path":[]},{"path":"/reference/mazBETA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta Distribution — mazBETA","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,4)) for (i in 1:4) { lines(seq(0,1,by=0.01),dBETA(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dBETA(seq(0,1,by=0.01),2,3)$pdf   #extracting the pdf values #>   [1] 0.000000 0.117612 0.230496 0.338724 0.442368 0.541500 0.636192 0.726516 #>   [9] 0.812544 0.894348 0.972000 1.045572 1.115136 1.180764 1.242528 1.300500 #>  [17] 1.354752 1.405356 1.452384 1.495908 1.536000 1.572732 1.606176 1.636404 #>  [25] 1.663488 1.687500 1.708512 1.726596 1.741824 1.754268 1.764000 1.771092 #>  [33] 1.775616 1.777644 1.777248 1.774500 1.769472 1.762236 1.752864 1.741428 #>  [41] 1.728000 1.712652 1.695456 1.676484 1.655808 1.633500 1.609632 1.584276 #>  [49] 1.557504 1.529388 1.500000 1.469412 1.437696 1.404924 1.371168 1.336500 #>  [57] 1.300992 1.264716 1.227744 1.190148 1.152000 1.113372 1.074336 1.034964 #>  [65] 0.995328 0.955500 0.915552 0.875556 0.835584 0.795708 0.756000 0.716532 #>  [73] 0.677376 0.638604 0.600288 0.562500 0.525312 0.488796 0.453024 0.418068 #>  [81] 0.384000 0.350892 0.318816 0.287844 0.258048 0.229500 0.202272 0.176436 #>  [89] 0.152064 0.129228 0.108000 0.088452 0.070656 0.054684 0.040608 0.028500 #>  [97] 0.018432 0.010476 0.004704 0.001188 0.000000 dBETA(seq(0,1,by=0.01),2,3)$mean  #extracting the mean #> [1] 0.4 dBETA(seq(0,1,by=0.01),2,3)$var   #extracting the variance #> [1] 0.04  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pBETA(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pBETA(seq(0,1,by=0.01),2,3)   #acquiring the cumulative probability values #>   [1] 0.00000000 0.00059203 0.00233648 0.00518643 0.00909568 0.01401875 #>   [7] 0.01991088 0.02672803 0.03442688 0.04296483 0.05230000 0.06239123 #>  [13] 0.07319808 0.08468083 0.09680048 0.10951875 0.12279808 0.13660163 #>  [19] 0.15089328 0.16563763 0.18080000 0.19634643 0.21224368 0.22845923 #>  [25] 0.24496128 0.26171875 0.27870128 0.29587923 0.31322368 0.33070643 #>  [31] 0.34830000 0.36597763 0.38371328 0.40148163 0.41925808 0.43701875 #>  [37] 0.45474048 0.47240083 0.48997808 0.50745123 0.52480000 0.54200483 #>  [43] 0.55904688 0.57590803 0.59257088 0.60901875 0.62523568 0.64120643 #>  [49] 0.65691648 0.67235203 0.68750000 0.70234803 0.71688448 0.73109843 #>  [55] 0.74497968 0.75851875 0.77170688 0.78453603 0.79699888 0.80908883 #>  [61] 0.82080000 0.83212723 0.84306608 0.85361283 0.86376448 0.87351875 #>  [67] 0.88287408 0.89182963 0.90038528 0.90854163 0.91630000 0.92366243 #>  [73] 0.93063168 0.93721123 0.94340528 0.94921875 0.95465728 0.95972723 #>  [79] 0.96443568 0.96879043 0.97280000 0.97647363 0.97982128 0.98285363 #>  [85] 0.98558208 0.98801875 0.99017648 0.99206883 0.99371008 0.99511523 #>  [91] 0.99630000 0.99728083 0.99807488 0.99870003 0.99917488 0.99951875 #>  [97] 0.99975168 0.99989443 0.99996848 0.99999603 1.00000000 mazBETA(1.4,3,2)              #acquiring the moment about zero values #> [1] 0.6 mazBETA(2,3,2)-mazBETA(1,3,2)^2 #acquiring the variance for a=3,b=2 #> [1] 0.04  #only the integer value of moments is taken here because moments cannot be decimal mazBETA(1.9,5.5,6) #> [1] 0.4782609"},{"path":"/reference/mazGAMMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Distribution — mazGAMMA","title":"Gamma Distribution — mazGAMMA","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Gamma Distribution bounded [0,1].","code":""},{"path":"/reference/mazGAMMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Distribution — mazGAMMA","text":"","code":"mazGAMMA(r,c,l)"},{"path":"/reference/mazGAMMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Distribution — mazGAMMA","text":"r vector moments. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/mazGAMMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma Distribution — mazGAMMA","text":"output mazGAMMA gives moments zero vector form.","code":""},{"path":"/reference/mazGAMMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gamma Distribution — mazGAMMA","text":"probability density function cumulative density function unit bounded Gamma distribution random variable P given $$g_{P}(p) = \\frac{ c^l p^{c-1}}{\\gamma(l)} [ln(1/p)]^{l-1} $$ ;    \\(0 \\le p \\le 1\\) $$G_{P}(p) = \\frac{ Ig(l,cln(1/p))}{\\gamma(l)} $$ ; \\(0 \\le p \\le 1\\) $$l,c > 0$$ mean variance denoted $$E[P] = (\\frac{c}{c+1})^l $$ $$var[P] = (\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l} $$ moments zero denoted $$E[P^r]=(\\frac{c}{c+r})^l $$ \\(r = 1,2,3,...\\) Defined \\(\\gamma(l) \\) gamma function. Defined \\(Ig(l,cln(1/p))= \\int_0^{cln(1/p)} t^{l-1} e^{-t}dt \\) Lower incomplete gamma function. NOTE : input parameters given domain  conditions necessary error messages provided go .","code":""},{"path":"/reference/mazGAMMA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gamma Distribution — mazGAMMA","text":"Olshen, . C. Transformations Pearson Type III Distribution. Ann. Math. Statist. 9 (1938), . 3, 176--200.","code":""},{"path":[]},{"path":"/reference/mazGAMMA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma Distribution — mazGAMMA","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,4)) for (i in 1:4) { lines(seq(0,1,by=0.01),dGAMMA(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dGAMMA(seq(0,1,by=0.01),5,6)$pdf   #extracting the pdf values #>   [1]          NaN 2.696915e-03 1.908823e-02 5.591507e-02 1.151860e-01 #>   [6] 1.963513e-01 2.974469e-01 4.157526e-01 5.481913e-01 6.915796e-01 #>  [11] 8.427858e-01 9.988302e-01 1.156946e+00 1.314613e+00 1.469580e+00 #>  [16] 1.619861e+00 1.763742e+00 1.899766e+00 2.026722e+00 2.143630e+00 #>  [21] 2.249727e+00 2.344447e+00 2.427404e+00 2.498378e+00 2.557294e+00 #>  [26] 2.604211e+00 2.639301e+00 2.662839e+00 2.675188e+00 2.676786e+00 #>  [31] 2.668131e+00 2.649777e+00 2.622316e+00 2.586375e+00 2.542603e+00 #>  [36] 2.491664e+00 2.434233e+00 2.370984e+00 2.302590e+00 2.229714e+00 #>  [41] 2.153006e+00 2.073098e+00 1.990604e+00 1.906109e+00 1.820178e+00 #>  [46] 1.733342e+00 1.646106e+00 1.558942e+00 1.472288e+00 1.386552e+00 #>  [51] 1.302105e+00 1.219288e+00 1.138405e+00 1.059728e+00 9.834979e-01 #>  [56] 9.099206e-01 8.391724e-01 7.713992e-01 7.067177e-01 6.452166e-01 #>  [61] 5.869582e-01 5.319796e-01 4.802945e-01 4.318943e-01 3.867500e-01 #>  [66] 3.448137e-01 3.060204e-01 2.702894e-01 2.375261e-01 2.076239e-01 #>  [71] 1.804654e-01 1.559242e-01 1.338667e-01 1.141532e-01 9.663983e-02 #>  [76] 8.117977e-02 6.762468e-02 5.582605e-02 4.563641e-02 3.691057e-02 #>  [81] 2.950669e-02 2.328725e-02 1.812007e-02 1.387906e-02 1.044499e-02 #>  [86] 7.706093e-03 5.558644e-03 3.907329e-03 2.665574e-03 1.755734e-03 #>  [91] 1.109170e-03 6.662063e-04 3.759598e-04 1.960545e-04 9.220202e-05 #>  [96] 3.765617e-05 1.253703e-05 3.022169e-06 4.041950e-07 1.282574e-08 #> [101] 0.000000e+00 dGAMMA(seq(0,1,by=0.01),5,6)$mean  #extracting the mean #> [1] 0.334898 dGAMMA(seq(0,1,by=0.01),5,6)$var   #extracting the variance #> [1] 0.02065365  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pGAMMA(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pGAMMA(seq(0,1,by=0.01),5,6)   #acquiring the cumulative probability values #>   [1] 1.000000e+00 9.999932e-01 9.998995e-01 9.995428e-01 9.987061e-01 #>   [6] 9.971660e-01 9.947125e-01 9.911596e-01 9.863504e-01 9.801593e-01 #>  [11] 9.724927e-01 9.632875e-01 9.525092e-01 9.401501e-01 9.262260e-01 #>  [16] 9.107741e-01 8.938501e-01 8.755255e-01 8.558851e-01 8.350246e-01 #>  [21] 8.130485e-01 7.900680e-01 7.661988e-01 7.415599e-01 7.162715e-01 #>  [26] 6.904540e-01 6.642267e-01 6.377065e-01 6.110072e-01 5.842386e-01 #>  [31] 5.575057e-01 5.309083e-01 5.045405e-01 4.784902e-01 4.528391e-01 #>  [36] 4.276621e-01 4.030274e-01 3.789968e-01 3.556249e-01 3.329599e-01 #>  [41] 3.110434e-01 2.899105e-01 2.695901e-01 2.501051e-01 2.314727e-01 #>  [46] 2.137045e-01 1.968071e-01 1.807821e-01 1.656266e-01 1.513333e-01 #>  [51] 1.378913e-01 1.252858e-01 1.134990e-01 1.025103e-01 9.229632e-02 #>  [56] 8.283152e-02 7.408848e-02 6.603815e-02 5.865018e-02 5.189319e-02 #>  [61] 4.573504e-02 4.014309e-02 3.508447e-02 3.052625e-02 2.643573e-02 #>  [66] 2.278056e-02 1.952897e-02 1.664994e-02 1.411329e-02 1.188988e-02 #>  [71] 9.951666e-03 8.271845e-03 6.824902e-03 5.586697e-03 4.534504e-03 #>  [76] 3.647056e-03 2.904559e-03 2.288707e-03 1.782675e-03 1.371100e-03 #>  [81] 1.040057e-03 7.770188e-04 5.708055e-04 4.115309e-04 2.905353e-04 #>  [86] 2.003148e-04 1.344429e-04 8.748908e-05 5.493214e-05 3.307222e-05 #>  [91] 1.894087e-05 1.021113e-05 5.108634e-06 2.325028e-06 9.348735e-07 #>  [96] 3.173967e-07 8.433588e-08 1.521193e-08 1.353245e-09 2.142264e-11 #> [101] 0.000000e+00 mazGAMMA(1.4,5,6)              #acquiring the moment about zero values #> [1] 0.334898 mazGAMMA(2,5,6)-mazGAMMA(1,5,6)^2 #acquiring the variance for a=5,b=6 #> [1] 0.02065365  #only the integer value of moments is taken here because moments cannot be decimal mazGAMMA(1.9,5.5,6) #> [1] 0.3670253"},{"path":"/reference/mazGBeta1.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Beta Type-1 Distribution — mazGBeta1","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Generalized Beta Type-1 Distribution bounded [0,1].","code":""},{"path":"/reference/mazGBeta1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"","code":"mazGBeta1(r,a,b,c)"},{"path":"/reference/mazGBeta1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"r vector moments single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/mazGBeta1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"output mazGBeta1 gives moments zero vector form.","code":""},{"path":"/reference/mazGBeta1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"probability density function cumulative density function unit bounded Generalized Beta Type-1 Distribution random variable P given $$g_{P}(p)= \\frac{c}{B(,b)} p^{ac-1} (1-p^c)^{b-1} $$;      \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\frac{p^{ac}}{aB(,b)}  2F1(,1-b;p^c;+1) $$    \\(0 \\le p \\le 1\\) $$,b,c > 0$$ mean variance denoted $$E[P]= \\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})} $$ $$var[P]= \\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2 $$ moments zero denoted $$E[P^r]= \\frac{B(+b,\\frac{r}{c})}{B(,\\frac{r}{c})} $$ \\(r = 1,2,3,....\\) Defined \\(B(,b)\\) Beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/mazGBeta1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":"/reference/mazGBeta1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Beta Type-1 Distribution — mazGBeta1","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(.1,.2,.3,1.5,2.15) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,10)) for (i in 1:5) { lines(seq(0,1,by=0.001),dGBeta1(seq(0,1,by=0.001),a[i],1,2*a[i])$pdf,col = col[i]) }   dGBeta1(seq(0,1,by=0.01),2,3,1)$pdf    #extracting the pdf values #>   [1] 0.000000 0.117612 0.230496 0.338724 0.442368 0.541500 0.636192 0.726516 #>   [9] 0.812544 0.894348 0.972000 1.045572 1.115136 1.180764 1.242528 1.300500 #>  [17] 1.354752 1.405356 1.452384 1.495908 1.536000 1.572732 1.606176 1.636404 #>  [25] 1.663488 1.687500 1.708512 1.726596 1.741824 1.754268 1.764000 1.771092 #>  [33] 1.775616 1.777644 1.777248 1.774500 1.769472 1.762236 1.752864 1.741428 #>  [41] 1.728000 1.712652 1.695456 1.676484 1.655808 1.633500 1.609632 1.584276 #>  [49] 1.557504 1.529388 1.500000 1.469412 1.437696 1.404924 1.371168 1.336500 #>  [57] 1.300992 1.264716 1.227744 1.190148 1.152000 1.113372 1.074336 1.034964 #>  [65] 0.995328 0.955500 0.915552 0.875556 0.835584 0.795708 0.756000 0.716532 #>  [73] 0.677376 0.638604 0.600288 0.562500 0.525312 0.488796 0.453024 0.418068 #>  [81] 0.384000 0.350892 0.318816 0.287844 0.258048 0.229500 0.202272 0.176436 #>  [89] 0.152064 0.129228 0.108000 0.088452 0.070656 0.054684 0.040608 0.028500 #>  [97] 0.018432 0.010476 0.004704 0.001188 0.000000 dGBeta1(seq(0,1,by=0.01),2,3,1)$mean   #extracting the mean #> [1] 0.4 dGBeta1(seq(0,1,by=0.01),2,3,1)$var    #extracting the variance #> [1] 0.04  pGBeta1(0.04,2,3,4)        #acquiring the cdf values for a=2,b=3,c=4 #> [1] 0.0006451179 mazGBeta1(1.4,3,2,2)              #acquiring the moment about zero values #> [1] 0.7619048 mazGBeta1(2,3,2,2)-mazGBeta1(1,3,2,2)^2        #acquiring the variance for a=3,b=2,c=2 #> [1] 0.01950113  #only the integer value of moments is taken here because moments cannot be decimal mazGBeta1(3.2,3,2,2) #> [1] 0.4848485"},{"path":"/reference/mazGHGBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Gaussian Hypergeometric Generalized Beta distribution bounded [0,1].","code":""},{"path":"/reference/mazGHGBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"","code":"mazGHGBeta(r,n,a,b,c)"},{"path":"/reference/mazGHGBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"r vector moments. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter lambda representing c.","code":""},{"path":"/reference/mazGHGBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"output mazGHGBeta give moments zero vector form.","code":""},{"path":"/reference/mazGHGBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"probability density function cumulative density function unit bounded Gaussian Hypergeometric Generalized Beta Distribution random variable P given $$g_{P}(p)= \\frac{1}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1} \\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} $$; \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\int^p_0 \\frac{1}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} t^{-1}(1-t)^{b-1}\\frac{c^{b+n}}{(c+(1-c)t)^{+b+n}} \\,dt $$ ; \\(0 \\le p \\le 1\\) $$,b,c > 0$$ $$n = 1,2,3,...$$ mean variance denoted $$E[P]= \\int^1_0 \\frac{p}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp $$ $$var[P]= \\int^1_0 \\frac{p^2}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp - (E[p])^2$$ moments zero denoted $$E[P^r]= \\int^1_0 \\frac{p^r}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp$$ \\(r = 1,2,3,...\\) Defined \\(B(,b)\\) beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/mazGHGBeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/mazGHGBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian Hypergeometric Generalized Beta Distribution — mazGHGBeta","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(.1,.2,.3,1.5,2.15) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,10)) for (i in 1:5) { lines(seq(0,1,by=0.001),dGHGBeta(seq(0,1,by=0.001),7,1+a[i],0.3,1+a[i])$pdf,col = col[i]) }   dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$pdf   #extracting the pdf values #>   [1] 0.0000000 0.3509262 0.5228737 0.6498913 0.7501031 0.8314439 0.8984165 #>   [8] 0.9539442 1.0000887 1.0383876 1.0700333 1.0959788 1.1170022 1.1337505 #>  [15] 1.1467690 1.1565225 1.1634108 1.1677804 1.1699335 1.1701354 1.1686196 #>  [22] 1.1655927 1.1612380 1.1557188 1.1491806 1.1417536 1.1335546 1.1246883 #>  [29] 1.1152486 1.1053204 1.0949799 1.0842960 1.0733307 1.0621401 1.0507751 #>  [36] 1.0392813 1.0277005 1.0160703 1.0044248 0.9927948 0.9812086 0.9696918 #>  [43] 0.9582674 0.9469569 0.9357794 0.9247528 0.9138932 0.9032156 0.8927339 #>  [50] 0.8824609 0.8724086 0.8625882 0.8530105 0.8436855 0.8346233 0.8258333 #>  [57] 0.8173251 0.8091080 0.8011917 0.7935860 0.7863010 0.7793473 0.7727362 #>  [64] 0.7664797 0.7605909 0.7550840 0.7499744 0.7452794 0.7410182 0.7372121 #>  [71] 0.7338851 0.7310645 0.7287810 0.7270699 0.7259715 0.7255322 0.7258059 #>  [78] 0.7268551 0.7287532 0.7315867 0.7354580 0.7404897 0.7468297 0.7546578 #>  [85] 0.7641951 0.7757165 0.7895686 0.8061949 0.8261722 0.8502673 0.8795219 #>  [92] 0.9153933 0.9599887 1.0164861 1.0899378 1.1889502 1.3296336 1.5465948 #>  [99] 1.9327387 2.8776352       Inf dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$mean  #extracting the mean #> [1] 0.5279419 dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$var   #extracting the variance #> [1] 0.09648382  #plotting the random variables and cumulative probability values col <- rainbow(6) a <- c(.1,.2,.3,1.5,2.1,3) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:6) { lines(seq(0.01,1,by=0.001),pGHGBeta(seq(0.01,1,by=0.001),7,1+a[i],0.3,1+a[i]),col=col[i]) }   pGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659) #acquiring the cumulative probability values #>   [1] 0.000000000 0.002183554 0.006603937 0.012495083 0.019513343 0.027434627 #>   [7] 0.036094544 0.045364862 0.055142153 0.065340545 0.075887778 0.086722256 #>  [13] 0.097790990 0.109048005 0.120453512 0.131972520 0.143574429 0.155232357 #>  [19] 0.166922664 0.178624540 0.190319663 0.201991911 0.213627107 0.225212805 #>  [25] 0.236738102 0.248193470 0.259570533 0.270862265 0.282062393 0.293165615 #>  [31] 0.304167434 0.315064076 0.325852422 0.336529945 0.347094650 0.357545024 #>  [37] 0.367879993 0.378098877 0.388201355 0.398187430 0.408057404 0.417811841 #>  [43] 0.427451554 0.436977576 0.446391143 0.455693674 0.464886762 0.473972152 #>  [49] 0.482951735 0.491827534 0.500601696 0.509276404 0.517854193 0.526337459 #>  [55] 0.534728782 0.543030835 0.551246389 0.559378309 0.567429555 0.575403182 #>  [61] 0.583302347 0.591130309 0.598890438 0.606586219 0.614221261 0.621799313 #>  [67] 0.629324268 0.636800185 0.644231304 0.651622068 0.658977145 0.666301461 #>  [73] 0.673600228 0.680878991 0.688143671 0.695400620 0.702656694 0.709919325 #>  [79] 0.717196627 0.724497509 0.731831821 0.739210537 0.746645976 0.754152090 #>  [85] 0.761744827 0.769442602 0.777266920 0.785243211 0.793401970 0.801780355 #>  [91] 0.810424473 0.819392782 0.828761308 0.838632034 0.849147177 0.860515236 #>  [97] 0.873063293 0.887356913 0.904538189 0.927708021 1.000002698 mazGHGBeta(1.4,7,1.6312,0.3913,0.6659)            #acquiring the moment about zero values #> [1] 0.5279419  #acquiring the variance for a=1.6312,b=0.3913,c=0.6659 mazGHGBeta(2,7,1.6312,0.3913,0.6659)-mazGHGBeta(1,7,1.6312,0.3913,0.6659)^2 #> [1] 0.09648382  #only the integer value of moments is taken here because moments cannot be decimal mazGHGBeta(1.9,15,5,6,1) #> [1] 0.4545455"},{"path":"/reference/mazKUM.html","id":null,"dir":"Reference","previous_headings":"","what":"Kumaraswamy Distribution — mazKUM","title":"Kumaraswamy Distribution — mazKUM","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Kumaraswamy Distribution bounded [0,1].","code":""},{"path":"/reference/mazKUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kumaraswamy Distribution — mazKUM","text":"","code":"mazKUM(r,a,b)"},{"path":"/reference/mazKUM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kumaraswamy Distribution — mazKUM","text":"r vector moments. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/mazKUM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kumaraswamy Distribution — mazKUM","text":"output mazKUM gives moments zero vector form.","code":""},{"path":"/reference/mazKUM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kumaraswamy Distribution — mazKUM","text":"probability density function cumulative density function unit bounded Kumaraswamy Distribution random variable P given $$g_{P}(p)= abp^{-1}(1-p^)^{b-1} $$ ;        \\(0 \\le p \\le 1\\) $$G_{P}(p)= 1-(1-p^)^b$$ ;                   \\(0 \\le p \\le 1\\) $$,b > 0$$ mean variance denoted $$E[P]= bB(1+\\frac{1}{},b)$$ $$var[P]= bB(1+\\frac{2}{},b)-(bB(1+\\frac{1}{},b))^2$$ moments zero denoted $$E[P^r]= bB(1+\\frac{r}{},b)$$ \\(r = 1,2,3,...\\) Defined \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/mazKUM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kumaraswamy Distribution — mazKUM","text":"Kumaraswamy, P. (1980). generalized probability density function double-bounded random processes. Journal Hydrology, 46(1), 79-88. Available : doi: 10.1016/0022-1694(80)90036-0 . Jones, M. C. (2009). Kumaraswamy's distribution: beta-type distribution tractability advantages. Statistical Methodology, 6(1), 70-81. Available : doi: 10.1016/j.stamet.2008.04.001 .","code":""},{"path":[]},{"path":"/reference/mazKUM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kumaraswamy Distribution — mazKUM","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,6)) for (i in 1:4) { lines(seq(0,1,by=0.01),dKUM(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dKUM(seq(0,1,by=0.01),2,3)$pdf   #extracting the probability values #>   [1] 0.000000000 0.059988001 0.119904019 0.179676146 0.239232614 0.298501875 #>   [7] 0.357412666 0.415894084 0.473875661 0.531287429 0.588060000 0.644124631 #>  [13] 0.699413299 0.753858776 0.807394694 0.859955625 0.911477146 0.961895914 #>  [19] 1.011149741 1.059177659 1.105920000 1.151318461 1.195316179 1.237857806 #>  [25] 1.278889574 1.318359375 1.356216826 1.392413344 1.426902221 1.459638689 #>  [31] 1.490580000 1.519685491 1.546916659 1.572237236 1.595613254 1.617013125 #>  [37] 1.636407706 1.653770374 1.669077101 1.682306519 1.693440000 1.702461721 #>  [43] 1.709358739 1.714121066 1.716741734 1.717216875 1.715545786 1.711731004 #>  [49] 1.705778381 1.697697149 1.687500000 1.675203151 1.660826419 1.644393296 #>  [55] 1.625931014 1.605470625 1.583047066 1.558699234 1.532470061 1.504406579 #>  [61] 1.474560000 1.442985781 1.409743699 1.374897926 1.338517094 1.300674375 #>  [67] 1.261447546 1.220919064 1.179176141 1.136310809 1.092420000 1.047605611 #>  [73] 1.001974579 0.955638956 0.908715974 0.861328125 0.813603226 0.765674494 #>  [79] 0.717680621 0.669765839 0.622080000 0.574778641 0.528023059 0.481980386 #>  [85] 0.436823654 0.392731875 0.349890106 0.308489524 0.268727501 0.230807669 #>  [91] 0.194940000 0.161340871 0.130233139 0.101846216 0.076416134 0.054185625 #>  [97] 0.035404186 0.020328154 0.009220781 0.002352299 0.000000000 dKUM(seq(0,1,by=0.01),2,3)$mean  #extracting the mean #> [1] 0.4571429 dKUM(seq(0,1,by=0.01),2,3)$var   #extracting the variance #> [1] 0.04102041  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pKUM(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pKUM(seq(0,1,by=0.01),2,3)    #acquiring the cumulative probability values #>   [1] 0.000000000 0.000299970 0.001199520 0.002697571 0.004792324 0.007481266 #>   [7] 0.010761167 0.014628088 0.019077382 0.024103701 0.029701000 0.035862542 #>  [13] 0.042580906 0.049847997 0.057655050 0.065992641 0.074850697 0.084218508 #>  [19] 0.094084732 0.104437416 0.115264000 0.126551336 0.138285700 0.150452806 #>  [25] 0.163037823 0.176025391 0.189399636 0.203144190 0.217242210 0.231676393 #>  [31] 0.246429000 0.261481874 0.276816462 0.292413838 0.308254724 0.324319516 #>  [37] 0.340588302 0.357040896 0.373656856 0.390415514 0.407296000 0.424277274 #>  [43] 0.441338152 0.458457333 0.475613434 0.492785016 0.509950617 0.527088785 #>  [49] 0.544178110 0.561197257 0.578125000 0.594940258 0.611622130 0.628149931 #>  [55] 0.644503231 0.660661891 0.676606099 0.692316417 0.707773813 0.722959704 #>  [61] 0.737856000 0.752445144 0.766710156 0.780634672 0.794202997 0.807400141 #>  [67] 0.820211870 0.832624752 0.844626203 0.856204533 0.867349000 0.878049854 #>  [73] 0.888298390 0.898086996 0.907409210 0.916259766 0.924634649 0.932531150 #>  [79] 0.939947921 0.946885026 0.953344000 0.959327906 0.964841391 0.969890743 #>  [85] 0.974483952 0.978630766 0.982342755 0.985633371 0.988518007 0.991014061 #>  [91] 0.993141000 0.994920422 0.996376121 0.997534153 0.998422901 0.999073141 #>  [97] 0.999518110 0.999793575 0.999937901 0.999992119 1.000000000 mazKUM(1.4,3,2)               #acquiring the moment about zero values #> [1] 0.6428571 mazKUM(2,2,3)-mazKUM(1,2,3)^2  #acquiring the variance for a=2,b=3 #> [1] 0.04102041  #only the integer value of moments is taken here because moments cannot be decimal mazKUM(1.9,5.5,6) #> [1] 0.6551253"},{"path":"/reference/mazTRI.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangular Distribution Bounded Between [0,1] — mazTRI","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"functions provide ability generating probability density values, cumulative probability density values moments zero values Triangular Distribution bounded [0,1].","code":""},{"path":"/reference/mazTRI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"","code":"mazTRI(r,mode)"},{"path":"/reference/mazTRI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"r vector moments. mode single value mode.","code":""},{"path":"/reference/mazTRI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"output mazTRI give moments zero vector form.","code":""},{"path":"/reference/mazTRI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"Setting \\(min=0\\) \\(max=1\\) \\(mode=c\\) Triangular distribution unit bounded Triangular distribution can obtained. probability density function cumulative density function unit bounded Triangular distribution random variable P given $$g_{P}(p)= \\frac{2p}{c} $$ ;            \\(0 \\le p < c\\) $$g_{P}(p)= \\frac{2(1-p)}{(1-c)} $$ ;    \\(c \\le p \\le 1\\) $$G_{P}(p)= \\frac{p^2}{c} $$ ;           \\(0 \\le p < c\\) $$G_{P}(p)= 1-\\frac{(1-p)^2}{(1-c)} $$ ; \\(c \\le p \\le 1\\) $$0 \\le mode=c \\le 1$$ mean variance denoted $$E[P]= \\frac{(+b+c)}{3}= \\frac{(1+c)}{3} $$ $$var[P]= \\frac{^2+b^2+c^2-ab-ac-bc}{18}= \\frac{(1+c^2-c)}{18} $$ Moments zero denoted $$E[P^r]= \\frac{2c^{r+2}}{c(r+2)}+\\frac{2(1-c^{r+1})}{(1-c)(r+1)}+\\frac{2(c^{r+2}-1)}{(1-c)(r+2)} $$ \\(r = 1,2,3,...\\) NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/mazTRI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2 . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299  .","code":""},{"path":"/reference/mazTRI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangular Distribution Bounded Between [0,1] — mazTRI","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) x <- seq(0.2,0.8,by=0.2) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\", ylab=\"Probability density values\",xlim = c(0,1),ylim = c(0,3)) for (i in 1:4) { lines(seq(0,1,by=0.01),dTRI(seq(0,1,by=0.01),x[i])$pdf,col = col[i]) }   dTRI(seq(0,1,by=0.05),0.3)$pdf     #extracting the pdf values #>  [1] 0.0000000 0.3333333 0.6666667 1.0000000 1.3333333 1.6666667 2.0000000 #>  [8] 1.8571429 1.7142857 1.5714286 1.4285714 1.2857143 1.1428571 1.0000000 #> [15] 0.8571429 0.7142857 0.5714286 0.4285714 0.2857143 0.1428571 0.0000000 dTRI(seq(0,1,by=0.01),0.3)$mean    #extracting the mean #> [1] 0.4333333 dTRI(seq(0,1,by=0.01),0.3)$var     #extracting the variance #> [1] 0.04388889  #plotting the random variables and cumulative probability values col <- rainbow(4) x <- seq(0.2,0.8,by=0.2) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\", ylab=\"Cumulative density values\",xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pTRI(seq(0,1,by=0.01),x[i]),col = col[i]) }   pTRI(seq(0,1,by=0.05),0.3)      #acquiring the cumulative probability values #>  [1] 0.000000000 0.008333333 0.033333333 0.075000000 0.133333333 0.208333333 #>  [7] 0.300000000 0.396428571 0.485714286 0.567857143 0.642857143 0.710714286 #> [13] 0.771428571 0.825000000 0.871428571 0.910714286 0.942857143 0.967857143 #> [19] 0.985714286 0.996428571 1.000000000 mazTRI(1.4,.3)                  #acquiring the moment about zero values #> [1] 0.4333333 mazTRI(2,.3)-mazTRI(1,.3)^2     #variance for when is mode 0.3 #> [1] 0.04388889  #only the integer value of moments is taken here because moments cannot be decimal mazTRI(1.9,0.5) #> [1] 0.5"},{"path":"/reference/mazUNI.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Distribution Bounded Between [0,1] — mazUNI","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"functions provide ability generating probability density values, cumulative probability density values moments zero values Uniform Distribution bounded [0,1].","code":""},{"path":"/reference/mazUNI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"","code":"mazUNI(r)"},{"path":"/reference/mazUNI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"r vector moments","code":""},{"path":"/reference/mazUNI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"output mazUNI gives moments zero vector form.","code":""},{"path":"/reference/mazUNI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"Setting \\(=0\\) \\(b=1\\) Uniform Distribution unit bounded Uniform Distribution can obtained. probability density function cumulative density function unit bounded Uniform Distribution random variable P given $$g_{P}(p) = 1$$    \\(0 \\le p \\le 1\\) $$G_{P}(p) = p$$    \\(0 \\le p \\le 1\\) mean variance denoted $$E[P]= \\frac{1}{+b}= 0.5$$ $$var[P]= \\frac{(b-)^2}{12}= 0.0833$$ Moments zero denoted $$E[P^r]= \\frac{e^{rb}-e^{ra}}{r(b-)}= \\frac{e^r-1}{r} $$ \\(r = 1,2,3,...\\) NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/mazUNI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley","code":""},{"path":[]},{"path":"/reference/mazUNI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Distribution Bounded Between [0,1] — mazUNI","text":"","code":"#plotting the random variables and probability values plot(seq(0,1,by=0.01),dUNI(seq(0,1,by=0.01))$pdf,type = \"l\",main=\"Probability density graph\", xlab=\"Random variable\",ylab=\"Probability density values\")   dUNI(seq(0,1,by=0.05))$pdf     #extract the pdf values #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 dUNI(seq(0,1,by=0.01))$mean    #extract the mean #> [1] 0.5 dUNI(seq(0,1,by=0.01))$var     #extract the variance #> [1] 0.08333333  #plotting the random variables and cumulative probability values plot(seq(0,1,by=0.01),pUNI(seq(0,1,by=0.01)),type = \"l\",main=\"Cumulative density graph\", xlab=\"Random variable\",ylab=\"Cumulative density values\")   pUNI(seq(0,1,by=0.05))     #acquiring the cumulative probability values #>  [1] 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.35 0.40 0.45 0.50 0.55 0.60 0.65 0.70 #> [16] 0.75 0.80 0.85 0.90 0.95 1.00  mazUNI(c(1,2,3))    #acquiring the moment about zero values #> [1] 0.5000000 0.3333333 0.2500000  #only the integer value of moments is taken here because moments cannot be decimal mazUNI(1.9) #> [1] 0.5"},{"path":"/reference/NegLLAddBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"function calculate negative log likelihood value vector binomial random variable vector corresponding frequencies given input parameters.","code":""},{"path":"/reference/NegLLAddBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"","code":"NegLLAddBin(x,freq,p,alpha)"},{"path":"/reference/NegLLAddBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. alpha single value alpha parameter.","code":""},{"path":"/reference/NegLLAddBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"output NegLLAddBin produce single  numeric value.","code":""},{"path":"/reference/NegLLAddBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$-1 < alpha < 1$$","code":""},{"path":"/reference/NegLLAddBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/NegLLAddBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Additive Binomial distribution — NegLLAddBin","text":"","code":"No.D.D <- 0:7          #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)         #assigning the corresponding frequencies  NegLLAddBin(No.D.D,Obs.fre.1,.5,.03)         #acquiring the negative log likelihood value #> [1] 1128.278"},{"path":"/reference/NegLLBetaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"function calculate Negative Log Likelihood value vector binomial random variables vector corresponding frequencies given shape parameters b.","code":""},{"path":"/reference/NegLLBetaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"","code":"NegLLBetaBin(x,freq,a,b)"},{"path":"/reference/NegLLBetaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/NegLLBetaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"output NegLLBetaBin produce single numeric value.","code":""},{"path":"/reference/NegLLBetaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"$$0 < ,b $$ $$freq \\ge 0$$ $$x = 0,1,2,...$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLBetaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"Young-Xu, Y. & Chan, K.., 2008. Pooling overdispersed binomial data estimate event rate. BMC medical research methodology, 8(1), p.58. Available : doi: 10.1186/1471-2288-8-58 . Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 . Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759. Available : doi: 10.1094/PHYTO-83-759","code":""},{"path":"/reference/NegLLBetaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Beta-Binomial Distribution — NegLLBetaBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  NegLLBetaBin(No.D.D,Obs.fre.1,.3,.4)   #acquiring the negative log likelihood value #> [1] 857.597"},{"path":"/reference/NegLLBetaCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"function calculate negative log likelihood value vector binomial random variables vector corresponding frequencies given input parameters.","code":""},{"path":"/reference/NegLLBetaCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"","code":"NegLLBetaCorrBin(x,freq,cov,a,b)"},{"path":"/reference/NegLLBetaCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"x vector binomial random variables. freq vector frequencies. cov single value covariance. single value alpha parameter. b single value beta parameter.","code":""},{"path":"/reference/NegLLBetaCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"output NegLLBetaCorrBin produce single numeric value.","code":""},{"path":"/reference/NegLLBetaCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$-\\infty < cov < +\\infty$$ $$0 < ,b$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLBetaCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  .","code":""},{"path":"/reference/NegLLBetaCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Beta-Correlated Binomial distribution — NegLLBetaCorrBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)      #assigning the corresponding frequencies  NegLLBetaCorrBin(No.D.D,Obs.fre.1,0.001,9.03,10)     #acquiring the negative log likelihood value #> [1] 1078.399"},{"path":"/reference/NegLLCOMPBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"function calculate negative log likelihood value vector binomial random variables vector corresponding frequencies given input parameters.","code":""},{"path":"/reference/NegLLCOMPBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"","code":"NegLLCOMPBin(x,freq,p,v)"},{"path":"/reference/NegLLCOMPBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. v single value  v.","code":""},{"path":"/reference/NegLLCOMPBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"output NegLLCOMPBin produce single numeric value.","code":""},{"path":"/reference/NegLLCOMPBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$-\\infty < v < +\\infty$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLCOMPBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"Borges, P., Rodrigues, J., Balakrishnan, N. Bazan, J., 2014. COM-Poisson type generalization binomial distribution properties applications. Statistics & Probability Letters, 87, pp.158-166. Available : doi: 10.1016/j.spl.2014.01.019","code":""},{"path":"/reference/NegLLCOMPBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of COM Poisson Binomial distribution — NegLLCOMPBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)      #assigning the corresponding frequencies  NegLLCOMPBin(No.D.D,Obs.fre.1,.5,.03)     #acquiring the negative log likelihood value #> [1] 833.9674"},{"path":"/reference/NegLLCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"function calculate negative log likelihood value vector binomial random variables vector corresponding frequencies given input parameters.","code":""},{"path":"/reference/NegLLCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"","code":"NegLLCorrBin(x,freq,p,cov)"},{"path":"/reference/NegLLCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. cov single value covariance.","code":""},{"path":"/reference/NegLLCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"output NegLLCorrBin produce single numeric value.","code":""},{"path":"/reference/NegLLCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$-\\infty < cov < +\\infty$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990  . Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/NegLLCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Correlated Binomial distribution — NegLLCorrBin","text":"","code":"No.D.D <- 0:7         #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)      #assigning the corresponding frequencies  NegLLCorrBin(No.D.D,Obs.fre.1,.5,.03)     #acquiring the negative log likelihood value #> [1] 994.1944"},{"path":"/reference/NegLLGammaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"function calculate  Negative Log Likelihood value vector binomial random variables vector corresponding frequencies given shape parameters l c.","code":""},{"path":"/reference/NegLLGammaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"","code":"NegLLGammaBin(x,freq,c,l)"},{"path":"/reference/NegLLGammaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"x vector binomial random variables. freq vector frequencies. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/NegLLGammaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"output NegLLGammaBin produce single numeric value.","code":""},{"path":"/reference/NegLLGammaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"$$0 < l,c$$ $$freq \\ge 0$$ $$x = 0,1,2,...$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLGammaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/NegLLGammaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Gamma Binomial Distribution — NegLLGammaBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  NegLLGammaBin(No.D.D,Obs.fre.1,.3,.4)   #acquiring the negative log likelihood value #> [1] 825.7386"},{"path":"/reference/NegLLGHGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"function calculate negative log likelihood value vector binomial random variables vector corresponding frequencies given shape parameters ,b c.","code":""},{"path":"/reference/NegLLGHGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"","code":"NegLLGHGBB(x,freq,a,b,c)"},{"path":"/reference/NegLLGHGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter lambda representing c.","code":""},{"path":"/reference/NegLLGHGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"output NegLLGHGBB produce single numeric value.","code":""},{"path":"/reference/NegLLGHGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"$$0 < ,b,c $$ $$freq \\ge 0$$ $$x = 0,1,2,...$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLGHGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/NegLLGHGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Gaussian Hypergeometric Generalized Beta Binomial Distribution — NegLLGHGBB","text":"","code":"No.D.D <- 0:7                    #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)     #assigning the corresponding frequencies NegLLGHGBB(No.D.D,Obs.fre.1,.2,.3,1)     #acquiring the negative log likelihood value #> [1] 897.6074"},{"path":"/reference/NegLLGrassiaIIBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"function calculate  Negative Log Likelihood value vector binomial random variables vector corresponding frequencies given shape parameters l c.","code":""},{"path":"/reference/NegLLGrassiaIIBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"","code":"NegLLGrassiaIIBin(x,freq,a,b)"},{"path":"/reference/NegLLGrassiaIIBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter . b single value shape parameter b.","code":""},{"path":"/reference/NegLLGrassiaIIBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"output NegLLGrassiaIIBin produce single numeric value.","code":""},{"path":"/reference/NegLLGrassiaIIBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"$$0 < ,b$$ $$freq \\ge 0$$ $$x = 0,1,2,...$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLGrassiaIIBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/NegLLGrassiaIIBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Grassia II Binomial Distribution — NegLLGrassiaIIBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)   #assigning the corresponding frequencies  NegLLGrassiaIIBin(No.D.D,Obs.fre.1,.3,.4)   #acquiring the negative log likelihood value #> [1] 1460.481"},{"path":"/reference/NegLLKumBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"function calculate Negative Log Likelihood value vector binomial random variables vector corresponding frequencies given shape parameters b iterations .","code":""},{"path":"/reference/NegLLKumBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"","code":"NegLLKumBin(x,freq,a,b,it=25000)"},{"path":"/reference/NegLLKumBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. number iterations converge proper probability function replacing infinity.","code":""},{"path":"/reference/NegLLKumBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"output NegLLKumBin produce single numeric value.","code":""},{"path":"/reference/NegLLKumBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"$$0 < ,b $$ $$x = 0,1,2,...$$ $$freq \\ge 0 $$ $$> 0$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/NegLLKumBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":"/reference/NegLLKumBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Kumaraswamy Binomial Distribution — NegLLKumBin","text":"","code":"No.D.D <- 0:7          #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  if (FALSE) { NegLLKumBin(No.D.D,Obs.fre.1,1.3,4.4) #acquiring the negative log likelihood value         }"},{"path":"/reference/NegLLLMBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"function calculate negative log likelihood value vector binomial random variable vector corresponding frequencies given input parameters.","code":""},{"path":"/reference/NegLLLMBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"","code":"NegLLLMBin(x,freq,p,phi)"},{"path":"/reference/NegLLLMBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. phi single value phi parameter.","code":""},{"path":"/reference/NegLLLMBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"output NegLLLMBin produce single numeric value.","code":""},{"path":"/reference/NegLLLMBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$0 < phi $$","code":""},{"path":"/reference/NegLLLMBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"Elamir, E.., 2013. Multiplicative-Binomial Distribution: Results Characterization, Inference Random Data Generation. Journal Statistical Theory Applications, 12(1), pp.92-105.","code":""},{"path":"/reference/NegLLLMBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Lovinson Multiplicative Binomial distribution — NegLLLMBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)    #assigning the corresponding frequencies  NegLLLMBin(No.D.D,Obs.fre.1,.5,3)    #acquiring the negative log likelihood value #> [1] 3669.494"},{"path":"/reference/NegLLMcGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"function calculate negative log likelihood value vector binomial random variables vector corresponding frequencies given shape parameters ,b c.","code":""},{"path":"/reference/NegLLMcGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"","code":"NegLLMcGBB(x,freq,a,b,c)"},{"path":"/reference/NegLLMcGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"x vector binomial random variables. freq vector frequencies. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/NegLLMcGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"output NegLLMcGBB produce single numeric value.","code":""},{"path":"/reference/NegLLMcGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"$$0 < ,b,c $$ $$freq \\ge 0$$ $$x = 0,1,2,...$$","code":""},{"path":"/reference/NegLLMcGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":"/reference/NegLLMcGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of McDonald Generalized Beta  Binomial Distribution — NegLLMcGBB","text":"","code":"No.D.D <- 0:7            #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)    #assigning the corresponding frequencies  NegLLMcGBB(No.D.D,Obs.fre.1,.2,.3,1)    #acquiring the negative log likelihood value #> [1] 897.6074"},{"path":"/reference/NegLLMultiBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"function calculate negative log likelihood value vector binomial random variable vector corresponding frequencies given input parameters.","code":""},{"path":"/reference/NegLLMultiBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"","code":"NegLLMultiBin(x,freq,p,theta)"},{"path":"/reference/NegLLMultiBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"x vector binomial random variables. freq vector frequencies. p single value probability success. theta single value theta parameter.","code":""},{"path":"/reference/NegLLMultiBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"output NegLLMultiBin produce single numeric value.","code":""},{"path":"/reference/NegLLMultiBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"$$freq \\ge 0$$ $$x = 0,1,2,..$$ $$0 < p < 1$$ $$0 < theta $$","code":""},{"path":"/reference/NegLLMultiBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 .","code":""},{"path":"/reference/NegLLMultiBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Multiplicative Binomial distribution — NegLLMultiBin","text":"","code":"No.D.D <- 0:7       #assigning the random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95)    #assigning the corresponding frequencies  NegLLMultiBin(No.D.D,Obs.fre.1,.5,3)    #acquiring the negative log likelihood value #> [1] 3669.494"},{"path":"/reference/NegLLTriBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"function calculate Negative Log Likelihood value vector binomial random variables vector corresponding frequencies given mode value.","code":""},{"path":"/reference/NegLLTriBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"","code":"NegLLTriBin(x,freq,mode)"},{"path":"/reference/NegLLTriBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"x vector binomial random variables. freq vector frequencies. mode single value mode.","code":""},{"path":"/reference/NegLLTriBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"output NegLLTriBin produce single numeric value.","code":""},{"path":"/reference/NegLLTriBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"$$0 < mode=c < 1$$ $$x = 0,1,2,,...$$ $$freq \\ge 0$$ NOTE : input parameters given domain conditions necessary error  messages provided go .","code":""},{"path":"/reference/NegLLTriBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2 . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299 .","code":""},{"path":"/reference/NegLLTriBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log Likelihood value of Triangular Binomial Distribution — NegLLTriBin","text":"","code":"No.D.D <- 0:7    #assigning the Random variables Obs.fre.1 <- c(47,54,43,40,40,41,39,95) #assigning the corresponding frequencies  NegLLTriBin(No.D.D,Obs.fre.1,.023)   #acquiring the Negative log likelihood value #> [1] 953.9621"},{"path":"/reference/Overdispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Overdispersion — Overdispersion","title":"Overdispersion — Overdispersion","text":"fitting distribution using function can extract overdispersion value. function works fitTriBin, fitBetaBin, fitKumBin, fitGHGBB fitMcGBB Binomial Mixture Distributions. Similarly, Alternate Binomial Distributions also support function fitAddBin,fitBetaCorrBin, fitCOMPBin, fitCorrBin fitMultiBin.","code":""},{"path":"/reference/Overdispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overdispersion — Overdispersion","text":"","code":"Overdispersion(object)"},{"path":"/reference/Overdispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overdispersion — Overdispersion","text":"object object one classes fitTB,fitBB,fitKB,fitGB,fitMB.","code":""},{"path":"/reference/Overdispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overdispersion — Overdispersion","text":"output Overdispersion gives single value overdispersion.","code":""},{"path":"/reference/Overdispersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Overdispersion — Overdispersion","text":"Note : objects classes mentioned classes  can used.","code":""},{"path":"/reference/Overdispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overdispersion — Overdispersion","text":"","code":"No.D.D=0:7      #assigning the random variables Obs.fre.1=c(47,54,43,40,40,41,39,95)  #assigning the corresponding frequencies  #estimating mode value for given data results<-EstMLETriBin(No.D.D,Obs.fre.1) results #> Call:  #> .EstMLETriBin(x = x, freq = freq) #>  #> Coefficient : #>     mode  #> 0.944444  mode<-results$mode  #fitting the Triangular Bionomial distribution for estimated parameters TriBin<-fitTriBin(No.D.D,Obs.fre.1,mode) TriBin #> Call:  #> fitTriBin(x = No.D.D, obs.freq = Obs.fre.1, mode = mode) #>  #> Chi-squared test for Triangular Binomial Distribution  #> \t #>       Observed Frequency :  47 54 43 40 40 41 39 95  #> \t #>       expected Frequency :  11.74 23.47 35.21 46.94 58.66 70.2 79.57 73.21  #> \t #>       estimated Mode value: 0.944444  #> \t #>       X-squared : 193.6159   ,df : 6   ,p-value : 0  #> \t #>       over dispersion : 0.2308269   #extracting the overdispersion Overdispersion(TriBin) #> [1] 0.2308269"},{"path":"/reference/pAddBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Additive  Binomial Distribution — pAddBin","title":"Additive  Binomial Distribution — pAddBin","text":"functions provide ability generating probability function values cumulative probability function values Additive Binomial Distribution.","code":""},{"path":"/reference/pAddBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additive  Binomial Distribution — pAddBin","text":"","code":"pAddBin(x,n,p,alpha)"},{"path":"/reference/pAddBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additive  Binomial Distribution — pAddBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. alpha single value alpha parameter.","code":""},{"path":"/reference/pAddBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additive  Binomial Distribution — pAddBin","text":"output pAddBin gives  cumulative probability  values vector form.","code":""},{"path":"/reference/pAddBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Additive  Binomial Distribution — pAddBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{AddBin}(x)= {n \\choose x} p^x (1-p)^{n-x}(\\frac{alpha}{2}(\\frac{x(x-1)}{p}+\\frac{(n-x)(n-x-1)}{(1-p)}-\\frac{alpha n(n-1)}{2})+1)$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$0 < p < 1$$ $$-1 < alpha < 1$$ alpha $$\\frac{-2}{n(n-1)}min(\\frac{p}{1-p},\\frac{1-p}{p}) \\le alpha \\le (\\frac{n+(2p-1)^2}{4p(1-p)})^{-1}$$ mean variance denoted $$E_{Addbin}[x]=np$$ $$Var_{Addbin}[x]=np(1-p)(1+(n-1)alpha)$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pAddBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Additive  Binomial Distribution — pAddBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/pAddBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Additive  Binomial Distribution — pAddBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Additive binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) {   lines(0:10,dAddBin(0:10,10,a[i],b[i])$pdf,col = col[i],lwd=2.85)   points(0:10,dAddBin(0:10,10,a[i],b[i])$pdf,col = col[i],pch=16) }   dAddBin(0:10,10,0.58,0.022)$pdf     #extracting the probability values #>  [1] 0.0004043127 0.0044714100 0.0222003651 0.0660569110 0.1334843019 #>  [6] 0.1973852760 0.2222071562 0.1891753252 0.1143076141 0.0429108652 #> [11] 0.0073964626 dAddBin(0:10,10,0.58,0.022)$mean    #extracting the mean #> [1] 5.8 dAddBin(0:10,10,0.58,0.022)$var     #extracting the variance #> [1] 2.918328  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Additive binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pAddBin(0:10,10,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pAddBin(0:10,10,a[i],b[i]),col = col[i],pch=16) }   pAddBin(0:10,10,0.58,0.022)       #acquiring the cumulative probability values #>  [1] 0.0004043127 0.0048757227 0.0270760878 0.0931329988 0.2266173007 #>  [6] 0.4240025767 0.6462097329 0.8353850581 0.9496926723 0.9926035374 #> [11] 1.0000000000"},{"path":"/reference/pBETA.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Distribution — pBETA","title":"Beta Distribution — pBETA","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Beta Distribution bounded [0,1].","code":""},{"path":"/reference/pBETA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Distribution — pBETA","text":"","code":"pBETA(p,a,b)"},{"path":"/reference/pBETA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Distribution — pBETA","text":"p vector probabilities. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/pBETA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta Distribution — pBETA","text":"output pBETA gives cumulative density values vector form.","code":""},{"path":"/reference/pBETA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta Distribution — pBETA","text":"probability density function cumulative density function unit bounded beta distribution random variable P given $$g_{P}(p)= \\frac{p^{-1}(1-p)^{b-1}}{B(,b)} $$ ;            \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\frac{B_p(,b)}{B(,b)} $$ ;                   \\(0 \\le p \\le 1\\) $$,b > 0$$ mean variance denoted $$E[P]= \\frac{}{+b} $$ $$var[P]= \\frac{ab}{(+b)^2(+b+1)} $$ moments zero denoted $$E[P^r]= \\prod_{=0}^{r-1} (\\frac{+}{+b+}) $$ \\(r = 1,2,3,...\\) Defined \\(B_p(,b)=\\int^p_0 t^{-1} (1-t)^{b-1}\\,dt\\) incomplete beta integrals  \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pBETA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta Distribution — pBETA","text":"Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley. Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 .","code":""},{"path":[]},{"path":"/reference/pBETA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta Distribution — pBETA","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,4)) for (i in 1:4) { lines(seq(0,1,by=0.01),dBETA(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dBETA(seq(0,1,by=0.01),2,3)$pdf   #extracting the pdf values #>   [1] 0.000000 0.117612 0.230496 0.338724 0.442368 0.541500 0.636192 0.726516 #>   [9] 0.812544 0.894348 0.972000 1.045572 1.115136 1.180764 1.242528 1.300500 #>  [17] 1.354752 1.405356 1.452384 1.495908 1.536000 1.572732 1.606176 1.636404 #>  [25] 1.663488 1.687500 1.708512 1.726596 1.741824 1.754268 1.764000 1.771092 #>  [33] 1.775616 1.777644 1.777248 1.774500 1.769472 1.762236 1.752864 1.741428 #>  [41] 1.728000 1.712652 1.695456 1.676484 1.655808 1.633500 1.609632 1.584276 #>  [49] 1.557504 1.529388 1.500000 1.469412 1.437696 1.404924 1.371168 1.336500 #>  [57] 1.300992 1.264716 1.227744 1.190148 1.152000 1.113372 1.074336 1.034964 #>  [65] 0.995328 0.955500 0.915552 0.875556 0.835584 0.795708 0.756000 0.716532 #>  [73] 0.677376 0.638604 0.600288 0.562500 0.525312 0.488796 0.453024 0.418068 #>  [81] 0.384000 0.350892 0.318816 0.287844 0.258048 0.229500 0.202272 0.176436 #>  [89] 0.152064 0.129228 0.108000 0.088452 0.070656 0.054684 0.040608 0.028500 #>  [97] 0.018432 0.010476 0.004704 0.001188 0.000000 dBETA(seq(0,1,by=0.01),2,3)$mean  #extracting the mean #> [1] 0.4 dBETA(seq(0,1,by=0.01),2,3)$var   #extracting the variance #> [1] 0.04  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pBETA(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pBETA(seq(0,1,by=0.01),2,3)   #acquiring the cumulative probability values #>   [1] 0.00000000 0.00059203 0.00233648 0.00518643 0.00909568 0.01401875 #>   [7] 0.01991088 0.02672803 0.03442688 0.04296483 0.05230000 0.06239123 #>  [13] 0.07319808 0.08468083 0.09680048 0.10951875 0.12279808 0.13660163 #>  [19] 0.15089328 0.16563763 0.18080000 0.19634643 0.21224368 0.22845923 #>  [25] 0.24496128 0.26171875 0.27870128 0.29587923 0.31322368 0.33070643 #>  [31] 0.34830000 0.36597763 0.38371328 0.40148163 0.41925808 0.43701875 #>  [37] 0.45474048 0.47240083 0.48997808 0.50745123 0.52480000 0.54200483 #>  [43] 0.55904688 0.57590803 0.59257088 0.60901875 0.62523568 0.64120643 #>  [49] 0.65691648 0.67235203 0.68750000 0.70234803 0.71688448 0.73109843 #>  [55] 0.74497968 0.75851875 0.77170688 0.78453603 0.79699888 0.80908883 #>  [61] 0.82080000 0.83212723 0.84306608 0.85361283 0.86376448 0.87351875 #>  [67] 0.88287408 0.89182963 0.90038528 0.90854163 0.91630000 0.92366243 #>  [73] 0.93063168 0.93721123 0.94340528 0.94921875 0.95465728 0.95972723 #>  [79] 0.96443568 0.96879043 0.97280000 0.97647363 0.97982128 0.98285363 #>  [85] 0.98558208 0.98801875 0.99017648 0.99206883 0.99371008 0.99511523 #>  [91] 0.99630000 0.99728083 0.99807488 0.99870003 0.99917488 0.99951875 #>  [97] 0.99975168 0.99989443 0.99996848 0.99999603 1.00000000 mazBETA(1.4,3,2)              #acquiring the moment about zero values #> [1] 0.6 mazBETA(2,3,2)-mazBETA(1,3,2)^2 #acquiring the variance for a=3,b=2 #> [1] 0.04  #only the integer value of moments is taken here because moments cannot be decimal mazBETA(1.9,5.5,6) #> [1] 0.4782609"},{"path":"/reference/pBetaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Binomial Distribution — pBetaBin","title":"Beta-Binomial Distribution — pBetaBin","text":"functions provide ability generating probability function values cumulative probability function values Beta-Binomial Distribution.","code":""},{"path":"/reference/pBetaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Binomial Distribution — pBetaBin","text":"","code":"pBetaBin(x,n,a,b)"},{"path":"/reference/pBetaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Binomial Distribution — pBetaBin","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/pBetaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Binomial Distribution — pBetaBin","text":"output pBetaBin gives cumulative probability  values vector form.","code":""},{"path":"/reference/pBetaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta-Binomial Distribution — pBetaBin","text":"Mixing Beta distribution Binomial distribution create Beta-Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{BetaBin}(x)= {n \\choose x} \\frac{B(+x,n+b-x)}{B(,b)} $$ $$,b > 0$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{BetaBin}[x]= \\frac{na}{+b} $$ $$Var_{BetaBin}[x]= \\frac{(nab)}{(+b)^2} \\frac{(+b+n)}{(+b+1)} $$ $$dispersion= \\frac{1}{+b+1} $$ Defined  B(,b) beta function.","code":""},{"path":"/reference/pBetaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta-Binomial Distribution — pBetaBin","text":"Young-Xu, Y. & Chan, K.., 2008. Pooling overdispersed binomial data estimate event rate. BMC medical research methodology, 8(1), p.58. Available : doi: 10.1186/1471-2288-8-58 . Trenkler, G., 1996. Continuous univariate distributions. Computational Statistics & Data Analysis, 21(1), p.119. Available : doi: 10.1016/0167-9473(96)90015-8 . Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759. Available : doi: 10.1094/PHYTO-83-759","code":""},{"path":"/reference/pBetaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Binomial Distribution — pBetaBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.2) plot(0,0,main=\"Beta-binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dBetaBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dBetaBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }   dBetaBin(0:10,10,4,.2)$pdf    #extracting the pdf values #>  [1] 9.184001e-05 3.993044e-04 1.095652e-03 2.434783e-03 4.810660e-03 #>  [6] 8.881218e-03 1.585932e-02 2.832021e-02 5.310040e-02 1.180009e-01 #> [11] 7.670057e-01 dBetaBin(0:10,10,4,.2)$mean   #extracting the mean #> [1] 9.52381 dBetaBin(0:10,10,4,.2)$var    #extracting the variance #> [1] 1.238444 dBetaBin(0:10,10,4,.2)$over.dis.para  #extracting the over dispersion value #> [1] 0.1923077  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pBetaBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pBetaBin(0:10,10,a[i],a[i]),col = col[i]) }   pBetaBin(0:10,10,4,.2)   #acquiring the cumulative probability values #>  [1] 9.184001e-05 4.911444e-04 1.586797e-03 4.021580e-03 8.832240e-03 #>  [6] 1.771346e-02 3.357278e-02 6.189299e-02 1.149934e-01 2.329943e-01 #> [11] 1.000000e+00"},{"path":"/reference/pBetaCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"functions provide ability generating probability function values cumulative probability function values Beta-Correlated  Binomial Distribution.","code":""},{"path":"/reference/pBetaCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"","code":"pBetaCorrBin(x,n,cov,a,b)"},{"path":"/reference/pBetaCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"x vector binomial random variables. n single value binomial trials. cov single value covariance. single value alpha parameter b single value beta parameter.","code":""},{"path":"/reference/pBetaCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"output pBetaCorrBin gives cumulative probability  values vector form.","code":""},{"path":"/reference/pBetaCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values.  $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$-\\infty < cov < +\\infty $$ $$0< ,b$$ $$0 < p < 1$$ $$p=\\frac{}{+b}$$ $$\\Theta=\\frac{1}{+b}$$ Correlation $$\\frac{-2}{n(n-1)} min(\\frac{p}{1-p},\\frac{1-p}{p}) \\le correlation \\le \\frac{2p(1-p)}{(n-1)p(1-p)+0.25-fo} $$ \\(fo=min (x-(n-1)p-0.5)^2 \\) mean variance denoted $$E_{BetaCorrBin}[x]= np$$ $$Var_{BetaCorrBin}[x]= np(1-p)(n\\Theta+1)(1+\\Theta)^{-1}+n(n-1)cov$$ $$Corr_{BetaCorrBin}[x]=\\frac{cov}{p(1-p)}$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pBetaCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 .","code":""},{"path":"/reference/pBetaCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta-Correlated  Binomial Distribution — pBetaCorrBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(9.0,10,11,12,13) b <- c(8.0,8.1,8.2,8.3,8.4) plot(0,0,main=\"Beta-Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dBetaCorrBin(0:10,10,0.001,a[i],b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dBetaCorrBin(0:10,10,0.001,a[i],b[i])$pdf,col = col[i],pch=16) }   dBetaCorrBin(0:10,10,0.001,10,13)$pdf      #extracting the pdf values #>  [1] 0.010992133 0.047498928 0.108466364 0.170474118 0.202669472 0.189491674 #>  [7] 0.140699312 0.081828892 0.035693121 0.010567136 0.001618852 dBetaCorrBin(0:10,10,0.001,10,13)$mean     #extracting the mean #> [1] 4.347826 dBetaCorrBin(0:10,10,0.001,10,13)$var      #extracting the variance #> [1] 3.469017 dBetaCorrBin(0:10,10,0.001,10,13)$corr     #extracting the correlation #> [1] 0.004069231 dBetaCorrBin(0:10,10,0.001,10,13)$mincorr  #extracting the minimum correlation value #> [1] -0.01709402 dBetaCorrBin(0:10,10,0.001,10,13)$maxcorr  #extracting the maximum correlation value #> [1] 0.2145215  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(9.0,10,11,12,13) b <- c(8.0,8.1,8.2,8.3,8.4) plot(0,0,main=\"Beta-Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pBetaCorrBin(0:10,10,0.001,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pBetaCorrBin(0:10,10,0.001,a[i],b[i]),col = col[i],pch=16) }   pBetaCorrBin(0:10,10,0.001,10,13)      #acquiring the cumulative probability values #>  [1] 0.01099213 0.05849106 0.16695742 0.33743154 0.54010101 0.72959269 #>  [7] 0.87029200 0.95212089 0.98781401 0.99838115 1.00000000"},{"path":"/reference/pCOMPBin.html","id":null,"dir":"Reference","previous_headings":"","what":"COM Poisson Binomial Distribution — pCOMPBin","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"functions provide ability generating probability function values cumulative probability function values COM Poisson  Binomial Distribution.","code":""},{"path":"/reference/pCOMPBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"","code":"pCOMPBin(x,n,p,v)"},{"path":"/reference/pCOMPBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. v single value  v.","code":""},{"path":"/reference/pCOMPBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"output pCOMPBin gives  cumulative probability  values vector form.","code":""},{"path":"/reference/pCOMPBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{COMPBin}(x) = \\frac{{n \\choose x}^v p^x (1-p)^{n-x}}{\\sum_{j=0}^{n} {n \\choose j}^v p^j (1-p)^{(n-j)}}$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$0 < p < 1$$ $$-\\infty < v < +\\infty $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pCOMPBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"Extracted Borges, P., Rodrigues, J., Balakrishnan, N. Bazan, J., 2014. COM-Poisson type generalization binomial distribution properties applications. Statistics & Probability Letters, 87, pp.158-166. Available : doi: 10.1016/j.spl.2014.01.019","code":""},{"path":"/reference/pCOMPBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"COM Poisson Binomial Distribution — pCOMPBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"COM Poisson Binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dCOMPBin(0:10,10,a[i],b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dCOMPBin(0:10,10,a[i],b[i])$pdf,col = col[i],pch=16) }   dCOMPBin(0:10,10,0.58,0.022)$pdf      #extracting the pdf values #>  [1] 0.01058483 0.01537669 0.02194887 0.03097149 0.04329998 0.06003554 #>  [7] 0.08257434 0.11263594 0.15222443 0.20337258 0.26697531 dCOMPBin(0:10,10,0.58,0.022)$mean     #extracting the mean #> [1] 7.627366 dCOMPBin(0:10,10,0.58,0.022)$var      #extracting the variance #> [1] 5.803804  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"COM Poisson Binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pCOMPBin(0:10,10,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pCOMPBin(0:10,10,a[i],b[i]),col = col[i],pch=16) }   pCOMPBin(0:10,10,0.58,0.022)      #acquiring the cumulative probability values #>  [1] 0.01058483 0.02596152 0.04791039 0.07888188 0.12218187 0.18221740 #>  [7] 0.26479174 0.37742768 0.52965211 0.73302469 1.00000000"},{"path":"/reference/pCorrBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlated  Binomial Distribution — pCorrBin","title":"Correlated  Binomial Distribution — pCorrBin","text":"functions provide ability generating probability function values cumulative probability function values Correlated  Binomial Distribution.","code":""},{"path":"/reference/pCorrBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlated  Binomial Distribution — pCorrBin","text":"","code":"pCorrBin(x,n,p,cov)"},{"path":"/reference/pCorrBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlated  Binomial Distribution — pCorrBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. cov single value covariance.","code":""},{"path":"/reference/pCorrBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlated  Binomial Distribution — pCorrBin","text":"output pCorrBin gives cumulative probability  values vector form.","code":""},{"path":"/reference/pCorrBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlated  Binomial Distribution — pCorrBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{CorrBin}(x) = {n \\choose x}(p^x)(1-p)^{n-x}(1+(\\frac{cov}{2p^2(1-p)^2})((x-np)^2+x(2p-1)-np^2)) $$ \\(x = 0,1,2,3,...n\\) \\(n = 1,2,3,...\\) \\(0 < p < 1\\) \\(-\\infty < cov < +\\infty \\) Correlation $$\\frac{-2}{n(n-1)} min(\\frac{p}{1-p},\\frac{1-p}{p}) \\le cov \\le \\frac{2p(1-p)}{(n-1)p(1-p)+0.25-fo} $$ \\(fo=min (x-(n-1)p-0.5)^2 \\) mean variance denoted $$E_{CorrBin}[x]= np$$ $$Var_{CorrBin}[x]= n(p(1-p)+(n-1)cov)$$ $$Corr_{CorrBin}[x]=\\frac{cov}{p(1-p)}$$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pCorrBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correlated  Binomial Distribution — pCorrBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 . Jorge G. Morel Nagaraj K. Neerchal. Overdispersion Models SAS. SAS Institute, 2012.","code":""},{"path":"/reference/pCorrBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlated  Binomial Distribution — pCorrBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dCorrBin(0:10,10,a[i],b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dCorrBin(0:10,10,a[i],b[i])$pdf,col = col[i],pch=16) }   dCorrBin(0:10,10,0.58,0.022)$pdf      #extracting the pdf values #>  [1] 0.001129385 0.011031584 0.045621336 0.103565540 0.142922006 0.139070090 #>  [7] 0.139751296 0.167045868 0.153590546 0.079286062 0.016986287 dCorrBin(0:10,10,0.58,0.022)$mean     #extracting the mean #> [1] 5.8 dCorrBin(0:10,10,0.58,0.022)$var      #extracting the variance #> [1] 4.416 dCorrBin(0:10,10,0.58,0.022)$corr     #extracting the correlation #> [1] 0.09031199 dCorrBin(0:10,10,0.58,0.022)$mincorr  #extracting the minimum correlation value #> [1] -0.01609195 dCorrBin(0:10,10,0.58,0.022)$maxcorr  #extracting the maximum correlation value #> [1] 0.2060914  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Correlated binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pCorrBin(0:10,10,a[i],b[i]),col = col[i],lwd=2.85) points(0:10,pCorrBin(0:10,10,a[i],b[i]),col = col[i],pch=16) }   pCorrBin(0:10,10,0.58,0.022)      #acquiring the cumulative probability values #>  [1] 0.001129385 0.012160968 0.057782305 0.161347845 0.304269851 0.443339941 #>  [7] 0.583091237 0.750137105 0.903727651 0.983013713 1.000000000"},{"path":"/reference/pGAMMA.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Distribution — pGAMMA","title":"Gamma Distribution — pGAMMA","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Gamma Distribution bounded [0,1].","code":""},{"path":"/reference/pGAMMA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Distribution — pGAMMA","text":"","code":"pGAMMA(p,c,l)"},{"path":"/reference/pGAMMA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Distribution — pGAMMA","text":"p vector probabilities. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/pGAMMA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma Distribution — pGAMMA","text":"output pGAMMA gives cumulative density values vector form.","code":""},{"path":"/reference/pGAMMA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gamma Distribution — pGAMMA","text":"probability density function cumulative density function unit bounded Gamma distribution random variable P given $$g_{P}(p) = \\frac{ c^l p^{c-1}}{\\gamma(l)} [ln(1/p)]^{l-1} $$ ;    \\(0 \\le p \\le 1\\) $$G_{P}(p) = \\frac{ Ig(l,cln(1/p))}{\\gamma(l)} $$ ; \\(0 \\le p \\le 1\\) $$l,c > 0$$ mean variance denoted $$E[P] = (\\frac{c}{c+1})^l $$ $$var[P] = (\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l} $$ moments zero denoted $$E[P^r]=(\\frac{c}{c+r})^l $$ \\(r = 1,2,3,...\\) Defined \\(\\gamma(l) \\) gamma function. Defined \\(Ig(l,cln(1/p))= \\int_0^{cln(1/p)} t^{l-1} e^{-t}dt \\) Lower incomplete gamma function. NOTE : input parameters given domain  conditions necessary error messages provided go .","code":""},{"path":"/reference/pGAMMA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gamma Distribution — pGAMMA","text":"Olshen, . C. Transformations Pearson Type III Distribution. Ann. Math. Statist. 9 (1938), . 3, 176--200.","code":""},{"path":[]},{"path":"/reference/pGAMMA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma Distribution — pGAMMA","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,4)) for (i in 1:4) { lines(seq(0,1,by=0.01),dGAMMA(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dGAMMA(seq(0,1,by=0.01),5,6)$pdf   #extracting the pdf values #>   [1]          NaN 2.696915e-03 1.908823e-02 5.591507e-02 1.151860e-01 #>   [6] 1.963513e-01 2.974469e-01 4.157526e-01 5.481913e-01 6.915796e-01 #>  [11] 8.427858e-01 9.988302e-01 1.156946e+00 1.314613e+00 1.469580e+00 #>  [16] 1.619861e+00 1.763742e+00 1.899766e+00 2.026722e+00 2.143630e+00 #>  [21] 2.249727e+00 2.344447e+00 2.427404e+00 2.498378e+00 2.557294e+00 #>  [26] 2.604211e+00 2.639301e+00 2.662839e+00 2.675188e+00 2.676786e+00 #>  [31] 2.668131e+00 2.649777e+00 2.622316e+00 2.586375e+00 2.542603e+00 #>  [36] 2.491664e+00 2.434233e+00 2.370984e+00 2.302590e+00 2.229714e+00 #>  [41] 2.153006e+00 2.073098e+00 1.990604e+00 1.906109e+00 1.820178e+00 #>  [46] 1.733342e+00 1.646106e+00 1.558942e+00 1.472288e+00 1.386552e+00 #>  [51] 1.302105e+00 1.219288e+00 1.138405e+00 1.059728e+00 9.834979e-01 #>  [56] 9.099206e-01 8.391724e-01 7.713992e-01 7.067177e-01 6.452166e-01 #>  [61] 5.869582e-01 5.319796e-01 4.802945e-01 4.318943e-01 3.867500e-01 #>  [66] 3.448137e-01 3.060204e-01 2.702894e-01 2.375261e-01 2.076239e-01 #>  [71] 1.804654e-01 1.559242e-01 1.338667e-01 1.141532e-01 9.663983e-02 #>  [76] 8.117977e-02 6.762468e-02 5.582605e-02 4.563641e-02 3.691057e-02 #>  [81] 2.950669e-02 2.328725e-02 1.812007e-02 1.387906e-02 1.044499e-02 #>  [86] 7.706093e-03 5.558644e-03 3.907329e-03 2.665574e-03 1.755734e-03 #>  [91] 1.109170e-03 6.662063e-04 3.759598e-04 1.960545e-04 9.220202e-05 #>  [96] 3.765617e-05 1.253703e-05 3.022169e-06 4.041950e-07 1.282574e-08 #> [101] 0.000000e+00 dGAMMA(seq(0,1,by=0.01),5,6)$mean  #extracting the mean #> [1] 0.334898 dGAMMA(seq(0,1,by=0.01),5,6)$var   #extracting the variance #> [1] 0.02065365  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pGAMMA(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pGAMMA(seq(0,1,by=0.01),5,6)   #acquiring the cumulative probability values #>   [1] 1.000000e+00 9.999932e-01 9.998995e-01 9.995428e-01 9.987061e-01 #>   [6] 9.971660e-01 9.947125e-01 9.911596e-01 9.863504e-01 9.801593e-01 #>  [11] 9.724927e-01 9.632875e-01 9.525092e-01 9.401501e-01 9.262260e-01 #>  [16] 9.107741e-01 8.938501e-01 8.755255e-01 8.558851e-01 8.350246e-01 #>  [21] 8.130485e-01 7.900680e-01 7.661988e-01 7.415599e-01 7.162715e-01 #>  [26] 6.904540e-01 6.642267e-01 6.377065e-01 6.110072e-01 5.842386e-01 #>  [31] 5.575057e-01 5.309083e-01 5.045405e-01 4.784902e-01 4.528391e-01 #>  [36] 4.276621e-01 4.030274e-01 3.789968e-01 3.556249e-01 3.329599e-01 #>  [41] 3.110434e-01 2.899105e-01 2.695901e-01 2.501051e-01 2.314727e-01 #>  [46] 2.137045e-01 1.968071e-01 1.807821e-01 1.656266e-01 1.513333e-01 #>  [51] 1.378913e-01 1.252858e-01 1.134990e-01 1.025103e-01 9.229632e-02 #>  [56] 8.283152e-02 7.408848e-02 6.603815e-02 5.865018e-02 5.189319e-02 #>  [61] 4.573504e-02 4.014309e-02 3.508447e-02 3.052625e-02 2.643573e-02 #>  [66] 2.278056e-02 1.952897e-02 1.664994e-02 1.411329e-02 1.188988e-02 #>  [71] 9.951666e-03 8.271845e-03 6.824902e-03 5.586697e-03 4.534504e-03 #>  [76] 3.647056e-03 2.904559e-03 2.288707e-03 1.782675e-03 1.371100e-03 #>  [81] 1.040057e-03 7.770188e-04 5.708055e-04 4.115309e-04 2.905353e-04 #>  [86] 2.003148e-04 1.344429e-04 8.748908e-05 5.493214e-05 3.307222e-05 #>  [91] 1.894087e-05 1.021113e-05 5.108634e-06 2.325028e-06 9.348735e-07 #>  [96] 3.173967e-07 8.433588e-08 1.521193e-08 1.353245e-09 2.142264e-11 #> [101] 0.000000e+00 mazGAMMA(1.4,5,6)              #acquiring the moment about zero values #> [1] 0.334898 mazGAMMA(2,5,6)-mazGAMMA(1,5,6)^2 #acquiring the variance for a=5,b=6 #> [1] 0.02065365  #only the integer value of moments is taken here because moments cannot be decimal mazGAMMA(1.9,5.5,6) #> [1] 0.3670253"},{"path":"/reference/pGammaBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Binomial Distribution — pGammaBin","title":"Gamma Binomial Distribution — pGammaBin","text":"functions provide ability generating probability function values cumulative probability function values Gamma Binomial Distribution.","code":""},{"path":"/reference/pGammaBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Binomial Distribution — pGammaBin","text":"","code":"pGammaBin(x,n,c,l)"},{"path":"/reference/pGammaBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Binomial Distribution — pGammaBin","text":"x vector binomial random variables. n single value binomial trials. c single value shape parameter c. l single value shape parameter l.","code":""},{"path":"/reference/pGammaBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma Binomial Distribution — pGammaBin","text":"output pGammaBin gives cumulative probability  values vector form.","code":""},{"path":"/reference/pGammaBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gamma Binomial Distribution — pGammaBin","text":"Mixing Gamma distribution Binomial distribution create Gamma Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{GammaBin}[x]= {n \\choose x} \\sum_{j=0}^{n-x} {n-x \\choose j} (-1)^j (\\frac{c}{c+x+j})^l $$ $$c,l > 0$$ $$x = 0,1,2,...,n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{GammaBin}[x] = (\\frac{c}{c+1})^l$$ $$Var_{GammaBin}[x] = n^2[(\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l}] + n(\\frac{c}{c+1})^l{1-)(\\frac{c+1}{c+2})^l}$$ $$dispersion= \\frac{(\\frac{c}{c+2})^l - (\\frac{c}{c+1})^{2l}}{(\\frac{c}{c+1})^l[1-(\\frac{c}{c+1})^l]}$$","code":""},{"path":"/reference/pGammaBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gamma Binomial Distribution — pGammaBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/pGammaBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gamma Binomial Distribution — pGammaBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.2) plot(0,0,main=\"Gamma-binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dGammaBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dGammaBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }   dGammaBin(0:10,10,4,.2)$pdf    #extracting the pdf values #>  [1] 5.870615e-05 2.754357e-04 8.057584e-04 1.892811e-03 3.928276e-03 #>  [6] 7.579979e-03 1.409128e-02 2.611031e-02 5.066078e-02 1.162261e-01 #> [11] 7.783705e-01 dGammaBin(0:10,10,4,.2)$mean   #extracting the mean #> [1] 9.563525 dGammaBin(0:10,10,4,.2)$var    #extracting the variance #> [1] 1.092227 dGammaBin(0:10,10,4,.2)$over.dis.para  #extracting the over dispersion value #> [1] 0.1796209  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pGammaBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pGammaBin(0:10,10,a[i],a[i]),col = col[i]) }   pGammaBin(0:10,10,4,.2)   #acquiring the cumulative probability values #>  [1] 5.870615e-05 3.341419e-04 1.139900e-03 3.032711e-03 6.960987e-03 #>  [6] 1.454097e-02 2.863224e-02 5.474255e-02 1.054033e-01 2.216295e-01 #> [11] 1.000000e+00"},{"path":"/reference/pGBeta1.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Beta Type-1 Distribution — pGBeta1","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Generalized Beta Type-1 Distribution bounded [0,1].","code":""},{"path":"/reference/pGBeta1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"","code":"pGBeta1(p,a,b,c)"},{"path":"/reference/pGBeta1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"p vector probabilities. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/pGBeta1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"output pGBeta1 gives cumulative density values vector form.","code":""},{"path":"/reference/pGBeta1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"probability density function cumulative density function unit bounded Generalized Beta Type-1 Distribution random variable P given $$g_{P}(p)= \\frac{c}{B(,b)} p^{ac-1} (1-p^c)^{b-1} $$;      \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\frac{p^{ac}}{aB(,b)}  2F1(,1-b;p^c;+1) $$    \\(0 \\le p \\le 1\\) $$,b,c > 0$$ mean variance denoted $$E[P]= \\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})} $$ $$var[P]= \\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2 $$ moments zero denoted $$E[P^r]= \\frac{B(+b,\\frac{r}{c})}{B(,\\frac{r}{c})} $$ \\(r = 1,2,3,....\\) Defined \\(B(,b)\\) Beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pGBeta1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":"/reference/pGBeta1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Beta Type-1 Distribution — pGBeta1","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(.1,.2,.3,1.5,2.15) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,10)) for (i in 1:5) { lines(seq(0,1,by=0.001),dGBeta1(seq(0,1,by=0.001),a[i],1,2*a[i])$pdf,col = col[i]) }   dGBeta1(seq(0,1,by=0.01),2,3,1)$pdf    #extracting the pdf values #>   [1] 0.000000 0.117612 0.230496 0.338724 0.442368 0.541500 0.636192 0.726516 #>   [9] 0.812544 0.894348 0.972000 1.045572 1.115136 1.180764 1.242528 1.300500 #>  [17] 1.354752 1.405356 1.452384 1.495908 1.536000 1.572732 1.606176 1.636404 #>  [25] 1.663488 1.687500 1.708512 1.726596 1.741824 1.754268 1.764000 1.771092 #>  [33] 1.775616 1.777644 1.777248 1.774500 1.769472 1.762236 1.752864 1.741428 #>  [41] 1.728000 1.712652 1.695456 1.676484 1.655808 1.633500 1.609632 1.584276 #>  [49] 1.557504 1.529388 1.500000 1.469412 1.437696 1.404924 1.371168 1.336500 #>  [57] 1.300992 1.264716 1.227744 1.190148 1.152000 1.113372 1.074336 1.034964 #>  [65] 0.995328 0.955500 0.915552 0.875556 0.835584 0.795708 0.756000 0.716532 #>  [73] 0.677376 0.638604 0.600288 0.562500 0.525312 0.488796 0.453024 0.418068 #>  [81] 0.384000 0.350892 0.318816 0.287844 0.258048 0.229500 0.202272 0.176436 #>  [89] 0.152064 0.129228 0.108000 0.088452 0.070656 0.054684 0.040608 0.028500 #>  [97] 0.018432 0.010476 0.004704 0.001188 0.000000 dGBeta1(seq(0,1,by=0.01),2,3,1)$mean   #extracting the mean #> [1] 0.4 dGBeta1(seq(0,1,by=0.01),2,3,1)$var    #extracting the variance #> [1] 0.04  pGBeta1(0.04,2,3,4)        #acquiring the cdf values for a=2,b=3,c=4 #> [1] 0.0006451179 mazGBeta1(1.4,3,2,2)              #acquiring the moment about zero values #> [1] 0.7619048 mazGBeta1(2,3,2,2)-mazGBeta1(1,3,2,2)^2        #acquiring the variance for a=3,b=2,c=2 #> [1] 0.01950113  #only the integer value of moments is taken here because moments cannot be decimal mazGBeta1(3.2,3,2,2) #> [1] 0.4848485"},{"path":"/reference/pGHGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"functions provide ability generating probability function values cumulative probability function values Gaussian Hypergeometric Generalized Beta  Binomial distribution.","code":""},{"path":"/reference/pGHGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"","code":"pGHGBB(x,n,a,b,c)"},{"path":"/reference/pGHGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter alpha value representing . b single value shape parameter beta value representing b. c single value shape parameter lambda value representing c.","code":""},{"path":"/reference/pGHGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"output pGHGBB gives cumulative probability function values vector form.","code":""},{"path":"/reference/pGHGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"Mixing Gaussian Hypergeometric Generalized Beta distribution Binomial distribution create Gaussian Hypergeometric Generalized Beta Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{GHGBB}(x)=\\frac{1}{2F1(-n,;-b-n+1;c)}{n \\choose x} \\frac{B(x+,n-x+b)}{B(,b+n)}(c^x) $$ $$,b,c > 0$$ $$x = 0,1,2,...n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{GHGBB}[x]= nE_{GHGBeta} $$ $$Var_{GHGBB}[x]= nE_{GHGBeta}(1-E_{GHGBeta})+ n(n-1)Var_{GHGBeta} $$ $$dispersion= \\frac{var_{GHGBeta}}{E_{GHGBeta}(1-E_{GHGBeta})} $$ Defined \\(B(,b)\\) beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pGHGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/pGHGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian Hypergeometric Generalized Beta  Binomial Distribution — pGHGBB","text":"","code":"#plotting the random variables and probability values col <- rainbow(6) a <- c(.1,.2,.3,1.5,2.1,3) plot(0,0,main=\"GHGBB probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,7),ylim = c(0,0.9)) for (i in 1:6) { lines(0:7,dGHGBB(0:7,7,1+a[i],0.3,1+a[i])$pdf,col = col[i],lwd=2.85) points(0:7,dGHGBB(0:7,7,1+a[i],0.3,1+a[i])$pdf,col = col[i],pch=16) }   dGHGBB(0:7,7,1.3,0.3,1.3)$pdf      #extracting the pdf values #> [1] 0.004487185 0.008425937 0.014260501 0.023712228 0.040167077 0.072195955 #> [7] 0.151611505 0.685139612 dGHGBB(0:7,7,1.3,0.3,1.3)$mean     #extracting the mean #> [1] 6.335378 dGHGBB(0:7,7,1.3,0.3,1.3)$var      #extracting the variance #> [1] 1.619291 dGHGBB(0:7,7,1.3,0.3,1.3)$over.dis.par  #extracting the over dispersion value #> [1] 0.2820006  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,7),ylim = c(0,1)) for (i in 1:4) { lines(0:7,pGHGBB(0:7,7,1+a[i],0.3,1+a[i]),col = col[i]) points(0:7,pGHGBB(0:7,7,1+a[i],0.3,1+a[i]),col = col[i]) }   pGHGBB(0:7,7,1.3,0.3,1.3)     #acquiring the cumulative probability values #> [1] 0.004487185 0.012913122 0.027173623 0.050885851 0.091052928 0.163248883 #> [7] 0.314860388 1.000000000"},{"path":"/reference/pGHGBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Gaussian Hypergeometric Generalized Beta distribution bounded [0,1].","code":""},{"path":"/reference/pGHGBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"","code":"pGHGBeta(p,n,a,b,c)"},{"path":"/reference/pGHGBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"p vector probabilities. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter lambda representing c.","code":""},{"path":"/reference/pGHGBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"output pGHGBeta gives cumulative density values vector form.","code":""},{"path":"/reference/pGHGBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"probability density function cumulative density function unit bounded Gaussian Hypergeometric Generalized Beta Distribution random variable P given $$g_{P}(p)= \\frac{1}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1} \\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} $$; \\(0 \\le p \\le 1\\) $$G_{P}(p)= \\int^p_0 \\frac{1}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} t^{-1}(1-t)^{b-1}\\frac{c^{b+n}}{(c+(1-c)t)^{+b+n}} \\,dt $$ ; \\(0 \\le p \\le 1\\) $$,b,c > 0$$ $$n = 1,2,3,...$$ mean variance denoted $$E[P]= \\int^1_0 \\frac{p}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp $$ $$var[P]= \\int^1_0 \\frac{p^2}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp - (E[p])^2$$ moments zero denoted $$E[P^r]= \\int^1_0 \\frac{p^r}{B(,b)}\\frac{2F1(-n,;-b-n+1;1)}{2F1(-n,;-b-n+1;c)} p^{-1}(1-p)^{b-1}\\frac{c^{b+n}}{(c+(1-c)p)^{+b+n}} \\,dp$$ \\(r = 1,2,3,...\\) Defined \\(B(,b)\\) beta function. Defined \\(2F1(,b;c;d)\\) Gaussian Hypergeometric function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pGHGBeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"Rodriguez-Avi, J., Conde-Sanchez, ., Saez-Castillo, . J., & Olmo-Jimenez, M. J. (2007). generalization beta-binomial distribution. Journal Royal Statistical Society. Series C (Applied Statistics), 56(1), 51-61. Available : doi: 10.1111/j.1467-9876.2007.00564.x Pearson, J., 2009. Computation Hypergeometric Functions. Transformation, (September), p.1--123.","code":""},{"path":[]},{"path":"/reference/pGHGBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian Hypergeometric Generalized Beta Distribution — pGHGBeta","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(.1,.2,.3,1.5,2.15) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,10)) for (i in 1:5) { lines(seq(0,1,by=0.001),dGHGBeta(seq(0,1,by=0.001),7,1+a[i],0.3,1+a[i])$pdf,col = col[i]) }   dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$pdf   #extracting the pdf values #>   [1] 0.0000000 0.3509262 0.5228737 0.6498913 0.7501031 0.8314439 0.8984165 #>   [8] 0.9539442 1.0000887 1.0383876 1.0700333 1.0959788 1.1170022 1.1337505 #>  [15] 1.1467690 1.1565225 1.1634108 1.1677804 1.1699335 1.1701354 1.1686196 #>  [22] 1.1655927 1.1612380 1.1557188 1.1491806 1.1417536 1.1335546 1.1246883 #>  [29] 1.1152486 1.1053204 1.0949799 1.0842960 1.0733307 1.0621401 1.0507751 #>  [36] 1.0392813 1.0277005 1.0160703 1.0044248 0.9927948 0.9812086 0.9696918 #>  [43] 0.9582674 0.9469569 0.9357794 0.9247528 0.9138932 0.9032156 0.8927339 #>  [50] 0.8824609 0.8724086 0.8625882 0.8530105 0.8436855 0.8346233 0.8258333 #>  [57] 0.8173251 0.8091080 0.8011917 0.7935860 0.7863010 0.7793473 0.7727362 #>  [64] 0.7664797 0.7605909 0.7550840 0.7499744 0.7452794 0.7410182 0.7372121 #>  [71] 0.7338851 0.7310645 0.7287810 0.7270699 0.7259715 0.7255322 0.7258059 #>  [78] 0.7268551 0.7287532 0.7315867 0.7354580 0.7404897 0.7468297 0.7546578 #>  [85] 0.7641951 0.7757165 0.7895686 0.8061949 0.8261722 0.8502673 0.8795219 #>  [92] 0.9153933 0.9599887 1.0164861 1.0899378 1.1889502 1.3296336 1.5465948 #>  [99] 1.9327387 2.8776352       Inf dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$mean  #extracting the mean #> [1] 0.5279419 dGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659)$var   #extracting the variance #> [1] 0.09648382  #plotting the random variables and cumulative probability values col <- rainbow(6) a <- c(.1,.2,.3,1.5,2.1,3) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:6) { lines(seq(0.01,1,by=0.001),pGHGBeta(seq(0.01,1,by=0.001),7,1+a[i],0.3,1+a[i]),col=col[i]) }   pGHGBeta(seq(0,1,by=0.01),7,1.6312,0.3913,0.6659) #acquiring the cumulative probability values #>   [1] 0.000000000 0.002183554 0.006603937 0.012495083 0.019513343 0.027434627 #>   [7] 0.036094544 0.045364862 0.055142153 0.065340545 0.075887778 0.086722256 #>  [13] 0.097790990 0.109048005 0.120453512 0.131972520 0.143574429 0.155232357 #>  [19] 0.166922664 0.178624540 0.190319663 0.201991911 0.213627107 0.225212805 #>  [25] 0.236738102 0.248193470 0.259570533 0.270862265 0.282062393 0.293165615 #>  [31] 0.304167434 0.315064076 0.325852422 0.336529945 0.347094650 0.357545024 #>  [37] 0.367879993 0.378098877 0.388201355 0.398187430 0.408057404 0.417811841 #>  [43] 0.427451554 0.436977576 0.446391143 0.455693674 0.464886762 0.473972152 #>  [49] 0.482951735 0.491827534 0.500601696 0.509276404 0.517854193 0.526337459 #>  [55] 0.534728782 0.543030835 0.551246389 0.559378309 0.567429555 0.575403182 #>  [61] 0.583302347 0.591130309 0.598890438 0.606586219 0.614221261 0.621799313 #>  [67] 0.629324268 0.636800185 0.644231304 0.651622068 0.658977145 0.666301461 #>  [73] 0.673600228 0.680878991 0.688143671 0.695400620 0.702656694 0.709919325 #>  [79] 0.717196627 0.724497509 0.731831821 0.739210537 0.746645976 0.754152090 #>  [85] 0.761744827 0.769442602 0.777266920 0.785243211 0.793401970 0.801780355 #>  [91] 0.810424473 0.819392782 0.828761308 0.838632034 0.849147177 0.860515236 #>  [97] 0.873063293 0.887356913 0.904538189 0.927708021 1.000002698 mazGHGBeta(1.4,7,1.6312,0.3913,0.6659)            #acquiring the moment about zero values #> [1] 0.5279419  #acquiring the variance for a=1.6312,b=0.3913,c=0.6659 mazGHGBeta(2,7,1.6312,0.3913,0.6659)-mazGHGBeta(1,7,1.6312,0.3913,0.6659)^2 #> [1] 0.09648382  #only the integer value of moments is taken here because moments cannot be decimal mazGHGBeta(1.9,15,5,6,1) #> [1] 0.4545455"},{"path":"/reference/pGrassiaIIBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Grassia-II-Binomial Distribution — pGrassiaIIBin","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"functions provide ability generating probability function values cumulative probability function values Grassia-II-Binomial Distribution.","code":""},{"path":"/reference/pGrassiaIIBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"","code":"pGrassiaIIBin(x,n,a,b)"},{"path":"/reference/pGrassiaIIBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter . b single value shape parameter b.","code":""},{"path":"/reference/pGrassiaIIBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"output pGrassiaIIBin gives cumulative probability  values vector form.","code":""},{"path":"/reference/pGrassiaIIBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"Mixing Gamma distribution Binomial distribution create Grassia-II-Binomial distribution, (1-p)=e^(-lambda) Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{GrassiaIIBin}[x]= {n \\choose x} \\sum_{j=0}^{x} {x \\choose j} (-1)^{x-j} (1+b(n-j))^{-} $$ $$,b > 0$$ $$x = 0,1,2,...,n$$ $$n = 1,2,3,...$$ mean, variance dispersion denoted $$E_{GrassiaIIBin}[x] = (\\frac{b}{b+1})^$$ $$Var_{GrassiaIIBin}[x] = n^2[(\\frac{b}{b+2})^- (\\frac{b}{b+1})^{2a}] + n(\\frac{b}{b+1})^{1-(\\frac{b+1}{b+2})^}$$ $$dispersion= \\frac{(\\frac{b}{b+2})^- (\\frac{b}{b+1})^{2a}}{(\\frac{b}{b+1})^[1-(\\frac{b}{b+1})^]}$$","code":""},{"path":"/reference/pGrassiaIIBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"Grassia, ., 1977. family distributions argument 0 1 obtained transformation gamma derived compound distributions. Australian Journal Statistics, 19(2), pp.108-114.","code":""},{"path":"/reference/pGrassiaIIBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grassia-II-Binomial Distribution — pGrassiaIIBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.3,0.4,0.5,0.6,0.8) plot(0,0,main=\"Grassia II binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dGrassiaIIBin(0:10,10,2*a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dGrassiaIIBin(0:10,10,2*a[i],a[i])$pdf,col = col[i],pch=16) }   dGrassiaIIBin(0:10,10,4,.2)$pdf    #extracting the pdf values #>  [1] 0.01234568 0.03923584 0.07605633 0.11447585 0.14524039 0.16058356 #>  [7] 0.15614273 0.13223144 0.09426128 0.05202202 0.01740489 dGrassiaIIBin(0:10,10,4,.2)$mean   #extracting the mean #> [1] 0.007716049 dGrassiaIIBin(0:10,10,4,.2)$var    #extracting the variance #> [1] 0.01380363 dGrassiaIIBin(0:10,10,4,.2)$over.dis.para  #extracting the over dispersion value #> [1] 0.0878147  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(0.3,0.4,0.5,0.6) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pGrassiaIIBin(0:10,10,2*a[i],a[i]),col = col[i]) points(0:10,pGrassiaIIBin(0:10,10,2*a[i],a[i]),col = col[i]) }   pGrassiaIIBin(0:10,10,4,.2)   #acquiring the cumulative probability values #>  [1] 0.01234568 0.05158152 0.12763785 0.24211370 0.38735409 0.54793764 #>  [7] 0.70408037 0.83631181 0.93057309 0.98259511 1.00000000"},{"path":"/reference/pKUM.html","id":null,"dir":"Reference","previous_headings":"","what":"Kumaraswamy Distribution — pKUM","title":"Kumaraswamy Distribution — pKUM","text":"functions provide ability generating probability density values, cumulative probability density values moment zero values Kumaraswamy Distribution bounded [0,1].","code":""},{"path":"/reference/pKUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kumaraswamy Distribution — pKUM","text":"","code":"pKUM(p,a,b)"},{"path":"/reference/pKUM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kumaraswamy Distribution — pKUM","text":"p vector probabilities. single value shape parameter alpha representing . b single value shape parameter beta representing b.","code":""},{"path":"/reference/pKUM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kumaraswamy Distribution — pKUM","text":"output pKUM gives cumulative density values vector form.","code":""},{"path":"/reference/pKUM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kumaraswamy Distribution — pKUM","text":"probability density function cumulative density function unit bounded Kumaraswamy Distribution random variable P given $$g_{P}(p)= abp^{-1}(1-p^)^{b-1} $$ ;        \\(0 \\le p \\le 1\\) $$G_{P}(p)= 1-(1-p^)^b$$ ;                   \\(0 \\le p \\le 1\\) $$,b > 0$$ mean variance denoted $$E[P]= bB(1+\\frac{1}{},b)$$ $$var[P]= bB(1+\\frac{2}{},b)-(bB(1+\\frac{1}{},b))^2$$ moments zero denoted $$E[P^r]= bB(1+\\frac{r}{},b)$$ \\(r = 1,2,3,...\\) Defined \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pKUM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kumaraswamy Distribution — pKUM","text":"Kumaraswamy, P. (1980). generalized probability density function double-bounded random processes. Journal Hydrology, 46(1), 79-88. Available : doi: 10.1016/0022-1694(80)90036-0 . Jones, M. C. (2009). Kumaraswamy's distribution: beta-type distribution tractability advantages. Statistical Methodology, 6(1), 70-81. Available : doi: 10.1016/j.stamet.2008.04.001 .","code":""},{"path":[]},{"path":"/reference/pKUM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kumaraswamy Distribution — pKUM","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\",ylab=\"Probability density values\", xlim = c(0,1),ylim = c(0,6)) for (i in 1:4) { lines(seq(0,1,by=0.01),dKUM(seq(0,1,by=0.01),a[i],a[i])$pdf,col = col[i]) }   dKUM(seq(0,1,by=0.01),2,3)$pdf   #extracting the probability values #>   [1] 0.000000000 0.059988001 0.119904019 0.179676146 0.239232614 0.298501875 #>   [7] 0.357412666 0.415894084 0.473875661 0.531287429 0.588060000 0.644124631 #>  [13] 0.699413299 0.753858776 0.807394694 0.859955625 0.911477146 0.961895914 #>  [19] 1.011149741 1.059177659 1.105920000 1.151318461 1.195316179 1.237857806 #>  [25] 1.278889574 1.318359375 1.356216826 1.392413344 1.426902221 1.459638689 #>  [31] 1.490580000 1.519685491 1.546916659 1.572237236 1.595613254 1.617013125 #>  [37] 1.636407706 1.653770374 1.669077101 1.682306519 1.693440000 1.702461721 #>  [43] 1.709358739 1.714121066 1.716741734 1.717216875 1.715545786 1.711731004 #>  [49] 1.705778381 1.697697149 1.687500000 1.675203151 1.660826419 1.644393296 #>  [55] 1.625931014 1.605470625 1.583047066 1.558699234 1.532470061 1.504406579 #>  [61] 1.474560000 1.442985781 1.409743699 1.374897926 1.338517094 1.300674375 #>  [67] 1.261447546 1.220919064 1.179176141 1.136310809 1.092420000 1.047605611 #>  [73] 1.001974579 0.955638956 0.908715974 0.861328125 0.813603226 0.765674494 #>  [79] 0.717680621 0.669765839 0.622080000 0.574778641 0.528023059 0.481980386 #>  [85] 0.436823654 0.392731875 0.349890106 0.308489524 0.268727501 0.230807669 #>  [91] 0.194940000 0.161340871 0.130233139 0.101846216 0.076416134 0.054185625 #>  [97] 0.035404186 0.020328154 0.009220781 0.002352299 0.000000000 dKUM(seq(0,1,by=0.01),2,3)$mean  #extracting the mean #> [1] 0.4571429 dKUM(seq(0,1,by=0.01),2,3)$var   #extracting the variance #> [1] 0.04102041  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\",ylab=\"Cumulative density values\", xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pKUM(seq(0,1,by=0.01),a[i],a[i]),col = col[i]) }   pKUM(seq(0,1,by=0.01),2,3)    #acquiring the cumulative probability values #>   [1] 0.000000000 0.000299970 0.001199520 0.002697571 0.004792324 0.007481266 #>   [7] 0.010761167 0.014628088 0.019077382 0.024103701 0.029701000 0.035862542 #>  [13] 0.042580906 0.049847997 0.057655050 0.065992641 0.074850697 0.084218508 #>  [19] 0.094084732 0.104437416 0.115264000 0.126551336 0.138285700 0.150452806 #>  [25] 0.163037823 0.176025391 0.189399636 0.203144190 0.217242210 0.231676393 #>  [31] 0.246429000 0.261481874 0.276816462 0.292413838 0.308254724 0.324319516 #>  [37] 0.340588302 0.357040896 0.373656856 0.390415514 0.407296000 0.424277274 #>  [43] 0.441338152 0.458457333 0.475613434 0.492785016 0.509950617 0.527088785 #>  [49] 0.544178110 0.561197257 0.578125000 0.594940258 0.611622130 0.628149931 #>  [55] 0.644503231 0.660661891 0.676606099 0.692316417 0.707773813 0.722959704 #>  [61] 0.737856000 0.752445144 0.766710156 0.780634672 0.794202997 0.807400141 #>  [67] 0.820211870 0.832624752 0.844626203 0.856204533 0.867349000 0.878049854 #>  [73] 0.888298390 0.898086996 0.907409210 0.916259766 0.924634649 0.932531150 #>  [79] 0.939947921 0.946885026 0.953344000 0.959327906 0.964841391 0.969890743 #>  [85] 0.974483952 0.978630766 0.982342755 0.985633371 0.988518007 0.991014061 #>  [91] 0.993141000 0.994920422 0.996376121 0.997534153 0.998422901 0.999073141 #>  [97] 0.999518110 0.999793575 0.999937901 0.999992119 1.000000000  mazKUM(1.4,3,2)               #acquiring the moment about zero values #> [1] 0.6428571 mazKUM(2,2,3)-mazKUM(1,2,3)^2  #acquiring the variance for a=2,b=3 #> [1] 0.04102041  #only the integer value of moments is taken here because moments cannot be decimal mazKUM(1.9,5.5,6) #> [1] 0.6551253"},{"path":"/reference/pKumBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Kumaraswamy Binomial Distribution — pKumBin","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"functions provide ability generating probability function values cumulative probability function values Kumaraswamy Binomial Distribution.","code":""},{"path":"/reference/pKumBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"","code":"pKumBin(x,n,a,b,it=25000)"},{"path":"/reference/pKumBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"x vector binomial random variables. n single value binomial trial. single value shape parameter alpha representing . b single value shape parameter beta representing b. number iterations converge proper probability function replacing infinity.","code":""},{"path":"/reference/pKumBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"output pKumBin gives cumulative probability values vector form.","code":""},{"path":"/reference/pKumBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"Mixing Kumaraswamy distribution Binomial distribution create Kumaraswamy Binomial distribution.  probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{KumBin}(x)= ab{n \\choose x} \\sum_{j=0}^{} (-1)^j{b-1 \\choose j}B(x++aj,n-x+1) $$ $$,b > 0$$ $$x = 0,1,2,...n$$ $$n = 1,2,3,...$$ $$> 0$$ mean, variance dispersion denoted $$E_{KumBin}[x]= nbB(1+\\frac{1}{},b) $$ $$Var_{KumBin}[x]= (n^2)b(B(1+\\frac{2}{},b)-bB(1+\\frac{1}{},b)^2)+                        nb(B(1+\\frac{1}{},b)-B(1+\\frac{2}{},b)) $$ $$dispersion= \\frac{(bB(1+\\frac{2}{},b)-(bB(1+\\frac{1}{},b))^2)}                        {(bB(1+\\frac{1}{},b)-(bB(1+\\frac{1}{},b))^2)} $$ Defined \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pKumBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":"/reference/pKumBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kumaraswamy Binomial Distribution — pKumBin","text":"","code":"if (FALSE) { #plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,.85) plot(0,0,main=\"Kumaraswamy binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dKumBin(0:10,10,a[i],a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dKumBin(0:10,10,a[i],a[i])$pdf,col = col[i],pch=16) }  dKumBin(0:10,10,4,2)$pdf  #extracting the pdf values dKumBin(0:10,10,4,2)$mean #extracting the mean dKumBin(0:10,10,4,2)$var  #extracting the variance dKumBin(0:10,10,4,2)$over.dis.para #extracting the over dispersion value  #plotting the random variables and cumulative probability values col <- rainbow(5) a <- c(1,2,5,10,.85) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pKumBin(0:10,10,a[i],a[i]),col = col[i]) points(0:10,pKumBin(0:10,10,a[i],a[i]),col = col[i]) }  pKumBin(0:10,10,4,2)    #acquiring the cumulative probability values         }"},{"path":"/reference/Plant_DiseaseData.html","id":null,"dir":"Reference","previous_headings":"","what":"Plant Disease Incidence data — Plant_DiseaseData","title":"Plant Disease Incidence data — Plant_DiseaseData","text":"Cochran(1936) provided data comprise number tomato spotted wilt virus(TSWV) infected tomato plants field trials Australia. field map divided 160 'quadrats'. 9 tomato plants quadrat. numbers TSWV infected tomato plants counted quadrat. Number infected plants 9 plants per quadrat can treated binomial variable. collection responses 160 quadrats form \"binomial outcome data\" provided data set similar Cochran plant disease incidence data. Marcus R(1984). orange trees infected citrus tristeza virus (CTV) orchard central Israel. divided field map 84 \"quadrats\" 4 rows x 3 columns counted total number (1981 + 1982) infected trees maximum n = 12 quadrat","code":""},{"path":"/reference/Plant_DiseaseData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plant Disease Incidence data — Plant_DiseaseData","text":"","code":"Plant_DiseaseData"},{"path":"/reference/Plant_DiseaseData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plant Disease Incidence data — Plant_DiseaseData","text":"data frame 2 columns 10 rows Dis.plant Diseased Plants fre Observed frequencies","code":""},{"path":"/reference/Plant_DiseaseData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Plant Disease Incidence data — Plant_DiseaseData","text":"Extracted Hughes, G., 1993. Using Beta-Binomial Distribution Describe Aggregated Patterns Disease Incidence. Phytopathology, 83(9), p.759. Available : doi: 10.1094/Phyto-83-759 .","code":""},{"path":"/reference/Plant_DiseaseData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plant Disease Incidence data — Plant_DiseaseData","text":"","code":"Plant_DiseaseData$Dis.plant      # extracting the binomial random variables #>  [1] 0 1 2 3 4 5 6 7 8 9 sum(Plant_DiseaseData$fre)       # summing all the frequencies #> [1] 160"},{"path":"/reference/pLMBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Lovinson Multiplicative  Binomial Distribution — pLMBin","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"functions provide ability generating probability function values cumulative probability function values Lovinson Multiplicative Binomial Distribution.","code":""},{"path":"/reference/pLMBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"","code":"pLMBin(x,n,p,phi)"},{"path":"/reference/pLMBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. phi single value phi.","code":""},{"path":"/reference/pLMBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"output pLMBin gives cumulative probability values vector form.","code":""},{"path":"/reference/pLMBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{LMBin}(x)= {n \\choose x} p^x (1-p)^{n-x} \\frac{(phi^{x(n-x)}}{f(p,phi,n)} $$ \\(f(p,phi,n)\\) $$f(p,phi,n)= \\sum_{k=0}^{n} {n \\choose k} p^k (1-p)^{n-k} (phi^{k(n-k)} )$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$k = 0,1,2,...,n$$ $$0 < p < 1$$ $$0 < phi $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pLMBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"Elamir, E.., 2013. Multiplicative-Binomial Distribution: Results Characterization, Inference Random Data Generation. Journal Statistical Theory Applications, 12(1), pp.92-105.","code":""},{"path":"/reference/pLMBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lovinson Multiplicative  Binomial Distribution — pLMBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Lovinson Multiplicative binomial probability      function graph\",xlab=\"Binomial random variable\",      ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dLMBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dLMBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],pch=16) }   dLMBin(0:10,10,.58,10.022)$pdf   #extracting the pdf values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106255e-05 5.123785e-02 #>  [6] 8.509524e-01 9.771209e-02 7.659947e-05 3.923411e-10 1.185630e-17 #> [11] 1.605234e-27 dLMBin(0:10,10,.58,10.022)$mean   #extracting the mean #> [1] 5.046585 dLMBin(0:10,10,.58,10.022)$var   #extracting the variance #> [1] 0.1471704  #plotting random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Lovinson Multiplicative binomial probability      function graph\",xlab=\"Binomial random variable\",      ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pLMBin(0:10,10,a[i],1+b[i]),col = col[i],lwd=2.85) points(0:10,pLMBin(0:10,10,a[i],1+b[i]),col = col[i],pch=16) }   pLMBin(0:10,10,.58,10.022)     #acquiring the cumulative probability values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106261e-05 5.125891e-02 #>  [6] 9.022113e-01 9.999234e-01 1.000000e+00 1.000000e+00 1.000000e+00 #> [11] 1.000000e+00"},{"path":"/reference/pMcGBB.html","id":null,"dir":"Reference","previous_headings":"","what":"McDonald Generalized Beta Binomial Distribution — pMcGBB","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"functions provide ability generating probability function values cumulative probability function values McDonald Generalized Beta Binomial Distribution.","code":""},{"path":"/reference/pMcGBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"","code":"pMcGBB(x,n,a,b,c)"},{"path":"/reference/pMcGBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"x vector binomial random variables. n single value binomial trials. single value shape parameter alpha representing . b single value shape parameter beta representing b. c single value shape parameter gamma representing c.","code":""},{"path":"/reference/pMcGBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"output pMcGBB gives cumulative probability function values vector form.","code":""},{"path":"/reference/pMcGBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"Mixing Generalized Beta Type-1 Distribution  Binomial distribution probability function value cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{McGBB}(x)= {n \\choose x} \\frac{1}{B(,b)} (\\sum_{j=0}^{n-x} (-1)^j {n-x \\choose j} B(\\frac{x}{c}++\\frac{j}{c},b) ) $$ $$,b,c > 0$$ mean, variance dispersion denoted $$E_{McGBB}[x]= n\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})} $$ $$Var_{McGBB}[x]= n^2(\\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2) +n(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})}-\\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}) $$ $$dispersion= \\frac{\\frac{B(+b,\\frac{2}{c})}{B(,\\frac{2}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2}{\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})}-(\\frac{B(+b,\\frac{1}{c})}{B(,\\frac{1}{c})})^2}$$ $$x = 0,1,2,...n$$ $$n = 1,2,3,...$$","code":""},{"path":"/reference/pMcGBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"Manoj, C., Wijekoon, P. & Yapa, R.D., 2013. McDonald Generalized Beta-Binomial Distribution: New Binomial Mixture Distribution Simulation Based Comparison Nested Distributions Handling Overdispersion. International Journal Statistics Probability, 2(2), pp.24-41. Available : doi: 10.5539/ijsp.v2n2p24 . Janiffer, N.M., Islam, . & Luke, O., 2014. Estimating Equations Estimation Mcdonald Generalized Beta - Binomial Parameters. , (October), pp.702-709. Roozegar, R., Tahmasebi, S. & Jafari, .., 2015. McDonald Gompertz Distribution: Properties Applications. Communications Statistics - Simulation Computation, (May), pp.0-0. Available : doi: 10.1080/03610918.2015.1088024 .","code":""},{"path":"/reference/pMcGBB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"McDonald Generalized Beta Binomial Distribution — pMcGBB","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(1,2,5,10,0.6) plot(0,0,main=\"Mcdonald generalized beta-binomial probability function graph\", xlab=\"Binomial random variable\",ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dMcGBB(0:10,10,a[i],2.5,a[i])$pdf,col = col[i],lwd=2.85) points(0:10,dMcGBB(0:10,10,a[i],2.5,a[i])$pdf,col = col[i],pch=16) }   dMcGBB(0:10,10,4,2,1)$pdf             #extracting the pdf values #>  [1] 0.003663004 0.013320013 0.029970030 0.053280053 0.081585082 0.111888112 #>  [7] 0.139860140 0.159840160 0.164835165 0.146520147 0.095238095 dMcGBB(0:10,10,4,2,1)$mean            #extracting the mean #> [1] 6.666667 dMcGBB(0:10,10,4,2,1)$var             #extracting the variance #> [1] 5.079365 dMcGBB(0:10,10,4,2,1)$over.dis.para   #extracting the over dispersion value #> [1] 0.1428571  #plotting the random variables and cumulative probability values col <- rainbow(4) a <- c(1,2,5,10) plot(0,0,main=\"Cumulative probability function graph\",xlab=\"Binomial random variable\", ylab=\"Cumulative probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:4) { lines(0:10,pMcGBB(0:10,10,a[i],a[i],2),col = col[i]) points(0:10,pMcGBB(0:10,10,a[i],a[i],2),col = col[i]) }   pMcGBB(0:10,10,4,2,1)       #acquiring the cumulative probability values #>  [1] 0.003663004 0.016983017 0.046953047 0.100233100 0.181818182 0.293706294 #>  [7] 0.433566434 0.593406593 0.758241758 0.904761905 1.000000000"},{"path":"/reference/pMultiBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplicative  Binomial Distribution — pMultiBin","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"functions provide ability generating probability function values cumulative probability function values Multiplicative Binomial Distribution.","code":""},{"path":"/reference/pMultiBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"","code":"pMultiBin(x,n,p,theta)"},{"path":"/reference/pMultiBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"x vector binomial random variables. n single value binomial trials. p single value probability success. theta single value theta.","code":""},{"path":"/reference/pMultiBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"output pMultiBin gives cumulative probability values vector form.","code":""},{"path":"/reference/pMultiBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"probability function cumulative function can constructed denoted cumulative probability function summation probability function values. $$P_{MultiBin}(x)= {n \\choose x} p^x (1-p)^{n-x} \\frac{(theta^{x(n-x)}}{f(p,theta,n)} $$ \\(f(p,theta,n)\\) $$f(p,theta,n)= \\sum_{k=0}^{n} {n \\choose k} p^k (1-p)^{n-k} (theta^{k(n-k)} )$$ $$x = 0,1,2,3,...n$$ $$n = 1,2,3,...$$ $$k = 0,1,2,...,n$$ $$0 < p < 1$$ $$0 < theta $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pMultiBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"Johnson, N. L., Kemp, . W., & Kotz, S. (2005). Univariate discrete distributions (Vol. 444). Hoboken, NJ: Wiley-Interscience. L. L. Kupper, J.K.H., 1978. Use Correlated Binomial Model Analysis Certain Toxicological Experiments. Biometrics, 34(1), pp.69-76. Paul, S.R., 1985. three-parameter generalization binomial distribution. Communications Statistics - Theory Methods, 14(6), pp.1497-1506. Available : doi: 10.1080/03610928508828990 .","code":""},{"path":"/reference/pMultiBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplicative  Binomial Distribution — pMultiBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Multiplicative binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,0.5)) for (i in 1:5) { lines(0:10,dMultiBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],lwd=2.85) points(0:10,dMultiBin(0:10,10,a[i],1+b[i])$pdf,col = col[i],pch=16) }   dMultiBin(0:10,10,.58,10.022)$pdf   #extracting the pdf values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106255e-05 5.123785e-02 #>  [6] 8.509524e-01 9.771209e-02 7.659947e-05 3.923411e-10 1.185630e-17 #> [11] 1.605234e-27 dMultiBin(0:10,10,.58,10.022)$mean   #extracting the mean #> [1] 5.046585 dMultiBin(0:10,10,.58,10.022)$var   #extracting the variance #> [1] 0.1471704  #plotting random variables and cumulative probability values col <- rainbow(5) a <- c(0.58,0.59,0.6,0.61,0.62) b <- c(0.022,0.023,0.024,0.025,0.026) plot(0,0,main=\"Multiplicative binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:5) { lines(0:10,pMultiBin(0:10,10,a[i],1+b[i]),col = col[i],lwd=2.85) points(0:10,pMultiBin(0:10,10,a[i],1+b[i]),col = col[i],pch=16) }   pMultiBin(0:10,10,.58,10.022)     #acquiring the cumulative probability values #>  [1] 6.364309e-29 8.964365e-19 5.657070e-11 2.106261e-05 5.125891e-02 #>  [6] 9.022113e-01 9.999234e-01 1.000000e+00 1.000000e+00 1.000000e+00 #> [11] 1.000000e+00"},{"path":"/reference/pTRI.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangular Distribution Bounded Between [0,1] — pTRI","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"functions provide ability generating probability density values, cumulative probability density values moments zero values Triangular Distribution bounded [0,1].","code":""},{"path":"/reference/pTRI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"","code":"pTRI(p,mode)"},{"path":"/reference/pTRI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"p vector probabilities. mode single value mode.","code":""},{"path":"/reference/pTRI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"output pTRI gives cumulative density values vector form.","code":""},{"path":"/reference/pTRI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"Setting \\(min=0\\) \\(max=1\\) \\(mode=c\\) Triangular distribution unit bounded Triangular distribution can obtained. probability density function cumulative density function unit bounded Triangular distribution random variable P given $$g_{P}(p)= \\frac{2p}{c} $$ ;            \\(0 \\le p < c\\) $$g_{P}(p)= \\frac{2(1-p)}{(1-c)} $$ ;    \\(c \\le p \\le 1\\) $$G_{P}(p)= \\frac{p^2}{c} $$ ;           \\(0 \\le p < c\\) $$G_{P}(p)= 1-\\frac{(1-p)^2}{(1-c)} $$ ; \\(c \\le p \\le 1\\) $$0 \\le mode=c \\le 1$$ mean variance denoted $$E[P]= \\frac{(+b+c)}{3}= \\frac{(1+c)}{3} $$ $$var[P]= \\frac{^2+b^2+c^2-ab-ac-bc}{18}= \\frac{(1+c^2-c)}{18} $$ Moments zero denoted $$E[P^r]= \\frac{2c^{r+2}}{c(r+2)}+\\frac{2(1-c^{r+1})}{(1-c)(r+1)}+\\frac{2(c^{r+2}-1)}{(1-c)(r+2)} $$ \\(r = 1,2,3,...\\) NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pTRI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2  . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299  .","code":""},{"path":"/reference/pTRI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangular Distribution Bounded Between [0,1] — pTRI","text":"","code":"#plotting the random variables and probability values col <- rainbow(4) x <- seq(0.2,0.8,by=0.2) plot(0,0,main=\"Probability density graph\",xlab=\"Random variable\", ylab=\"Probability density values\",xlim = c(0,1),ylim = c(0,3)) for (i in 1:4) { lines(seq(0,1,by=0.01),dTRI(seq(0,1,by=0.01),x[i])$pdf,col = col[i]) }   dTRI(seq(0,1,by=0.05),0.3)$pdf     #extracting the pdf values #>  [1] 0.0000000 0.3333333 0.6666667 1.0000000 1.3333333 1.6666667 2.0000000 #>  [8] 1.8571429 1.7142857 1.5714286 1.4285714 1.2857143 1.1428571 1.0000000 #> [15] 0.8571429 0.7142857 0.5714286 0.4285714 0.2857143 0.1428571 0.0000000 dTRI(seq(0,1,by=0.01),0.3)$mean    #extracting the mean #> [1] 0.4333333 dTRI(seq(0,1,by=0.01),0.3)$var     #extracting the variance #> [1] 0.04388889  #plotting the random variables and cumulative probability values col <- rainbow(4) x <- seq(0.2,0.8,by=0.2) plot(0,0,main=\"Cumulative density graph\",xlab=\"Random variable\", ylab=\"Cumulative density values\",xlim = c(0,1),ylim = c(0,1)) for (i in 1:4) { lines(seq(0,1,by=0.01),pTRI(seq(0,1,by=0.01),x[i]),col = col[i]) }   pTRI(seq(0,1,by=0.05),0.3)      #acquiring the cumulative probability values #>  [1] 0.000000000 0.008333333 0.033333333 0.075000000 0.133333333 0.208333333 #>  [7] 0.300000000 0.396428571 0.485714286 0.567857143 0.642857143 0.710714286 #> [13] 0.771428571 0.825000000 0.871428571 0.910714286 0.942857143 0.967857143 #> [19] 0.985714286 0.996428571 1.000000000 mazTRI(1.4,.3)                  #acquiring the moment about zero values #> [1] 0.4333333 mazTRI(2,.3)-mazTRI(1,.3)^2     #variance for when is mode 0.3 #> [1] 0.04388889  #only the integer value of moments is taken here because moments cannot be decimal mazTRI(1.9,0.5) #> [1] 0.5"},{"path":"/reference/pTriBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangular Binomial Distribution — pTriBin","title":"Triangular Binomial Distribution — pTriBin","text":"functions provide ability generating probability function values cumulative probability function values Triangular Binomial distribution.","code":""},{"path":"/reference/pTriBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangular Binomial Distribution — pTriBin","text":"","code":"pTriBin(x,n,mode)"},{"path":"/reference/pTriBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangular Binomial Distribution — pTriBin","text":"x vector binomial random variables n single value binomial trials mode single value mode","code":""},{"path":"/reference/pTriBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangular Binomial Distribution — pTriBin","text":"output pTriBin gives cumulative probability function values vector form.","code":""},{"path":"/reference/pTriBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Triangular Binomial Distribution — pTriBin","text":"Mixing unit bounded Triangular distribution Binomial distribution create Triangular Binomial distribution. probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{TriBin}(x)= 2 {n \\choose x}(c^{-1}B_c(x+2,n-x+1)+(1-c)^{-1}B(x+1,n-x+2)-(1-c)^{-1}B_c(x+1,n-x+2))$$ $$0 < mode=c < 1$$ $$x = 0,1,2,...n$$ $$n = 1,2,3...$$ mean, variance dispersion denoted $$E_{TriiBin}[x]= \\frac{n(1+c)}{3} $$ $$Var_{TriBin}[x]= \\frac{n(n+3)}{18}-\\frac{n(n-3)c(1-c)}{18} $$ $$dispersion= \\frac{(1-c+c^2)}{2(2+c-c^2)} $$ Defined \\(B_c(,b)=\\int^c_0 t^{-1} (1-t)^{b-1} \\,dt\\) incomplete beta integrals \\(B(,b)\\) beta function. NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pTriBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Triangular Binomial Distribution — pTriBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Karlis, D. & Xekalaki, E., 2008. Polygonal Distribution. Advances Mathematical Statistical Modeling. Boston: Birkhuser Boston, pp. 21-33. Available : doi: 10.1007/978-0-8176-4626-4_2 . Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299 .","code":""},{"path":"/reference/pTriBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangular Binomial Distribution — pTriBin","text":"","code":"#plotting the random variables and probability values col <- rainbow(7) x <- seq(0.1,0.7,by=0.1) plot(0,0,main=\"Triangular binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,.3)) for (i in 1:7) { lines(0:10,dTriBin(0:10,10,x[i])$pdf,col = col[i],lwd=2.85) points(0:10,dTriBin(0:10,10,x[i])$pdf,col = col[i],pch=16) }   dTriBin(0:10,10,.4)$pdf        #extracting the pdf values #>  [1] 0.03774136 0.07438334 0.10699425 0.13064720 0.14086322 0.13674651 #>  [7] 0.12148214 0.09984766 0.07555898 0.05048387 0.02525147 dTriBin(0:10,10,.4)$mean       #extracting the mean #> [1] 4.666667 dTriBin(0:10,10,.4)$var        #extracting the variance #> [1] 6.288889 dTriBin(0:10,10,.4)$over.dis.para  #extracting the over dispersion value #> [1] 0.1696429  #plotting the random variables and cumulative probability values col <- rainbow(7) x <- seq(0.1,0.7,by=0.1) plot(0,0,main=\"Triangular binomial probability function graph\",xlab=\"Binomial random variable\", ylab=\"Probability function values\",xlim = c(0,10),ylim = c(0,1)) for (i in 1:7) { lines(0:10,pTriBin(0:10,10,x[i]),col = col[i],lwd=2.85) points(0:10,pTriBin(0:10,10,x[i]),col = col[i],pch=16) }   pTriBin(0:10,10,.4)    #acquiring the cumulative probability values #>  [1] 0.03774136 0.11212471 0.21911896 0.34976615 0.49062937 0.62737588 #>  [7] 0.74885802 0.84870568 0.92426467 0.97474853 1.00000000"},{"path":"/reference/pUNI.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Distribution Bounded Between [0,1] — pUNI","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"functions provide ability generating probability density values, cumulative probability density values moments zero values Uniform Distribution bounded [0,1].","code":""},{"path":"/reference/pUNI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"","code":"pUNI(p)"},{"path":"/reference/pUNI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"p vector probabilities.","code":""},{"path":"/reference/pUNI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"output pUNI gives cumulative density values vector form.","code":""},{"path":"/reference/pUNI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"Setting \\(=0\\) \\(b=1\\) Uniform Distribution unit bounded Uniform Distribution can obtained. probability density function cumulative density function unit bounded Uniform Distribution random variable P given $$g_{P}(p) = 1$$    \\(0 \\le p \\le 1\\) $$G_{P}(p) = p$$    \\(0 \\le p \\le 1\\) mean variance denoted $$E[P]= \\frac{1}{+b}= 0.5$$ $$var[P]= \\frac{(b-)^2}{12}= 0.0833$$ Moments zero denoted $$E[P^r]= \\frac{e^{rb}-e^{ra}}{r(b-)}= \\frac{e^r-1}{r} $$ \\(r = 1,2,3,...\\) NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pUNI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Johnson, N. L., Kotz, S. Balakrishnan, N. (1994) Continuous Univariate Distributions, Vol. 2, Wiley Series Probability Mathematical Statistics, Wiley.","code":""},{"path":[]},{"path":"/reference/pUNI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Distribution Bounded Between [0,1] — pUNI","text":"","code":"#plotting the random variables and probability values plot(seq(0,1,by=0.01),dUNI(seq(0,1,by=0.01))$pdf,type = \"l\",main=\"Probability density graph\", xlab=\"Random variable\",ylab=\"Probability density values\")   dUNI(seq(0,1,by=0.05))$pdf     #extract the pdf values #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 dUNI(seq(0,1,by=0.01))$mean    #extract the mean #> [1] 0.5 dUNI(seq(0,1,by=0.01))$var     #extract the variance #> [1] 0.08333333  #plotting the random variables and cumulative probability values plot(seq(0,1,by=0.01),pUNI(seq(0,1,by=0.01)),type = \"l\",main=\"Cumulative density graph\", xlab=\"Random variable\",ylab=\"Cumulative density values\")   pUNI(seq(0,1,by=0.05))     #acquiring the cumulative probability values #>  [1] 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.35 0.40 0.45 0.50 0.55 0.60 0.65 0.70 #> [16] 0.75 0.80 0.85 0.90 0.95 1.00  mazUNI(c(1,2,3))    #acquiring the moment about zero values #> [1] 0.5000000 0.3333333 0.2500000  #only the integer value of moments is taken here because moments cannot be decimal mazUNI(1.9) #> [1] 0.5"},{"path":"/reference/pUniBin.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Binomial Distribution — pUniBin","title":"Uniform Binomial Distribution — pUniBin","text":"functions provide ability generating probability function values cumulative probability function values Uniform Binomial Distribution.","code":""},{"path":"/reference/pUniBin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Binomial Distribution — pUniBin","text":"","code":"pUniBin(x,n)"},{"path":"/reference/pUniBin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Binomial Distribution — pUniBin","text":"x vector binomial random variables. n single value binomial trials.","code":""},{"path":"/reference/pUniBin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Binomial Distribution — pUniBin","text":"output pUniBin gives cumulative probability function values vector form.","code":""},{"path":"/reference/pUniBin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform Binomial Distribution — pUniBin","text":"Mixing unit bounded uniform distribution binomial distribution create Uniform Binomial Distribution.  probability function cumulative probability function can constructed denoted . cumulative probability function summation probability function values. $$P_{UniBin}(x)= \\frac{1}{n+1} $$ $$n = 1,2,...$$ $$x = 0,1,2,...n$$ mean, variance dispersion denoted $$E_{UniBin}[X]= \\frac{n}{2} $$ $$Var_{UniBin}[X]= \\frac{n(n+2)}{12} $$ $$dispersion= \\frac{1}{3} $$ NOTE : input parameters given domain conditions necessary error messages provided go .","code":""},{"path":"/reference/pUniBin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Uniform Binomial Distribution — pUniBin","text":"Horsnell, G. (1957). Economic acceptance sampling schemes. Journal Royal Statistical Society, Series , 120:148-191. Okagbue, H. et al., 2014. Using Average Extreme Values Triangular Distribution Transformation, Approximant via Continuous Uniform Distribution. British Journal Mathematics & Computer Science, 4(24), pp.3497-3507. Available : doi: 10.9734/BJMCS/2014/12299 .","code":""},{"path":"/reference/pUniBin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Binomial Distribution — pUniBin","text":"","code":"#plotting the binomial random variables and probability values plot(0:10,dUniBin(0:10,10)$pdf,type=\"l\",main=\"Uniform binomial probability function graph\", xlab=\" Binomial random variable\",ylab=\"Probability function values\") points(0:10,dUniBin(0:10,10)$pdf)   dUniBin(0:300,300)$pdf  #extracting the pdf values #>   [1] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>   [7] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [13] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [19] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [25] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [31] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [37] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [43] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [49] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [55] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [61] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [67] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [73] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [79] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [85] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [91] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #>  [97] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [103] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [109] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [115] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [121] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [127] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [133] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [139] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [145] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [151] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [157] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [163] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [169] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [175] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [181] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [187] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [193] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [199] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [205] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [211] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [217] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [223] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [229] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [235] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [241] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [247] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [253] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [259] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [265] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [271] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [277] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [283] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [289] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [295] 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 0.003322259 #> [301] 0.003322259 dUniBin(0:10,10)$mean   #extracting the mean #> [1] 5 dUniBin(0:10,10)$var    #extracting the variance #> [1] 10 dUniBin(0:10,10)$over.dis.para  #extracting the over dispersion #> [1] 0.3333333  #plotting the binomial random variables and cumulative probability values plot(0:10,pUniBin(0:10,10),type=\"l\",main=\"Cumulative probability function graph\", xlab=\" Binomial random variable\",ylab=\"Cumulative probability function values\") points(0:10,pUniBin(0:10,10))   pUniBin(0:15,15)       #acquiring the cumulative probability values #>  [1] 0.0625 0.1250 0.1875 0.2500 0.3125 0.3750 0.4375 0.5000 0.5625 0.6250 #> [11] 0.6875 0.7500 0.8125 0.8750 0.9375 1.0000"},{"path":"/reference/Terror_data_ARG.html","id":null,"dir":"Reference","previous_headings":"","what":"Terror Data ARG — Terror_data_ARG","title":"Terror Data ARG — Terror_data_ARG","text":"Jenkins Johnson (1975) compiled chronology incidents international terrorism 1/1968 04/1974. period 507 incidents recorded world, 64 incidents occurred United States 65 ones Argentina.","code":""},{"path":"/reference/Terror_data_ARG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terror Data ARG — Terror_data_ARG","text":"","code":"Terror_data_ARG"},{"path":"/reference/Terror_data_ARG.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Terror Data ARG — Terror_data_ARG","text":"data frame 2 columns 9 rows Incidents Incidents Occurred fre Observed frequencies","code":""},{"path":"/reference/Terror_data_ARG.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Terror Data ARG — Terror_data_ARG","text":"Extracted Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":"/reference/Terror_data_ARG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terror Data ARG — Terror_data_ARG","text":"","code":"Terror_data_ARG$Incidents        #extracting the binomial random variables #> [1] 0 1 2 3 4 5 6 sum(Terror_data_ARG$fre)              #summing all the frequencies #> [1] 76"},{"path":"/reference/Terror_data_USA.html","id":null,"dir":"Reference","previous_headings":"","what":"Terror Data USA — Terror_data_USA","title":"Terror Data USA — Terror_data_USA","text":"Jenkins Johnson (1975) compiled chronology incidents international terrorism 1/1968 04/1974. period 507 incidents recorded world, 64 incidents occurred United States 65 ones Argentina.","code":""},{"path":"/reference/Terror_data_USA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terror Data USA — Terror_data_USA","text":"","code":"Terror_data_USA"},{"path":"/reference/Terror_data_USA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Terror Data USA — Terror_data_USA","text":"data frame 2 columns 9 rows Incidents Incidents Occurred fre Observed frequencies","code":""},{"path":"/reference/Terror_data_USA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Terror Data USA — Terror_data_USA","text":"Extracted Li, X. H., Huang, Y. Y., & Zhao, X. Y. (2011). Kumaraswamy Binomial Distribution. Chinese Journal Applied Probability Statistics, 27(5), 511-521.","code":""},{"path":"/reference/Terror_data_USA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terror Data USA — Terror_data_USA","text":"","code":"Terror_data_USA$Incidents         #extracting the binomial random variables #> [1] 0 1 2 3 4 5 sum(Terror_data_USA$fre)              #summing all the frequencies #> [1] 76"},{"path":"/news/index.html","id":"version-110","dir":"Changelog","previous_headings":"","what":"Version 1.1.0","title":"Version 1.1.0","text":"CRAN release: 2018-02-27","code":""},{"path":[]},{"path":"/news/index.html","id":"version-120","dir":"Changelog","previous_headings":"","what":"Version 1.2.0","title":"Version 1.2.0","text":"CRAN release: 2018-09-15","code":""},{"path":"/news/index.html","id":"submitted-onth-september-1-2-0","dir":"Changelog","previous_headings":"","what":"submitted on 15th September 2018.","title":"Version 1.2.0","text":"spelling mistakes examples cleared Possibility Degree freedom less equal zero considered “fitXXX” functions. Beta-Correlated Binomial distribution added new Alternate Binomial Distribution. COM Poisson Binomial distribution added new Alternate Binomial Distribution. New dataset Male_children added.","code":""},{"path":"/news/index.html","id":"version-130","dir":"Changelog","previous_headings":"","what":"Version 1.3.0","title":"Version 1.3.0","text":"CRAN release: 2019-05-07","code":""},{"path":"/news/index.html","id":"submitted-onth-may-1-3-0","dir":"Changelog","previous_headings":"","what":"submitted on 7th May 2019.","title":"Version 1.3.0","text":"Functions added Gamma distribution. Functions added Gamma Binomial distribution. Functions added Grassia II Binomial distribution. fitXXX functions now classes, useful outputs can extracted using methods. New dataset Epidemic_Cold added. Vignettes changed based changes functions. Updated R compatibility version 3.6.0.","code":""},{"path":"/news/index.html","id":"version-140","dir":"Changelog","previous_headings":"","what":"Version 1.4.0","title":"Version 1.4.0","text":"CRAN release: 2019-06-12","code":""},{"path":"/news/index.html","id":"submitted-onth-june-1-4-0","dir":"Changelog","previous_headings":"","what":"submitted on 12th June 2019","title":"Version 1.4.0","text":"updated R version limitation 3.6.0 3.5.0. removed spelling mistakes. added vignettes website. updated codecov, appveyor travis. Description file updated package website.","code":""},{"path":"/news/index.html","id":"version-141","dir":"Changelog","previous_headings":"","what":"Version 1.4.1","title":"Version 1.4.1","text":"CRAN release: 2019-07-02","code":""},{"path":"/news/index.html","id":"submitted-on-1-4-1","dir":"Changelog","previous_headings":"","what":"submitted on","title":"Version 1.4.1","text":"Updated EstMLExxx functions wrappers bbmle::mle2 function. Changed fitxxxBin warnings errors messages. Examples longer inconsistencies = <-. Article review JOSS.","code":""},{"path":"/news/index.html","id":"version-141-1","dir":"Changelog","previous_headings":"","what":"Version 1.4.1-1","title":"Version 1.4.1-1","text":"CRAN release: 2020-01-16 Resolved Additional issues mentioned noLD.","code":""},{"path":"/news/index.html","id":"version-150","dir":"Changelog","previous_headings":"","what":"Version 1.5.0","title":"Version 1.5.0","text":"Updated AIC values fixed name inheritance functions AIC overdispersion used.","code":""}]
